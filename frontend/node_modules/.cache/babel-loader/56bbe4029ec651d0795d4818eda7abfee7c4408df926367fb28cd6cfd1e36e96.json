{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\continous-authentication1\\\\continous-authentication1\\\\continous-authentication\\\\continous-authentication\\\\src\\\\ContinuousAuth.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\n// import * as faceapi from \"face-api.js\";\n// import Webcam from \"react-webcam\";\n// import axios from \"axios\";\n// import \"./ContinuousAuth.css\";\n\n// const ContinuousAuth = () => {\n//   const webcamRef = useRef(null);\n//   const [faceDetected, setFaceDetected] = useState(false);\n//   const [soundDetected, setSoundDetected] = useState(false);\n//   const [currentImage, setCurrentImage] = useState(null);\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\n//   const [examTerminated, setExamTerminated] = useState(false);\n//   const [mediaStream, setMediaStream] = useState(null);\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\n\n//   useEffect(() => {\n//     const loadModels = async () => {\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n//       console.log(\"Face Detection Model Loaded\");\n//     };\n//     loadModels();\n//   }, []);\n\n//   const getPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n//       setMediaStream(stream);\n//       setPermissionsGranted(true);\n//       setShowPermissionMessage(false);\n//       fetchIpAddress(); // Call to fetch IP address when permissions are granted\n//     } catch (error) {\n//       alert(\"Please allow access to camera and microphone.\");\n//       setShowPermissionMessage(true);\n//     }\n//   };\n\n//   const fetchIpAddress = async () => {\n//     try {\n//       const response = await fetch(\"https://api.ipify.org?format=json\");\n//       const data = await response.json();\n//       alert(`Your IP Address: ${data.ip}`);\n//     } catch (error) {\n//       console.error(\"Error fetching IP address:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (mediaStream) {\n//       const tracks = mediaStream.getTracks();\n//       tracks.forEach((track) => {\n//         track.enabled = true;\n//       });\n//     }\n//   }, [mediaStream]);\n\n//   const detectFace = async () => {\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n//       const video = webcamRef.current.video;\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n//       const isFacePresent = detections.length > 0;\n//       setFaceDetected(isFacePresent);\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       const interval = setInterval(detectFace, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [permissionsGranted]);\n\n//   useEffect(() => {\n//     if (noFaceDuration >= 15) {\n//       alert(\"⚠️ Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n//       setNoFaceDuration(0);\n//     }\n//   }, [noFaceDuration]);\n\n//   const detectSound = useCallback(() => {\n//     if (!mediaStream) return;\n\n//     const audioContext = new AudioContext();\n//     const analyser = audioContext.createAnalyser();\n//     const source = audioContext.createMediaStreamSource(mediaStream);\n//     source.connect(analyser);\n//     analyser.fftSize = 256;\n//     const bufferLength = analyser.frequencyBinCount;\n//     const dataArray = new Uint8Array(bufferLength);\n\n//     const checkSound = () => {\n//       analyser.getByteFrequencyData(dataArray);\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n//       setSoundDetected(volume > 10);\n//       requestAnimationFrame(checkSound);\n//     };\n//     checkSound();\n//   }, [mediaStream]);\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       detectSound();\n//     }\n//   }, [permissionsGranted, detectSound]);\n\n//   return (\n//     <div className=\"continuous-auth-container\">\n//       <h2>Continuous Authentication</h2>\n\n//       {showPermissionMessage && (\n//         <div className=\"permission-message\">\n//           <p>Please allow access to your camera and microphone to start the exam.</p>\n//           <button onClick={getPermissions}>Allow Camera and Microphone</button>\n//         </div>\n//       )}\n\n//       {permissionsGranted ? (\n//         <>\n//           <Webcam\n//             audio={true}\n//             ref={webcamRef}\n//             screenshotFormat=\"image/jpeg\"\n//             className=\"webcam\"\n//             videoConstraints={{\n//               facingMode: \"user\",\n//               width: 720,\n//               height: 400,\n//             }}\n//           />\n//           <p>Camera and microphone are active for proctoring.</p>\n\n//           <div className=\"status-buttons-container\">\n//             <div className=\"status-buttons\">\n//               <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\n//                 {faceDetected ? \"Face Detected ✅\" : \"No Face Detected ❌\"}\n//               </button>\n//               <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\n//                 {soundDetected ? \"Sound Detected 🔊\" : \"No Sound Detected 🔇\"}\n//               </button>\n//             </div>\n\n//             <div className=\"captured-images\">\n//               {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\n//             </div>\n//           </div>\n//         </>\n//       ) : (\n//         <p>Waiting for camera and microphone access...</p>\n//       )}\n\n//       {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\n//     </div>\n//   );\n// };\n\n// export default ContinuousAuth;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as yamnet from \"@tensorflow-models/yamnet\";\nimport Webcam from \"react-webcam\";\nimport \"./ContinuousAuth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContinuousAuth = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const [faceDetected, setFaceDetected] = useState(false);\n  const [currentImage, setCurrentImage] = useState(null);\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\n  const [examTerminated, setExamTerminated] = useState(false);\n  const [mediaStream, setMediaStream] = useState(null);\n  const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n  const [noFaceDuration, setNoFaceDuration] = useState(0);\n  const [transcript, setTranscript] = useState(\"\");\n  const [violations, setViolations] = useState(0);\n  const recognitionRef = useRef(null);\n  const yamnetModelRef = useRef(null);\n  const [detectedSounds, setDetectedSounds] = useState([]);\n  const [suspiciousActivity, setSuspiciousActivity] = useState(false);\n\n  // قائمة بأصوات مشبوهة (يمكن توسيعها حسب الحاجة)\n  const SUSPICIOUS_SOUNDS = [\"Speech\", \"Whistling\", \"Whispering\", \"Conversation\", \"Typing\", \"Computer keyboard\", \"Mouse click\", \"Alarm\"];\n  useEffect(() => {\n    const loadModels = async () => {\n      await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\"), tf.ready(), loadYamnetModel()]);\n      console.log(\"All models loaded\");\n    };\n    loadModels();\n  }, []);\n  const loadYamnetModel = async () => {\n    try {\n      yamnetModelRef.current = await yamnet.load();\n      console.log(\"YAMNet model loaded\");\n    } catch (error) {\n      console.error(\"Failed to load YAMNet model\", error);\n    }\n  };\n  const getPermissions = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: {\n          echoCancellation: false,\n          noiseSuppression: false,\n          autoGainControl: false\n        }\n      });\n      setMediaStream(stream);\n      setPermissionsGranted(true);\n      setShowPermissionMessage(false);\n      initializeSpeechRecognition();\n      startSoundAnalysis(stream);\n    } catch (error) {\n      alert(\"Please allow access to camera and microphone.\");\n      setShowPermissionMessage(true);\n    }\n  };\n  const startSoundAnalysis = async stream => {\n    if (!yamnetModelRef.current) return;\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const source = audioContext.createMediaStreamSource(stream);\n    const processor = audioContext.createScriptProcessor(16384, 1, 1);\n    source.connect(processor);\n    processor.connect(audioContext.destination);\n    processor.onaudioprocess = async e => {\n      if (!yamnetModelRef.current) return;\n      const inputData = e.inputBuffer.getChannelData(0);\n      const waveform = new Float32Array(inputData.length);\n      for (let i = 0; i < inputData.length; i++) {\n        waveform[i] = inputData[i];\n      }\n      try {\n        const result = await yamnetModelRef.current.classify(waveform);\n        processSoundResults(result);\n      } catch (error) {\n        console.error(\"Sound classification error:\", error);\n      }\n    };\n  };\n  const processSoundResults = predictions => {\n    const topPredictions = predictions.filter(p => p.score > 0.1) // تجاهل التوقعات الضعيفة\n    .sort((a, b) => b.score - a.score).slice(0, 3); // أعلى 3 توقعات\n\n    setDetectedSounds(topPredictions);\n\n    // التحقق من وجود أصوات مشبوهة\n    const hasSuspiciousSound = topPredictions.some(pred => SUSPICIOUS_SOUNDS.some(sound => pred.className.includes(sound)));\n    setSuspiciousActivity(hasSuspiciousSound);\n\n    // زيادة عدد المخالفات إذا تم اكتشاف أصوات مشبوهة\n    if (hasSuspiciousSound) {\n      const newViolations = violations + 1;\n      setViolations(newViolations);\n      if (newViolations >= 3) {\n        setExamTerminated(true);\n      }\n    }\n  };\n  const initializeSpeechRecognition = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      console.error(\"Speech Recognition API not supported in this browser\");\n      return;\n    }\n    recognitionRef.current = new SpeechRecognition();\n    recognitionRef.current.continuous = true;\n    recognitionRef.current.interimResults = false;\n    recognitionRef.current.lang = \"ar-SA\";\n    recognitionRef.current.onresult = event => {\n      const last = event.results.length - 1;\n      const text = event.results[last][0].transcript;\n      setTranscript(text);\n    };\n    recognitionRef.current.onerror = event => {\n      console.error(\"Speech recognition error\", event.error);\n    };\n    recognitionRef.current.start();\n    recognitionRef.current.onend = () => {\n      recognitionRef.current.start();\n    };\n  };\n  useEffect(() => {\n    if (mediaStream) {\n      const tracks = mediaStream.getTracks();\n      tracks.forEach(track => {\n        track.enabled = true;\n      });\n    }\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n      if (mediaStream) {\n        mediaStream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [mediaStream]);\n  const detectFace = async () => {\n    if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n      const video = webcamRef.current.video;\n      const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n      const isFacePresent = detections.length > 0;\n      setFaceDetected(isFacePresent);\n      setNoFaceDuration(prev => isFacePresent ? 0 : prev + 1);\n    }\n  };\n  useEffect(() => {\n    if (permissionsGranted) {\n      const interval = setInterval(detectFace, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [permissionsGranted]);\n  useEffect(() => {\n    if (noFaceDuration >= 15) {\n      alert(\"⚠ Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n      setNoFaceDuration(0);\n    }\n  }, [noFaceDuration]);\n  useEffect(() => {\n    if (suspiciousActivity) {\n      alert(`🚨 Suspicious sound detected! (Violation ${violations}/3)`);\n    }\n  }, [suspiciousActivity]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"continuous-auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Exam Proctoring System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), showPermissionMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"permission-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Exam Proctoring Setup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This exam requires camera and microphone access for proctoring purposes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"permission-requirements\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2713 Face detection must be enabled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2713 Microphone must be active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"permission-button\",\n        onClick: getPermissions,\n        children: \"Enable Camera & Microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }, this), permissionsGranted && !examTerminated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monitoring-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-section\",\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          audio: true,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\",\n          className: \"webcam\",\n          videoConstraints: {\n            facingMode: \"user\",\n            width: 480,\n            height: 360\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicators\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${faceDetected ? \"active\" : \"\"}`,\n            children: faceDetected ? \"Face Detected\" : \"No Face Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${detectedSounds.length > 0 ? \"active\" : \"\"}`,\n            children: detectedSounds.length > 0 ? \"Sound Detected\" : \"No Sound Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), suspiciousActivity && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator warning\",\n            children: \"Suspicious Sound Detected!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Arabic Speech Transcript\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"violation-counter\",\n              children: [\"Violations: \", violations, \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-content\",\n            dir: \"rtl\",\n            children: transcript || \"Waiting for audio input...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sound-detection-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Detected Sounds:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this), detectedSounds.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: detectedSounds.map((sound, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: SUSPICIOUS_SOUNDS.some(s => sound.className.includes(s)) ? \"suspicious\" : \"\",\n                children: [sound.className, \" (\", Math.round(sound.score * 100), \"%)\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No sounds detected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }, this), examTerminated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"termination-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u2716 Exam Terminated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Due to multiple violations detected. Please contact your instructor.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total violations: \", violations]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"violation-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Violation Details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: detectedSounds.filter(s => SUSPICIOUS_SOUNDS.some(ss => s.className.includes(ss))).map((sound, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [sound.className, \" (Score: \", Math.round(sound.score * 100), \"%)\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 5\n  }, this);\n};\n_s(ContinuousAuth, \"gGEcf93MHLZDLowS0DnBUUtHqUA=\");\n_c = ContinuousAuth;\nexport default ContinuousAuth;\nvar _c;\n$RefreshReg$(_c, \"ContinuousAuth\");","map":{"version":3,"names":["React","useState","useEffect","useRef","faceapi","tf","yamnet","Webcam","jsxDEV","_jsxDEV","ContinuousAuth","_s","webcamRef","faceDetected","setFaceDetected","currentImage","setCurrentImage","permissionsGranted","setPermissionsGranted","examTerminated","setExamTerminated","mediaStream","setMediaStream","showPermissionMessage","setShowPermissionMessage","noFaceDuration","setNoFaceDuration","transcript","setTranscript","violations","setViolations","recognitionRef","yamnetModelRef","detectedSounds","setDetectedSounds","suspiciousActivity","setSuspiciousActivity","SUSPICIOUS_SOUNDS","loadModels","Promise","all","nets","tinyFaceDetector","loadFromUri","ready","loadYamnetModel","console","log","current","load","error","getPermissions","stream","navigator","mediaDevices","getUserMedia","video","audio","echoCancellation","noiseSuppression","autoGainControl","initializeSpeechRecognition","startSoundAnalysis","alert","audioContext","window","AudioContext","webkitAudioContext","source","createMediaStreamSource","processor","createScriptProcessor","connect","destination","onaudioprocess","e","inputData","inputBuffer","getChannelData","waveform","Float32Array","length","i","result","classify","processSoundResults","predictions","topPredictions","filter","p","score","sort","a","b","slice","hasSuspiciousSound","some","pred","sound","className","includes","newViolations","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","last","results","text","onerror","start","onend","tracks","getTracks","forEach","track","enabled","stop","detectFace","readyState","detections","detectAllFaces","TinyFaceDetectorOptions","isFacePresent","prev","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","screenshotFormat","videoConstraints","facingMode","width","height","dir","map","index","s","Math","round","ss","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/continous-authentication1/continous-authentication1/continous-authentication/continous-authentication/src/ContinuousAuth.js"],"sourcesContent":["// import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n// import * as faceapi from \"face-api.js\";\r\n// import Webcam from \"react-webcam\";\r\n// import axios from \"axios\";\r\n// import \"./ContinuousAuth.css\";\r\n\r\n// const ContinuousAuth = () => {\r\n//   const webcamRef = useRef(null);\r\n//   const [faceDetected, setFaceDetected] = useState(false);\r\n//   const [soundDetected, setSoundDetected] = useState(false);\r\n//   const [currentImage, setCurrentImage] = useState(null);\r\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n//   const [examTerminated, setExamTerminated] = useState(false);\r\n//   const [mediaStream, setMediaStream] = useState(null);\r\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     const loadModels = async () => {\r\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n//       console.log(\"Face Detection Model Loaded\");\r\n//     };\r\n//     loadModels();\r\n//   }, []);\r\n\r\n//   const getPermissions = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n//       setMediaStream(stream);\r\n//       setPermissionsGranted(true);\r\n//       setShowPermissionMessage(false);\r\n//       fetchIpAddress(); // Call to fetch IP address when permissions are granted\r\n//     } catch (error) {\r\n//       alert(\"Please allow access to camera and microphone.\");\r\n//       setShowPermissionMessage(true);\r\n//     }\r\n//   };\r\n\r\n//   const fetchIpAddress = async () => {\r\n//     try {\r\n//       const response = await fetch(\"https://api.ipify.org?format=json\");\r\n//       const data = await response.json();\r\n//       alert(`Your IP Address: ${data.ip}`);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching IP address:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (mediaStream) {\r\n//       const tracks = mediaStream.getTracks();\r\n//       tracks.forEach((track) => {\r\n//         track.enabled = true;\r\n//       });\r\n//     }\r\n//   }, [mediaStream]);\r\n\r\n//   const detectFace = async () => {\r\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n//       const video = webcamRef.current.video;\r\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n//       const isFacePresent = detections.length > 0;\r\n//       setFaceDetected(isFacePresent);\r\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       const interval = setInterval(detectFace, 1000);\r\n//       return () => clearInterval(interval);\r\n//     }\r\n//   }, [permissionsGranted]);\r\n\r\n//   useEffect(() => {\r\n//     if (noFaceDuration >= 15) {\r\n//       alert(\"⚠️ Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n//       setNoFaceDuration(0);\r\n//     }\r\n//   }, [noFaceDuration]);\r\n\r\n//   const detectSound = useCallback(() => {\r\n//     if (!mediaStream) return;\r\n\r\n//     const audioContext = new AudioContext();\r\n//     const analyser = audioContext.createAnalyser();\r\n//     const source = audioContext.createMediaStreamSource(mediaStream);\r\n//     source.connect(analyser);\r\n//     analyser.fftSize = 256;\r\n//     const bufferLength = analyser.frequencyBinCount;\r\n//     const dataArray = new Uint8Array(bufferLength);\r\n\r\n//     const checkSound = () => {\r\n//       analyser.getByteFrequencyData(dataArray);\r\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n//       setSoundDetected(volume > 10);\r\n//       requestAnimationFrame(checkSound);\r\n//     };\r\n//     checkSound();\r\n//   }, [mediaStream]);\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       detectSound();\r\n//     }\r\n//   }, [permissionsGranted, detectSound]);\r\n\r\n//   return (\r\n//     <div className=\"continuous-auth-container\">\r\n//       <h2>Continuous Authentication</h2>\r\n\r\n//       {showPermissionMessage && (\r\n//         <div className=\"permission-message\">\r\n//           <p>Please allow access to your camera and microphone to start the exam.</p>\r\n//           <button onClick={getPermissions}>Allow Camera and Microphone</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {permissionsGranted ? (\r\n//         <>\r\n//           <Webcam\r\n//             audio={true}\r\n//             ref={webcamRef}\r\n//             screenshotFormat=\"image/jpeg\"\r\n//             className=\"webcam\"\r\n//             videoConstraints={{\r\n//               facingMode: \"user\",\r\n//               width: 720,\r\n//               height: 400,\r\n//             }}\r\n//           />\r\n//           <p>Camera and microphone are active for proctoring.</p>\r\n\r\n//           <div className=\"status-buttons-container\">\r\n//             <div className=\"status-buttons\">\r\n//               <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n//                 {faceDetected ? \"Face Detected ✅\" : \"No Face Detected ❌\"}\r\n//               </button>\r\n//               <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n//                 {soundDetected ? \"Sound Detected 🔊\" : \"No Sound Detected 🔇\"}\r\n//               </button>\r\n//             </div>\r\n\r\n//             <div className=\"captured-images\">\r\n//               {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\r\n//             </div>\r\n//           </div>\r\n//         </>\r\n//       ) : (\r\n//         <p>Waiting for camera and microphone access...</p>\r\n//       )}\r\n\r\n//       {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as yamnet from \"@tensorflow-models/yamnet\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./ContinuousAuth.css\";\r\n\r\nconst ContinuousAuth = () => {\r\n  const webcamRef = useRef(null);\r\n  const [faceDetected, setFaceDetected] = useState(false);\r\n  const [currentImage, setCurrentImage] = useState(null);\r\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n  const [examTerminated, setExamTerminated] = useState(false);\r\n  const [mediaStream, setMediaStream] = useState(null);\r\n  const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n  const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n  const [transcript, setTranscript] = useState(\"\");\r\n  const [violations, setViolations] = useState(0);\r\n  const recognitionRef = useRef(null);\r\n  const yamnetModelRef = useRef(null);\r\n  const [detectedSounds, setDetectedSounds] = useState([]);\r\n  const [suspiciousActivity, setSuspiciousActivity] = useState(false);\r\n\r\n  // قائمة بأصوات مشبوهة (يمكن توسيعها حسب الحاجة)\r\n  const SUSPICIOUS_SOUNDS = [\r\n    \"Speech\", \"Whistling\", \"Whispering\", \"Conversation\", \r\n    \"Typing\", \"Computer keyboard\", \"Mouse click\", \"Alarm\"\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      await Promise.all([\r\n        faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\"),\r\n        tf.ready(),\r\n        loadYamnetModel()\r\n      ]);\r\n      console.log(\"All models loaded\");\r\n    };\r\n    loadModels();\r\n  }, []);\r\n\r\n  const loadYamnetModel = async () => {\r\n    try {\r\n      yamnetModelRef.current = await yamnet.load();\r\n      console.log(\"YAMNet model loaded\");\r\n    } catch (error) {\r\n      console.error(\"Failed to load YAMNet model\", error);\r\n    }\r\n  };\r\n\r\n  const getPermissions = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        video: true, \r\n        audio: {\r\n          echoCancellation: false,\r\n          noiseSuppression: false,\r\n          autoGainControl: false\r\n        }\r\n      });\r\n      setMediaStream(stream);\r\n      setPermissionsGranted(true);\r\n      setShowPermissionMessage(false);\r\n      initializeSpeechRecognition();\r\n      startSoundAnalysis(stream);\r\n    } catch (error) {\r\n      alert(\"Please allow access to camera and microphone.\");\r\n      setShowPermissionMessage(true);\r\n    }\r\n  };\r\n\r\n  const startSoundAnalysis = async (stream) => {\r\n    if (!yamnetModelRef.current) return;\r\n\r\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n    const source = audioContext.createMediaStreamSource(stream);\r\n    const processor = audioContext.createScriptProcessor(16384, 1, 1);\r\n\r\n    source.connect(processor);\r\n    processor.connect(audioContext.destination);\r\n\r\n    processor.onaudioprocess = async (e) => {\r\n      if (!yamnetModelRef.current) return;\r\n\r\n      const inputData = e.inputBuffer.getChannelData(0);\r\n      const waveform = new Float32Array(inputData.length);\r\n      for (let i = 0; i < inputData.length; i++) {\r\n        waveform[i] = inputData[i];\r\n      }\r\n\r\n      try {\r\n        const result = await yamnetModelRef.current.classify(waveform);\r\n        processSoundResults(result);\r\n      } catch (error) {\r\n        console.error(\"Sound classification error:\", error);\r\n      }\r\n    };\r\n  };\r\n\r\n  const processSoundResults = (predictions) => {\r\n    const topPredictions = predictions\r\n      .filter(p => p.score > 0.1) // تجاهل التوقعات الضعيفة\r\n      .sort((a, b) => b.score - a.score)\r\n      .slice(0, 3); // أعلى 3 توقعات\r\n\r\n    setDetectedSounds(topPredictions);\r\n\r\n    // التحقق من وجود أصوات مشبوهة\r\n    const hasSuspiciousSound = topPredictions.some(pred => \r\n      SUSPICIOUS_SOUNDS.some(sound => pred.className.includes(sound))\r\n    );\r\n\r\n    setSuspiciousActivity(hasSuspiciousSound);\r\n\r\n    // زيادة عدد المخالفات إذا تم اكتشاف أصوات مشبوهة\r\n    if (hasSuspiciousSound) {\r\n      const newViolations = violations + 1;\r\n      setViolations(newViolations);\r\n      \r\n      if (newViolations >= 3) {\r\n        setExamTerminated(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const initializeSpeechRecognition = () => {\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if (!SpeechRecognition) {\r\n      console.error(\"Speech Recognition API not supported in this browser\");\r\n      return;\r\n    }\r\n\r\n    recognitionRef.current = new SpeechRecognition();\r\n    recognitionRef.current.continuous = true;\r\n    recognitionRef.current.interimResults = false;\r\n    recognitionRef.current.lang = \"ar-SA\";\r\n\r\n    recognitionRef.current.onresult = (event) => {\r\n      const last = event.results.length - 1;\r\n      const text = event.results[last][0].transcript;\r\n      setTranscript(text);\r\n    };\r\n\r\n    recognitionRef.current.onerror = (event) => {\r\n      console.error(\"Speech recognition error\", event.error);\r\n    };\r\n\r\n    recognitionRef.current.start();\r\n    recognitionRef.current.onend = () => {\r\n      recognitionRef.current.start();\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mediaStream) {\r\n      const tracks = mediaStream.getTracks();\r\n      tracks.forEach((track) => {\r\n        track.enabled = true;\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (recognitionRef.current) {\r\n        recognitionRef.current.stop();\r\n      }\r\n      if (mediaStream) {\r\n        mediaStream.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, [mediaStream]);\r\n\r\n  const detectFace = async () => {\r\n    if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n      const video = webcamRef.current.video;\r\n      const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n      const isFacePresent = detections.length > 0;\r\n      setFaceDetected(isFacePresent);\r\n      setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (permissionsGranted) {\r\n      const interval = setInterval(detectFace, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [permissionsGranted]);\r\n\r\n  useEffect(() => {\r\n    if (noFaceDuration >= 15) {\r\n      alert(\"⚠ Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n      setNoFaceDuration(0);\r\n    }\r\n  }, [noFaceDuration]);\r\n\r\n  useEffect(() => {\r\n    if (suspiciousActivity) {\r\n      alert(`🚨 Suspicious sound detected! (Violation ${violations}/3)`);\r\n    }\r\n  }, [suspiciousActivity]);\r\n\r\n  return (\r\n    <div className=\"continuous-auth-container\">\r\n      <h2>Exam Proctoring System</h2>\r\n\r\n      {showPermissionMessage && (\r\n        <div className=\"permission-message\">\r\n          <h3>Exam Proctoring Setup</h3>\r\n          <p>This exam requires camera and microphone access for proctoring purposes.</p>\r\n          <div className=\"permission-requirements\">\r\n            <p>✓ Face detection must be enabled</p>\r\n            <p>✓ Microphone must be active</p>\r\n          </div>\r\n          <button className=\"permission-button\" onClick={getPermissions}>\r\n            Enable Camera & Microphone\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {permissionsGranted && !examTerminated && (\r\n        <div className=\"monitoring-container\">\r\n          <div className=\"video-section\">\r\n            <Webcam\r\n              audio={true}\r\n              ref={webcamRef}\r\n              screenshotFormat=\"image/jpeg\"\r\n              className=\"webcam\"\r\n              videoConstraints={{\r\n                facingMode: \"user\",\r\n                width: 480,\r\n                height: 360,\r\n              }}\r\n            />\r\n            <div className=\"status-indicators\">\r\n              <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\r\n                {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\r\n              </div>\r\n              <div className={`status-indicator ${detectedSounds.length > 0 ? \"active\" : \"\"}`}>\r\n                {detectedSounds.length > 0 ? \"Sound Detected\" : \"No Sound Detected\"}\r\n              </div>\r\n              {suspiciousActivity && (\r\n                <div className=\"status-indicator warning\">\r\n                  Suspicious Sound Detected!\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"transcript-section\">\r\n            <div className=\"transcript-box\">\r\n              <div className=\"transcript-header\">\r\n                <span>Arabic Speech Transcript</span>\r\n                <span className=\"violation-counter\">Violations: {violations}/3</span>\r\n              </div>\r\n              <div className=\"transcript-content\" dir=\"rtl\">\r\n                {transcript || \"Waiting for audio input...\"}\r\n              </div>\r\n              <div className=\"sound-detection-results\">\r\n                <h4>Detected Sounds:</h4>\r\n                {detectedSounds.length > 0 ? (\r\n                  <ul>\r\n                    {detectedSounds.map((sound, index) => (\r\n                      <li key={index} className={SUSPICIOUS_SOUNDS.some(s => sound.className.includes(s)) ? \"suspicious\" : \"\"}>\r\n                        {sound.className} ({Math.round(sound.score * 100)}%)\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                ) : (\r\n                  <p>No sounds detected</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {examTerminated && (\r\n        <div className=\"termination-message\">\r\n          <h3>✖ Exam Terminated</h3>\r\n          <p>Due to multiple violations detected. Please contact your instructor.</p>\r\n          <p>Total violations: {violations}</p>\r\n          <div className=\"violation-details\">\r\n            <h4>Violation Details:</h4>\r\n            <ul>\r\n              {detectedSounds.filter(s => SUSPICIOUS_SOUNDS.some(ss => s.className.includes(ss)))\r\n                .map((sound, index) => (\r\n                  <li key={index}>{sound.className} (Score: {Math.round(sound.score * 100)}%)</li>\r\n                ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContinuousAuth;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAUA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,KAAKC,OAAO,MAAM,aAAa;AACtC,OAAO,KAAKC,EAAE,MAAM,kBAAkB;AACtC,OAAO,KAAKC,MAAM,MAAM,2BAA2B;AACnD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACgB,kBAAkB,EAAEC,qBAAqB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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}