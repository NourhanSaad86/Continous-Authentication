{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\continous-authentication1\\\\continous-authentication1\\\\continous-authentication\\\\continous-authentication\\\\src\\\\ContinuousAuth.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\n// import * as faceapi from \"face-api.js\";\n// import Webcam from \"react-webcam\";\n// import axios from \"axios\";\n// import \"./ContinuousAuth.css\";\n\n// const ContinuousAuth = () => {\n//   const webcamRef = useRef(null);\n//   const [faceDetected, setFaceDetected] = useState(false);\n//   const [soundDetected, setSoundDetected] = useState(false);\n//   const [currentImage, setCurrentImage] = useState(null);\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\n//   const [examTerminated, setExamTerminated] = useState(false);\n//   const [mediaStream, setMediaStream] = useState(null);\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\n\n//   useEffect(() => {\n//     const loadModels = async () => {\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n//       console.log(\"Face Detection Model Loaded\");\n//     };\n//     loadModels();\n//   }, []);\n\n//   const getPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n//       setMediaStream(stream);\n//       setPermissionsGranted(true);\n//       setShowPermissionMessage(false);\n//       fetchIpAddress(); // Call to fetch IP address when permissions are granted\n//     } catch (error) {\n//       alert(\"Please allow access to camera and microphone.\");\n//       setShowPermissionMessage(true);\n//     }\n//   };\n\n//   const fetchIpAddress = async () => {\n//     try {\n//       const response = await fetch(\"https://api.ipify.org?format=json\");\n//       const data = await response.json();\n//       alert(`Your IP Address: ${data.ip}`);\n//     } catch (error) {\n//       console.error(\"Error fetching IP address:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (mediaStream) {\n//       const tracks = mediaStream.getTracks();\n//       tracks.forEach((track) => {\n//         track.enabled = true;\n//       });\n//     }\n//   }, [mediaStream]);\n\n//   const detectFace = async () => {\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n//       const video = webcamRef.current.video;\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n//       const isFacePresent = detections.length > 0;\n//       setFaceDetected(isFacePresent);\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       const interval = setInterval(detectFace, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [permissionsGranted]);\n\n//   useEffect(() => {\n//     if (noFaceDuration >= 15) {\n//       alert(\"‚ö†Ô∏è Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n//       setNoFaceDuration(0);\n//     }\n//   }, [noFaceDuration]);\n\n//   const detectSound = useCallback(() => {\n//     if (!mediaStream) return;\n\n//     const audioContext = new AudioContext();\n//     const analyser = audioContext.createAnalyser();\n//     const source = audioContext.createMediaStreamSource(mediaStream);\n//     source.connect(analyser);\n//     analyser.fftSize = 256;\n//     const bufferLength = analyser.frequencyBinCount;\n//     const dataArray = new Uint8Array(bufferLength);\n\n//     const checkSound = () => {\n//       analyser.getByteFrequencyData(dataArray);\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n//       setSoundDetected(volume > 10);\n//       requestAnimationFrame(checkSound);\n//     };\n//     checkSound();\n//   }, [mediaStream]);\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       detectSound();\n//     }\n//   }, [permissionsGranted, detectSound]);\n\n//   return (\n//     <div className=\"continuous-auth-container\">\n//       <h2>Continuous Authentication</h2>\n\n//       {showPermissionMessage && (\n//         <div className=\"permission-message\">\n//           <p>Please allow access to your camera and microphone to start the exam.</p>\n//           <button onClick={getPermissions}>Allow Camera and Microphone</button>\n//         </div>\n//       )}\n\n//       {permissionsGranted ? (\n//         <>\n//           <Webcam\n//             audio={true}\n//             ref={webcamRef}\n//             screenshotFormat=\"image/jpeg\"\n//             className=\"webcam\"\n//             videoConstraints={{\n//               facingMode: \"user\",\n//               width: 720,\n//               height: 400,\n//             }}\n//           />\n//           <p>Camera and microphone are active for proctoring.</p>\n\n//           <div className=\"status-buttons-container\">\n//             <div className=\"status-buttons\">\n//               <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\n//                 {faceDetected ? \"Face Detected ‚úÖ\" : \"No Face Detected ‚ùå\"}\n//               </button>\n//               <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\n//                 {soundDetected ? \"Sound Detected üîä\" : \"No Sound Detected üîá\"}\n//               </button>\n//             </div>\n\n//             <div className=\"captured-images\">\n//               {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\n//             </div>\n//           </div>\n//         </>\n//       ) : (\n//         <p>Waiting for camera and microphone access...</p>\n//       )}\n\n//       {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\n//     </div>\n//   );\n// };\n\n// export default ContinuousAuth;\n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport Webcam from \"react-webcam\";\nimport axios from \"axios\";\nimport \"./ContinuousAuth.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContinuousAuth = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const [faceDetected, setFaceDetected] = useState(false);\n  const [soundDetected, setSoundDetected] = useState(false);\n  const [currentImage, setCurrentImage] = useState(null);\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\n  const [examTerminated, setExamTerminated] = useState(false);\n  const [mediaStream, setMediaStream] = useState(null);\n  const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n  const [noFaceDuration, setNoFaceDuration] = useState(0);\n\n  // New state for handling speech to text\n  const [spokenText, setSpokenText] = useState(\"\");\n\n  // Initialize SpeechRecognition\n  const recognition = useRef(null);\n  useEffect(() => {\n    const loadModels = async () => {\n      await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n      console.log(\"Face Detection Model Loaded\");\n    };\n    loadModels();\n\n    // Initialize speech recognition\n    if (!(\"webkitSpeechRecognition\" in window)) {\n      alert(\"Speech Recognition is not supported in your browser.\");\n    } else {\n      recognition.current = new window.webkitSpeechRecognition();\n      recognition.current.lang = \"ar-SA\"; // Set language to Arabic\n      recognition.current.continuous = true;\n      recognition.current.interimResults = true;\n      recognition.current.onresult = event => {\n        const transcript = event.results[event.results.length - 1][0].transcript;\n        setSpokenText(prevText => prevText + \" \" + transcript); // Update text with new speech input\n      };\n      recognition.current.onerror = event => {\n        console.error(\"Speech Recognition Error\", event);\n      };\n    }\n  }, []);\n  const getPermissions = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      setMediaStream(stream);\n      setPermissionsGranted(true);\n      setShowPermissionMessage(false);\n      fetchIpAddress(); // Call to fetch IP address when permissions are granted\n    } catch (error) {\n      alert(\"Please allow access to camera and microphone.\");\n      setShowPermissionMessage(true);\n    }\n  };\n  const fetchIpAddress = async () => {\n    try {\n      const response = await fetch(\"https://api.ipify.org?format=json\");\n      const data = await response.json();\n      alert(`Your IP Address: ${data.ip}`);\n    } catch (error) {\n      console.error(\"Error fetching IP address:\", error);\n    }\n  };\n  useEffect(() => {\n    if (mediaStream) {\n      const tracks = mediaStream.getTracks();\n      tracks.forEach(track => {\n        track.enabled = true;\n      });\n    }\n  }, [mediaStream]);\n  const detectFace = async () => {\n    if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n      const video = webcamRef.current.video;\n      const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n      const isFacePresent = detections.length > 0;\n      setFaceDetected(isFacePresent);\n      setNoFaceDuration(prev => isFacePresent ? 0 : prev + 1);\n    }\n  };\n  useEffect(() => {\n    if (permissionsGranted) {\n      const interval = setInterval(detectFace, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [permissionsGranted]);\n  useEffect(() => {\n    if (noFaceDuration >= 15) {\n      alert(\"‚ö†Ô∏è Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n      setNoFaceDuration(0);\n    }\n  }, [noFaceDuration]);\n  const detectSound = useCallback(() => {\n    if (!mediaStream) return;\n    const audioContext = new AudioContext();\n    const analyser = audioContext.createAnalyser();\n    const source = audioContext.createMediaStreamSource(mediaStream);\n    source.connect(analyser);\n    analyser.fftSize = 256;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const checkSound = () => {\n      analyser.getByteFrequencyData(dataArray);\n      const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n      setSoundDetected(volume > 10);\n      requestAnimationFrame(checkSound);\n    };\n    checkSound();\n  }, [mediaStream]);\n  useEffect(() => {\n    if (permissionsGranted) {\n      detectSound();\n    }\n  }, [permissionsGranted, detectSound]);\n\n  // Start Speech Recognition\n  const startRecognition = () => {\n    if (recognition.current) {\n      recognition.current.start();\n    }\n  };\n\n  // Stop Speech Recognition\n  const stopRecognition = () => {\n    if (recognition.current) {\n      recognition.current.stop();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"continuous-auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Continuous Authentication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), showPermissionMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"permission-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please allow access to your camera and microphone to start the exam.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getPermissions,\n        children: \"Allow Camera and Microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }, this), permissionsGranted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: true,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        className: \"webcam\",\n        videoConstraints: {\n          facingMode: \"user\",\n          width: 720,\n          height: 400\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Camera and microphone are active for proctoring.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: faceDetected ? \"detected-btn\" : \"not-detected-btn\",\n            children: faceDetected ? \"Face Detected ‚úÖ\" : \"No Face Detected ‚ùå\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: soundDetected ? \"detected-btn\" : \"not-detected-btn\",\n            children: soundDetected ? \"Sound Detected üîä\" : \"No Sound Detected üîá\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"captured-images\",\n          children: currentImage && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: currentImage,\n            alt: \"Captured\",\n            className: \"small-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"speech-to-text-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startRecognition,\n          children: \"Start Speaking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopRecognition,\n          children: \"Stop Speaking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spoken-text\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: spokenText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for camera and microphone access...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this), examTerminated && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mismatch-count\",\n      children: \"Exam Terminated due to 3 mismatches.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n};\n_s(ContinuousAuth, \"joALpHjUBjl5IQ6/TD2uiv5SDfg=\");\n_c = ContinuousAuth;\nexport default ContinuousAuth;\nvar _c;\n$RefreshReg$(_c, \"ContinuousAuth\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","faceapi","Webcam","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ContinuousAuth","_s","webcamRef","faceDetected","setFaceDetected","soundDetected","setSoundDetected","currentImage","setCurrentImage","permissionsGranted","setPermissionsGranted","examTerminated","setExamTerminated","mediaStream","setMediaStream","showPermissionMessage","setShowPermissionMessage","noFaceDuration","setNoFaceDuration","spokenText","setSpokenText","recognition","loadModels","nets","tinyFaceDetector","loadFromUri","console","log","window","alert","current","webkitSpeechRecognition","lang","continuous","interimResults","onresult","event","transcript","results","length","prevText","onerror","error","getPermissions","stream","navigator","mediaDevices","getUserMedia","video","audio","fetchIpAddress","response","fetch","data","json","ip","tracks","getTracks","forEach","track","enabled","detectFace","readyState","detections","detectAllFaces","TinyFaceDetectorOptions","isFacePresent","prev","interval","setInterval","clearInterval","detectSound","audioContext","AudioContext","analyser","createAnalyser","source","createMediaStreamSource","connect","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","checkSound","getByteFrequencyData","volume","reduce","sum","value","requestAnimationFrame","startRecognition","start","stopRecognition","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","screenshotFormat","videoConstraints","facingMode","width","height","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/continous-authentication1/continous-authentication1/continous-authentication/continous-authentication/src/ContinuousAuth.js"],"sourcesContent":["// import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n// import * as faceapi from \"face-api.js\";\r\n// import Webcam from \"react-webcam\";\r\n// import axios from \"axios\";\r\n// import \"./ContinuousAuth.css\";\r\n\r\n// const ContinuousAuth = () => {\r\n//   const webcamRef = useRef(null);\r\n//   const [faceDetected, setFaceDetected] = useState(false);\r\n//   const [soundDetected, setSoundDetected] = useState(false);\r\n//   const [currentImage, setCurrentImage] = useState(null);\r\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n//   const [examTerminated, setExamTerminated] = useState(false);\r\n//   const [mediaStream, setMediaStream] = useState(null);\r\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     const loadModels = async () => {\r\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n//       console.log(\"Face Detection Model Loaded\");\r\n//     };\r\n//     loadModels();\r\n//   }, []);\r\n\r\n//   const getPermissions = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n//       setMediaStream(stream);\r\n//       setPermissionsGranted(true);\r\n//       setShowPermissionMessage(false);\r\n//       fetchIpAddress(); // Call to fetch IP address when permissions are granted\r\n//     } catch (error) {\r\n//       alert(\"Please allow access to camera and microphone.\");\r\n//       setShowPermissionMessage(true);\r\n//     }\r\n//   };\r\n\r\n//   const fetchIpAddress = async () => {\r\n//     try {\r\n//       const response = await fetch(\"https://api.ipify.org?format=json\");\r\n//       const data = await response.json();\r\n//       alert(`Your IP Address: ${data.ip}`);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching IP address:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (mediaStream) {\r\n//       const tracks = mediaStream.getTracks();\r\n//       tracks.forEach((track) => {\r\n//         track.enabled = true;\r\n//       });\r\n//     }\r\n//   }, [mediaStream]);\r\n\r\n//   const detectFace = async () => {\r\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n//       const video = webcamRef.current.video;\r\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n//       const isFacePresent = detections.length > 0;\r\n//       setFaceDetected(isFacePresent);\r\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       const interval = setInterval(detectFace, 1000);\r\n//       return () => clearInterval(interval);\r\n//     }\r\n//   }, [permissionsGranted]);\r\n\r\n//   useEffect(() => {\r\n//     if (noFaceDuration >= 15) {\r\n//       alert(\"‚ö†Ô∏è Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n//       setNoFaceDuration(0);\r\n//     }\r\n//   }, [noFaceDuration]);\r\n\r\n//   const detectSound = useCallback(() => {\r\n//     if (!mediaStream) return;\r\n\r\n//     const audioContext = new AudioContext();\r\n//     const analyser = audioContext.createAnalyser();\r\n//     const source = audioContext.createMediaStreamSource(mediaStream);\r\n//     source.connect(analyser);\r\n//     analyser.fftSize = 256;\r\n//     const bufferLength = analyser.frequencyBinCount;\r\n//     const dataArray = new Uint8Array(bufferLength);\r\n\r\n//     const checkSound = () => {\r\n//       analyser.getByteFrequencyData(dataArray);\r\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n//       setSoundDetected(volume > 10);\r\n//       requestAnimationFrame(checkSound);\r\n//     };\r\n//     checkSound();\r\n//   }, [mediaStream]);\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       detectSound();\r\n//     }\r\n//   }, [permissionsGranted, detectSound]);\r\n\r\n//   return (\r\n//     <div className=\"continuous-auth-container\">\r\n//       <h2>Continuous Authentication</h2>\r\n\r\n//       {showPermissionMessage && (\r\n//         <div className=\"permission-message\">\r\n//           <p>Please allow access to your camera and microphone to start the exam.</p>\r\n//           <button onClick={getPermissions}>Allow Camera and Microphone</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {permissionsGranted ? (\r\n//         <>\r\n//           <Webcam\r\n//             audio={true}\r\n//             ref={webcamRef}\r\n//             screenshotFormat=\"image/jpeg\"\r\n//             className=\"webcam\"\r\n//             videoConstraints={{\r\n//               facingMode: \"user\",\r\n//               width: 720,\r\n//               height: 400,\r\n//             }}\r\n//           />\r\n//           <p>Camera and microphone are active for proctoring.</p>\r\n\r\n//           <div className=\"status-buttons-container\">\r\n//             <div className=\"status-buttons\">\r\n//               <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n//                 {faceDetected ? \"Face Detected ‚úÖ\" : \"No Face Detected ‚ùå\"}\r\n//               </button>\r\n//               <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n//                 {soundDetected ? \"Sound Detected üîä\" : \"No Sound Detected üîá\"}\r\n//               </button>\r\n//             </div>\r\n\r\n//             <div className=\"captured-images\">\r\n//               {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\r\n//             </div>\r\n//           </div>\r\n//         </>\r\n//       ) : (\r\n//         <p>Waiting for camera and microphone access...</p>\r\n//       )}\r\n\r\n//       {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport Webcam from \"react-webcam\";\r\nimport axios from \"axios\";\r\nimport \"./ContinuousAuth.css\";\r\n\r\nconst ContinuousAuth = () => {\r\n  const webcamRef = useRef(null);\r\n  const [faceDetected, setFaceDetected] = useState(false);\r\n  const [soundDetected, setSoundDetected] = useState(false);\r\n  const [currentImage, setCurrentImage] = useState(null);\r\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n  const [examTerminated, setExamTerminated] = useState(false);\r\n  const [mediaStream, setMediaStream] = useState(null);\r\n  const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n  const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n\r\n  // New state for handling speech to text\r\n  const [spokenText, setSpokenText] = useState(\"\");\r\n\r\n  // Initialize SpeechRecognition\r\n  const recognition = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n      console.log(\"Face Detection Model Loaded\");\r\n    };\r\n    loadModels();\r\n\r\n    // Initialize speech recognition\r\n    if (!(\"webkitSpeechRecognition\" in window)) {\r\n      alert(\"Speech Recognition is not supported in your browser.\");\r\n    } else {\r\n      recognition.current = new window.webkitSpeechRecognition();\r\n      recognition.current.lang = \"ar-SA\"; // Set language to Arabic\r\n      recognition.current.continuous = true;\r\n      recognition.current.interimResults = true;\r\n\r\n      recognition.current.onresult = (event) => {\r\n        const transcript = event.results[event.results.length - 1][0].transcript;\r\n        setSpokenText((prevText) => prevText + \" \" + transcript); // Update text with new speech input\r\n      };\r\n\r\n      recognition.current.onerror = (event) => {\r\n        console.error(\"Speech Recognition Error\", event);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const getPermissions = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n      setMediaStream(stream);\r\n      setPermissionsGranted(true);\r\n      setShowPermissionMessage(false);\r\n      fetchIpAddress(); // Call to fetch IP address when permissions are granted\r\n    } catch (error) {\r\n      alert(\"Please allow access to camera and microphone.\");\r\n      setShowPermissionMessage(true);\r\n    }\r\n  };\r\n\r\n  const fetchIpAddress = async () => {\r\n    try {\r\n      const response = await fetch(\"https://api.ipify.org?format=json\");\r\n      const data = await response.json();\r\n      alert(`Your IP Address: ${data.ip}`);\r\n    } catch (error) {\r\n      console.error(\"Error fetching IP address:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mediaStream) {\r\n      const tracks = mediaStream.getTracks();\r\n      tracks.forEach((track) => {\r\n        track.enabled = true;\r\n      });\r\n    }\r\n  }, [mediaStream]);\r\n\r\n  const detectFace = async () => {\r\n    if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n      const video = webcamRef.current.video;\r\n      const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n      const isFacePresent = detections.length > 0;\r\n      setFaceDetected(isFacePresent);\r\n      setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (permissionsGranted) {\r\n      const interval = setInterval(detectFace, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [permissionsGranted]);\r\n\r\n  useEffect(() => {\r\n    if (noFaceDuration >= 15) {\r\n      alert(\"‚ö†Ô∏è Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n      setNoFaceDuration(0);\r\n    }\r\n  }, [noFaceDuration]);\r\n\r\n  const detectSound = useCallback(() => {\r\n    if (!mediaStream) return;\r\n\r\n    const audioContext = new AudioContext();\r\n    const analyser = audioContext.createAnalyser();\r\n    const source = audioContext.createMediaStreamSource(mediaStream);\r\n    source.connect(analyser);\r\n    analyser.fftSize = 256;\r\n    const bufferLength = analyser.frequencyBinCount;\r\n    const dataArray = new Uint8Array(bufferLength);\r\n\r\n    const checkSound = () => {\r\n      analyser.getByteFrequencyData(dataArray);\r\n      const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n      setSoundDetected(volume > 10);\r\n      requestAnimationFrame(checkSound);\r\n    };\r\n    checkSound();\r\n  }, [mediaStream]);\r\n\r\n  useEffect(() => {\r\n    if (permissionsGranted) {\r\n      detectSound();\r\n    }\r\n  }, [permissionsGranted, detectSound]);\r\n\r\n  // Start Speech Recognition\r\n  const startRecognition = () => {\r\n    if (recognition.current) {\r\n      recognition.current.start();\r\n    }\r\n  };\r\n\r\n  // Stop Speech Recognition\r\n  const stopRecognition = () => {\r\n    if (recognition.current) {\r\n      recognition.current.stop();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"continuous-auth-container\">\r\n      <h2>Continuous Authentication</h2>\r\n\r\n      {showPermissionMessage && (\r\n        <div className=\"permission-message\">\r\n          <p>Please allow access to your camera and microphone to start the exam.</p>\r\n          <button onClick={getPermissions}>Allow Camera and Microphone</button>\r\n        </div>\r\n      )}\r\n\r\n      {permissionsGranted ? (\r\n        <>\r\n          <Webcam\r\n            audio={true}\r\n            ref={webcamRef}\r\n            screenshotFormat=\"image/jpeg\"\r\n            className=\"webcam\"\r\n            videoConstraints={{\r\n              facingMode: \"user\",\r\n              width: 720,\r\n              height: 400,\r\n            }}\r\n          />\r\n          <p>Camera and microphone are active for proctoring.</p>\r\n\r\n          <div className=\"status-buttons-container\">\r\n            <div className=\"status-buttons\">\r\n              <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n                {faceDetected ? \"Face Detected ‚úÖ\" : \"No Face Detected ‚ùå\"}\r\n              </button>\r\n              <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n                {soundDetected ? \"Sound Detected üîä\" : \"No Sound Detected üîá\"}\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"captured-images\">\r\n              {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"speech-to-text-container\">\r\n            <button onClick={startRecognition}>Start Speaking</button>\r\n            <button onClick={stopRecognition}>Stop Speaking</button>\r\n            <div className=\"spoken-text\">\r\n              <p>{spokenText}</p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p>Waiting for camera and microphone access...</p>\r\n      )}\r\n\r\n      {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContinuousAuth;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAOA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAO,KAAKC,OAAO,MAAM,aAAa;AACtC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,SAAS,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}