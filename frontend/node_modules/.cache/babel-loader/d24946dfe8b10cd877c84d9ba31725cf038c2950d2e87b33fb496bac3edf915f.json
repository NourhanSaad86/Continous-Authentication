{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\continous-authentication1\\\\continous-authentication1\\\\continous-authentication\\\\continous-authentication\\\\src\\\\ContinuousAuth.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\n// import * as faceapi from \"face-api.js\";\n// import Webcam from \"react-webcam\";\n// import axios from \"axios\";\n// import \"./ContinuousAuth.css\";\n\n// const ContinuousAuth = () => {\n//   const webcamRef = useRef(null);\n//   const [faceDetected, setFaceDetected] = useState(false);\n//   const [soundDetected, setSoundDetected] = useState(false);\n//   const [currentImage, setCurrentImage] = useState(null);\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\n//   const [examTerminated, setExamTerminated] = useState(false);\n//   const [mediaStream, setMediaStream] = useState(null);\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\n\n//   useEffect(() => {\n//     const loadModels = async () => {\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n//       console.log(\"Face Detection Model Loaded\");\n//     };\n//     loadModels();\n//   }, []);\n\n//   const getPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n//       setMediaStream(stream);\n//       setPermissionsGranted(true);\n//       setShowPermissionMessage(false);\n//       fetchIpAddress(); // Call to fetch IP address when permissions are granted\n//     } catch (error) {\n//       alert(\"Please allow access to camera and microphone.\");\n//       setShowPermissionMessage(true);\n//     }\n//   };\n\n//   const fetchIpAddress = async () => {\n//     try {\n//       const response = await fetch(\"https://api.ipify.org?format=json\");\n//       const data = await response.json();\n//       alert(`Your IP Address: ${data.ip}`);\n//     } catch (error) {\n//       console.error(\"Error fetching IP address:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (mediaStream) {\n//       const tracks = mediaStream.getTracks();\n//       tracks.forEach((track) => {\n//         track.enabled = true;\n//       });\n//     }\n//   }, [mediaStream]);\n\n//   const detectFace = async () => {\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n//       const video = webcamRef.current.video;\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n//       const isFacePresent = detections.length > 0;\n//       setFaceDetected(isFacePresent);\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       const interval = setInterval(detectFace, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [permissionsGranted]);\n\n//   useEffect(() => {\n//     if (noFaceDuration >= 15) {\n//       alert(\"‚ö†Ô∏è Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n//       setNoFaceDuration(0);\n//     }\n//   }, [noFaceDuration]);\n\n//   const detectSound = useCallback(() => {\n//     if (!mediaStream) return;\n\n//     const audioContext = new AudioContext();\n//     const analyser = audioContext.createAnalyser();\n//     const source = audioContext.createMediaStreamSource(mediaStream);\n//     source.connect(analyser);\n//     analyser.fftSize = 256;\n//     const bufferLength = analyser.frequencyBinCount;\n//     const dataArray = new Uint8Array(bufferLength);\n\n//     const checkSound = () => {\n//       analyser.getByteFrequencyData(dataArray);\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n//       setSoundDetected(volume > 10);\n//       requestAnimationFrame(checkSound);\n//     };\n//     checkSound();\n//   }, [mediaStream]);\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       detectSound();\n//     }\n//   }, [permissionsGranted, detectSound]);\n\n//   return (\n//     <div className=\"continuous-auth-container\">\n//       <h2>Continuous Authentication</h2>\n\n//       {showPermissionMessage && (\n//         <div className=\"permission-message\">\n//           <p>Please allow access to your camera and microphone to start the exam.</p>\n//           <button onClick={getPermissions}>Allow Camera and Microphone</button>\n//         </div>\n//       )}\n\n//       {permissionsGranted ? (\n//         <>\n//           <Webcam\n//             audio={true}\n//             ref={webcamRef}\n//             screenshotFormat=\"image/jpeg\"\n//             className=\"webcam\"\n//             videoConstraints={{\n//               facingMode: \"user\",\n//               width: 720,\n//               height: 400,\n//             }}\n//           />\n//           <p>Camera and microphone are active for proctoring.</p>\n\n//           <div className=\"status-buttons-container\">\n//             <div className=\"status-buttons\">\n//               <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\n//                 {faceDetected ? \"Face Detected ‚úÖ\" : \"No Face Detected ‚ùå\"}\n//               </button>\n//               <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\n//                 {soundDetected ? \"Sound Detected üîä\" : \"No Sound Detected üîá\"}\n//               </button>\n//             </div>\n\n//             <div className=\"captured-images\">\n//               {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\n//             </div>\n//           </div>\n//         </>\n//       ) : (\n//         <p>Waiting for camera and microphone access...</p>\n//       )}\n\n//       {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\n//     </div>\n//   );\n// };\n\n// export default ContinuousAuth;\n\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\n// import * as faceapi from \"face-api.js\";\n// import Webcam from \"react-webcam\";\n// import \"./ContinuousAuth.css\";\n\n// const ContinuousAuth = () => {\n//   const webcamRef = useRef(null);\n//   const [faceDetected, setFaceDetected] = useState(false);\n//   const [soundDetected, setSoundDetected] = useState(false);\n//   const [currentImage, setCurrentImage] = useState(null);\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\n//   const [examTerminated, setExamTerminated] = useState(false);\n//   const [mediaStream, setMediaStream] = useState(null);\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\n//   const [transcript, setTranscript] = useState(\"\");\n//   const [violations, setViolations] = useState(0);\n//   const recognitionRef = useRef(null);\n\n//   // ŸÜÿ∏ÿßŸÖ ŸÉÿ¥ŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ© ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\n//   const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\n//   const audioContextRef = useRef(null);\n//   const analyserRef = useRef(null);\n//   const voiceProfileRef = useRef({\n//     baseline: null,\n//     lastAlert: 0,\n//     active: false\n//   });\n\n//   useEffect(() => {\n//     const loadModels = async () => {\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n//       console.log(\"Face Detection Model Loaded\");\n//     };\n//     loadModels();\n//   }, []);\n\n//   const getPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n//       setMediaStream(stream);\n//       setPermissionsGranted(true);\n//       setShowPermissionMessage(false);\n//       initializeSpeechRecognition();\n//       setupVoiceAnalysis(stream);\n//     } catch (error) {\n//       alert(\"Please allow access to camera and microphone.\");\n//       setShowPermissionMessage(true);\n//     }\n//   };\n\n//   // ŸÜÿ∏ÿßŸÖ ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™ ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\n//   const setupVoiceAnalysis = (stream) => {\n//     try {\n//       audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n//       analyserRef.current = audioContextRef.current.createAnalyser();\n//       analyserRef.current.fftSize = 4096;\n\n//       const source = audioContextRef.current.createMediaStreamSource(stream);\n//       source.connect(analyserRef.current);\n\n//       // ÿ•ŸÜÿ¥ÿßÿ° ÿ®ÿµŸÖÿ© ÿµŸàÿ™Ÿäÿ© ÿ£ŸàŸÑŸäÿ© ÿ®ÿπÿØ 3 ÿ´ŸàÿßŸÜŸä\n//       setTimeout(() => {\n//         voiceProfileRef.current.baseline = createVoiceProfile();\n//         voiceProfileRef.current.active = true;\n//       }, 3000);\n\n//       const analyzeVoice = () => {\n//         if (!voiceProfileRef.current.active) {\n//           requestAnimationFrame(analyzeVoice);\n//           return;\n//         }\n\n//         const currentProfile = createVoiceProfile();\n//         const isMultiple = compareVoiceProfiles(voiceProfileRef.current.baseline, currentProfile);\n\n//         if (isMultiple && Date.now() - voiceProfileRef.current.lastAlert > 5000) {\n//           setMultipleVoicesDetected(true);\n//           voiceProfileRef.current.lastAlert = Date.now();\n//         } else {\n//           setMultipleVoicesDetected(false);\n//         }\n\n//         requestAnimationFrame(analyzeVoice);\n//       };\n\n//       analyzeVoice();\n//     } catch (error) {\n//       console.error(\"Voice analysis error:\", error);\n//     }\n//   };\n\n//   const createVoiceProfile = () => {\n//     const bufferLength = analyserRef.current.frequencyBinCount;\n//     const dataArray = new Float32Array(bufferLength);\n//     analyserRef.current.getFloatFrequencyData(dataArray);\n\n//     const profile = {\n//       lowRange: 0,    // 85-300Hz\n//       midRange: 0,    // 300-1000Hz\n//       highRange: 0,   // 1000-4000Hz\n//       peakCount: 0,\n//       totalEnergy: 0\n//     };\n\n//     for (let i = 0; i < bufferLength; i++) {\n//       const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\n//       const value = Math.pow(10, dataArray[i]/20); // Convert dB to linear\n\n//       if (freq >= 85 && freq < 300) {\n//         profile.lowRange += value;\n//       } else if (freq >= 300 && freq < 1000) {\n//         profile.midRange += value;\n//       } else if (freq >= 1000 && freq < 4000) {\n//         profile.highRange += value;\n//       }\n\n//       if (dataArray[i] > -40) profile.peakCount++;\n//       profile.totalEnergy += value;\n//     }\n\n//     return profile;\n//   };\n\n//   const compareVoiceProfiles = (baseline, current) => {\n//     // ÿ≠ÿ≥ÿßÿ® ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ™ÿ∫Ÿäÿ± ŸÑŸÉŸÑ ŸÜÿ∑ÿßŸÇ ÿ™ÿ±ÿØÿØŸä\n//     const lowDiff = Math.abs(current.lowRange - baseline.lowRange) / baseline.lowRange;\n//     const midDiff = Math.abs(current.midRange - baseline.midRange) / baseline.midRange;\n//     const highDiff = Math.abs(current.highRange - baseline.highRange) / baseline.highRange;\n//     const energyDiff = Math.abs(current.totalEnergy - baseline.totalEnergy) / baseline.totalEnergy;\n//     const peakDiff = Math.abs(current.peakCount - baseline.peakCount);\n\n//     // ÿ¥ÿ±Ÿàÿ∑ ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ©\n//     return (\n//       (lowDiff > 0.6 || midDiff > 0.6 || highDiff > 0.6) &&\n//       energyDiff > 0.4 &&\n//       peakDiff > 15\n//     );\n//   };\n\n//   const initializeSpeechRecognition = () => {\n//     const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n//     if (!SpeechRecognition) {\n//       console.error(\"Speech Recognition API not supported in this browser\");\n//       return;\n//     }\n\n//     recognitionRef.current = new SpeechRecognition();\n//     recognitionRef.current.continuous = true;\n//     recognitionRef.current.interimResults = false;\n//     recognitionRef.current.lang = \"ar-SA\";\n\n//     recognitionRef.current.onresult = (event) => {\n//       const last = event.results.length - 1;\n//       const text = event.results[last][0].transcript;\n//       setTranscript(text);\n//     };\n\n//     recognitionRef.current.onerror = (event) => {\n//       console.error(\"Speech recognition error\", event.error);\n//     };\n\n//     recognitionRef.current.start();\n//     recognitionRef.current.onend = () => {\n//       recognitionRef.current.start();\n//     };\n//   };\n\n//   useEffect(() => {\n//     if (mediaStream) {\n//       const tracks = mediaStream.getTracks();\n//       tracks.forEach((track) => {\n//         track.enabled = true;\n//       });\n//     }\n\n//     return () => {\n//       if (recognitionRef.current) {\n//         recognitionRef.current.stop();\n//       }\n//       if (audioContextRef.current) {\n//         audioContextRef.current.close();\n//       }\n//     };\n//   }, [mediaStream]);\n\n//   const detectFace = async () => {\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n//       const video = webcamRef.current.video;\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n//       const isFacePresent = detections.length > 0;\n//       setFaceDetected(isFacePresent);\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       const interval = setInterval(detectFace, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [permissionsGranted]);\n\n//   useEffect(() => {\n//     if (noFaceDuration >= 15) {\n//       alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n//       setNoFaceDuration(0);\n//     }\n//   }, [noFaceDuration]);\n\n//   const detectSound = useCallback(() => {\n//     if (!mediaStream) return;\n\n//     const audioContext = new AudioContext();\n//     const analyser = audioContext.createAnalyser();\n//     const source = audioContext.createMediaStreamSource(mediaStream);\n//     source.connect(analyser);\n//     analyser.fftSize = 256;\n//     const bufferLength = analyser.frequencyBinCount;\n//     const dataArray = new Uint8Array(bufferLength);\n\n//     const checkSound = () => {\n//       analyser.getByteFrequencyData(dataArray);\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n//       setSoundDetected(volume > 10);\n//       requestAnimationFrame(checkSound);\n//     };\n//     checkSound();\n//   }, [mediaStream]);\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       detectSound();\n//     }\n//   }, [permissionsGranted, detectSound]);\n\n//   useEffect(() => {\n//     if (multipleVoicesDetected) {\n//       const newViolations = violations + 1;\n//       setViolations(newViolations);\n\n//       alert(`üö® MULTIPLE VOICES DETECTED! (Violation ${newViolations}/3)`);\n\n//       if (newViolations >= 3) {\n//         setExamTerminated(true);\n//       }\n//     }\n//   }, [multipleVoicesDetected]);\n\n//   return (\n//     <div className=\"continuous-auth-container\">\n//       <h2>Exam Proctoring System</h2>\n\n//       {showPermissionMessage && (\n//         <div className=\"permission-message\">\n//           <h3>Exam Proctoring Setup</h3>\n//           <p>This exam requires camera and microphone access for proctoring purposes.</p>\n//           <div className=\"permission-requirements\">\n//             <p>‚úì Face detection must be enabled</p>\n//             <p>‚úì Microphone must be active</p>\n//           </div>\n//           <button className=\"permission-button\" onClick={getPermissions}>\n//             Enable Camera & Microphone\n//           </button>\n//         </div>\n//       )}\n\n//       {permissionsGranted && !examTerminated && (\n//         <div className=\"monitoring-container\">\n//           <div className=\"video-section\">\n//             <Webcam\n//               audio={true}\n//               ref={webcamRef}\n//               screenshotFormat=\"image/jpeg\"\n//               className=\"webcam\"\n//               videoConstraints={{\n//                 facingMode: \"user\",\n//                 width: 480,\n//                 height: 360,\n//               }}\n//             />\n//             <div className=\"status-indicators\">\n//               <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\n//                 {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\n//               </div>\n//               <div className={`status-indicator ${soundDetected ? \"active\" : \"\"}`}>\n//                 {soundDetected ? \"Sound Detected\" : \"No Sound Detected\"}\n//               </div>\n//               {multipleVoicesDetected && (\n//                 <div className=\"status-indicator warning\">\n//                   Multiple Voices Detected!\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n\n//           <div className=\"transcript-section\">\n//             <div className=\"transcript-box\">\n//               <div className=\"transcript-header\">\n//                 <span>Arabic Speech Transcript</span>\n//                 <span className=\"violation-counter\">Violations: {violations}/3</span>\n//               </div>\n//               <div className=\"transcript-content\" dir=\"rtl\">\n//                 {transcript || \"Waiting for audio input...\"}\n//               </div>\n//               <div className={`voice-detection-status ${multipleVoicesDetected ? \"multiple\" : \"\"}`}>\n//                 {multipleVoicesDetected \n//                   ? \"Multiple voices detected!\" \n//                   : \"Voice analysis active\"}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {examTerminated && (\n//         <div className=\"termination-message\">\n//           <h3>‚úñ Exam Terminated</h3>\n//           <p>Due to multiple violations detected. Please contact your instructor.</p>\n//           <p>Total violations: {violations}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ContinuousAuth;\n\n//////////////////////////////////////////////////////////////////////////////////// \n\n// ContinuousAuth.js\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport Webcam from \"react-webcam\";\nimport \"./ContinuousAuth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContinuousAuth = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const [faceDetected, setFaceDetected] = useState(false);\n  const [soundDetected, setSoundDetected] = useState(false);\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\n  const [examTerminated, setExamTerminated] = useState(false);\n  const [mediaStream, setMediaStream] = useState(null);\n  const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n  const [noFaceDuration, setNoFaceDuration] = useState(0);\n  const [transcript, setTranscript] = useState(\"\");\n  const [violations, setViolations] = useState(0);\n  const recognitionRef = useRef(null);\n  const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const voiceProfileRef = useRef({\n    baseline: null,\n    lastAlert: 0,\n    active: false\n  });\n  useEffect(() => {\n    const loadModels = async () => {\n      await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n      console.log(\"Face Detection Model Loaded\");\n    };\n    loadModels();\n  }, []);\n  const getPermissions = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      setMediaStream(stream);\n      setPermissionsGranted(true);\n      setShowPermissionMessage(false);\n      initializeSpeechRecognition();\n      setupVoiceAnalysis(stream);\n    } catch (error) {\n      alert(\"Please allow access to camera and microphone.\");\n      setShowPermissionMessage(true);\n    }\n  };\n  const setupVoiceAnalysis = stream => {\n    try {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      analyserRef.current.fftSize = 1024;\n      const source = audioContextRef.current.createMediaStreamSource(stream);\n      source.connect(analyserRef.current);\n      const bufferLength = analyserRef.current.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n      let lastPeakCount = 0;\n      let lastAlert = 0;\n      const playBeep = () => {\n        const ctx = new (window.AudioContext || window.webkitAudioContext)();\n        const oscillator = ctx.createOscillator();\n        const gainNode = ctx.createGain();\n        oscillator.type = \"sine\";\n        oscillator.frequency.setValueAtTime(800, ctx.currentTime); // ÿßŸÑÿ™ÿ±ÿØÿØ\n        oscillator.connect(gainNode);\n        gainNode.connect(ctx.destination);\n        oscillator.start();\n        oscillator.stop(ctx.currentTime + 0.3); // ÿµŸàÿ™ ŸÖÿØÿ™Ÿá 0.3 ÿ´ÿßŸÜŸäÿ©\n      };\n      const analyzeVoice = () => {\n        analyserRef.current.getByteFrequencyData(dataArray);\n        const threshold = 100;\n        let peakCount = 0;\n        for (let i = 0; i < dataArray.length; i++) {\n          if (dataArray[i] > threshold) {\n            peakCount++;\n          }\n        }\n        const peakDiff = Math.abs(peakCount - lastPeakCount);\n        if (peakDiff > 20 && Date.now() - lastAlert > 5000) {\n          setMultipleVoicesDetected(true);\n          setViolations(prev => {\n            const newCount = prev + 1;\n            if (newCount >= 3) {\n              setExamTerminated(true);\n            }\n            return newCount;\n          });\n          alert(\"üö® MULTIPLE VOICES DETECTED!\");\n          playBeep();\n          lastAlert = Date.now();\n          setTimeout(() => setMultipleVoicesDetected(false), 4000);\n        }\n        lastPeakCount = peakCount;\n        requestAnimationFrame(analyzeVoice);\n      };\n      analyzeVoice();\n    } catch (error) {\n      console.error(\"Voice analysis error:\", error);\n    }\n  };\n  const createVoiceProfile = () => {\n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    analyserRef.current.getFloatFrequencyData(dataArray);\n    const profile = {\n      lowRange: 0,\n      midRange: 0,\n      highRange: 0,\n      peakCount: 0,\n      totalEnergy: 0\n    };\n    for (let i = 0; i < bufferLength; i++) {\n      const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\n      const value = Math.pow(10, dataArray[i] / 20);\n      if (freq >= 85 && freq < 300) profile.lowRange += value;else if (freq >= 300 && freq < 1000) profile.midRange += value;else if (freq >= 1000 && freq < 4000) profile.highRange += value;\n      if (dataArray[i] > -40) profile.peakCount++;\n      profile.totalEnergy += value;\n    }\n    return profile;\n  };\n  const compareVoiceProfiles = (baseline, current) => {\n    if (!baseline || !current) return false;\n    const lowDiff = Math.abs(current.lowRange - baseline.lowRange) / (baseline.lowRange || 1);\n    const midDiff = Math.abs(current.midRange - baseline.midRange) / (baseline.midRange || 1);\n    const highDiff = Math.abs(current.highRange - baseline.highRange) / (baseline.highRange || 1);\n    const energyDiff = Math.abs(current.totalEnergy - baseline.totalEnergy) / (baseline.totalEnergy || 1);\n    const peakDiff = Math.abs(current.peakCount - baseline.peakCount);\n    return (lowDiff > 0.5 || midDiff > 0.5 || highDiff > 0.5) && energyDiff > 0.3 && peakDiff > 10;\n  };\n  const initializeSpeechRecognition = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      console.error(\"Speech Recognition API not supported in this browser\");\n      return;\n    }\n    recognitionRef.current = new SpeechRecognition();\n    recognitionRef.current.continuous = true;\n    recognitionRef.current.interimResults = false;\n    recognitionRef.current.lang = \"ar-SA\";\n    recognitionRef.current.onresult = event => {\n      const last = event.results.length - 1;\n      const text = event.results[last][0].transcript;\n      setTranscript(text);\n    };\n    recognitionRef.current.onerror = event => {\n      console.error(\"Speech recognition error\", event.error);\n    };\n    recognitionRef.current.start();\n    recognitionRef.current.onend = () => recognitionRef.current.start();\n  };\n  useEffect(() => {\n    if (mediaStream) {\n      mediaStream.getTracks().forEach(track => track.enabled = true);\n    }\n    return () => {\n      var _recognitionRef$curre, _audioContextRef$curr;\n      (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n      (_audioContextRef$curr = audioContextRef.current) === null || _audioContextRef$curr === void 0 ? void 0 : _audioContextRef$curr.close();\n    };\n  }, [mediaStream]);\n  const detectFace = async () => {\n    if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n      const video = webcamRef.current.video;\n      const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n      const isFacePresent = detections.length > 0;\n      setFaceDetected(isFacePresent);\n      setNoFaceDuration(prev => isFacePresent ? 0 : prev + 1);\n    }\n  };\n  useEffect(() => {\n    if (permissionsGranted) {\n      const interval = setInterval(detectFace, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [permissionsGranted]);\n  useEffect(() => {\n    if (noFaceDuration >= 15) {\n      alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n      setNoFaceDuration(0);\n    }\n  }, [noFaceDuration]);\n  const detectSound = useCallback(() => {\n    if (!mediaStream) return;\n    const audioContext = new AudioContext();\n    const analyser = audioContext.createAnalyser();\n    const source = audioContext.createMediaStreamSource(mediaStream);\n    source.connect(analyser);\n    analyser.fftSize = 256;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const checkSound = () => {\n      analyser.getByteFrequencyData(dataArray);\n      const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n      setSoundDetected(volume > 10);\n      requestAnimationFrame(checkSound);\n    };\n    checkSound();\n  }, [mediaStream]);\n  useEffect(() => {\n    if (permissionsGranted) detectSound();\n  }, [permissionsGranted, detectSound]);\n  useEffect(() => {\n    if (multipleVoicesDetected) {\n      const newViolations = violations + 1;\n      setViolations(newViolations);\n      if (newViolations >= 3) setExamTerminated(true);\n    }\n  }, [multipleVoicesDetected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"continuous-auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Exam Proctoring System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 7\n    }, this), showPermissionMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"permission-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Exam Proctoring Setup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This exam requires camera and microphone access for proctoring purposes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"permission-requirements\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2713 Face detection must be enabled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2713 Microphone must be active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"permission-button\",\n        onClick: getPermissions,\n        children: \"Enable Camera & Microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 9\n    }, this), permissionsGranted && !examTerminated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monitoring-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-section\",\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          audio: true,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\",\n          className: \"webcam\",\n          videoConstraints: {\n            facingMode: \"user\",\n            width: 480,\n            height: 360\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicators\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${faceDetected ? \"active\" : \"\"}`,\n            children: faceDetected ? \"Face Detected\" : \"No Face Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${soundDetected ? \"active\" : \"\"}`,\n            children: soundDetected ? \"Sound Detected\" : \"No Sound Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 15\n          }, this), multipleVoicesDetected && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator warning\",\n            children: \"Multiple Voices Detected!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Arabic Speech Transcript\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"violation-counter\",\n              children: [\"Violations: \", violations, \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-content\",\n            dir: \"rtl\",\n            children: transcript || \"Waiting for audio input...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `voice-detection-status ${multipleVoicesDetected ? \"multiple\" : \"\"}`,\n            children: multipleVoicesDetected ? \"Multiple voices detected!\" : \"Voice analysis active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 9\n    }, this), examTerminated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"termination-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u2716 Exam Terminated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Due to multiple violations detected. Please contact your instructor.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total violations: \", violations]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 751,\n    columnNumber: 5\n  }, this);\n};\n_s(ContinuousAuth, \"R5icop/y+w6RcpuXuTky1Ke5dJU=\");\n_c = ContinuousAuth;\nexport default ContinuousAuth;\nvar _c;\n$RefreshReg$(_c, \"ContinuousAuth\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","faceapi","Webcam","jsxDEV","_jsxDEV","ContinuousAuth","_s","webcamRef","faceDetected","setFaceDetected","soundDetected","setSoundDetected","permissionsGranted","setPermissionsGranted","examTerminated","setExamTerminated","mediaStream","setMediaStream","showPermissionMessage","setShowPermissionMessage","noFaceDuration","setNoFaceDuration","transcript","setTranscript","violations","setViolations","recognitionRef","multipleVoicesDetected","setMultipleVoicesDetected","audioContextRef","analyserRef","voiceProfileRef","baseline","lastAlert","active","loadModels","nets","tinyFaceDetector","loadFromUri","console","log","getPermissions","stream","navigator","mediaDevices","getUserMedia","video","audio","initializeSpeechRecognition","setupVoiceAnalysis","error","alert","current","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","source","createMediaStreamSource","connect","bufferLength","frequencyBinCount","dataArray","Uint8Array","lastPeakCount","playBeep","ctx","oscillator","createOscillator","gainNode","createGain","type","frequency","setValueAtTime","currentTime","destination","start","stop","analyzeVoice","getByteFrequencyData","threshold","peakCount","i","length","peakDiff","Math","abs","Date","now","prev","newCount","setTimeout","requestAnimationFrame","createVoiceProfile","Float32Array","getFloatFrequencyData","profile","lowRange","midRange","highRange","totalEnergy","freq","sampleRate","value","pow","compareVoiceProfiles","lowDiff","midDiff","highDiff","energyDiff","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","last","results","text","onerror","onend","getTracks","forEach","track","enabled","_recognitionRef$curre","_audioContextRef$curr","close","detectFace","readyState","detections","detectAllFaces","TinyFaceDetectorOptions","isFacePresent","interval","setInterval","clearInterval","detectSound","audioContext","analyser","checkSound","volume","reduce","sum","newViolations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","screenshotFormat","videoConstraints","facingMode","width","height","dir","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/continous-authentication1/continous-authentication1/continous-authentication/continous-authentication/src/ContinuousAuth.js"],"sourcesContent":["// import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n// import * as faceapi from \"face-api.js\";\r\n// import Webcam from \"react-webcam\";\r\n// import axios from \"axios\";\r\n// import \"./ContinuousAuth.css\";\r\n\r\n// const ContinuousAuth = () => {\r\n//   const webcamRef = useRef(null);\r\n//   const [faceDetected, setFaceDetected] = useState(false);\r\n//   const [soundDetected, setSoundDetected] = useState(false);\r\n//   const [currentImage, setCurrentImage] = useState(null);\r\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n//   const [examTerminated, setExamTerminated] = useState(false);\r\n//   const [mediaStream, setMediaStream] = useState(null);\r\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     const loadModels = async () => {\r\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n//       console.log(\"Face Detection Model Loaded\");\r\n//     };\r\n//     loadModels();\r\n//   }, []);\r\n\r\n//   const getPermissions = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n//       setMediaStream(stream);\r\n//       setPermissionsGranted(true);\r\n//       setShowPermissionMessage(false);\r\n//       fetchIpAddress(); // Call to fetch IP address when permissions are granted\r\n//     } catch (error) {\r\n//       alert(\"Please allow access to camera and microphone.\");\r\n//       setShowPermissionMessage(true);\r\n//     }\r\n//   };\r\n\r\n//   const fetchIpAddress = async () => {\r\n//     try {\r\n//       const response = await fetch(\"https://api.ipify.org?format=json\");\r\n//       const data = await response.json();\r\n//       alert(`Your IP Address: ${data.ip}`);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching IP address:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (mediaStream) {\r\n//       const tracks = mediaStream.getTracks();\r\n//       tracks.forEach((track) => {\r\n//         track.enabled = true;\r\n//       });\r\n//     }\r\n//   }, [mediaStream]);\r\n\r\n//   const detectFace = async () => {\r\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n//       const video = webcamRef.current.video;\r\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n//       const isFacePresent = detections.length > 0;\r\n//       setFaceDetected(isFacePresent);\r\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       const interval = setInterval(detectFace, 1000);\r\n//       return () => clearInterval(interval);\r\n//     }\r\n//   }, [permissionsGranted]);\r\n\r\n//   useEffect(() => {\r\n//     if (noFaceDuration >= 15) {\r\n//       alert(\"‚ö†Ô∏è Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n//       setNoFaceDuration(0);\r\n//     }\r\n//   }, [noFaceDuration]);\r\n\r\n//   const detectSound = useCallback(() => {\r\n//     if (!mediaStream) return;\r\n\r\n//     const audioContext = new AudioContext();\r\n//     const analyser = audioContext.createAnalyser();\r\n//     const source = audioContext.createMediaStreamSource(mediaStream);\r\n//     source.connect(analyser);\r\n//     analyser.fftSize = 256;\r\n//     const bufferLength = analyser.frequencyBinCount;\r\n//     const dataArray = new Uint8Array(bufferLength);\r\n\r\n//     const checkSound = () => {\r\n//       analyser.getByteFrequencyData(dataArray);\r\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n//       setSoundDetected(volume > 10);\r\n//       requestAnimationFrame(checkSound);\r\n//     };\r\n//     checkSound();\r\n//   }, [mediaStream]);\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       detectSound();\r\n//     }\r\n//   }, [permissionsGranted, detectSound]);\r\n\r\n//   return (\r\n//     <div className=\"continuous-auth-container\">\r\n//       <h2>Continuous Authentication</h2>\r\n\r\n//       {showPermissionMessage && (\r\n//         <div className=\"permission-message\">\r\n//           <p>Please allow access to your camera and microphone to start the exam.</p>\r\n//           <button onClick={getPermissions}>Allow Camera and Microphone</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {permissionsGranted ? (\r\n//         <>\r\n//           <Webcam\r\n//             audio={true}\r\n//             ref={webcamRef}\r\n//             screenshotFormat=\"image/jpeg\"\r\n//             className=\"webcam\"\r\n//             videoConstraints={{\r\n//               facingMode: \"user\",\r\n//               width: 720,\r\n//               height: 400,\r\n//             }}\r\n//           />\r\n//           <p>Camera and microphone are active for proctoring.</p>\r\n\r\n//           <div className=\"status-buttons-container\">\r\n//             <div className=\"status-buttons\">\r\n//               <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n//                 {faceDetected ? \"Face Detected ‚úÖ\" : \"No Face Detected ‚ùå\"}\r\n//               </button>\r\n//               <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n//                 {soundDetected ? \"Sound Detected üîä\" : \"No Sound Detected üîá\"}\r\n//               </button>\r\n//             </div>\r\n\r\n//             <div className=\"captured-images\">\r\n//               {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\r\n//             </div>\r\n//           </div>\r\n//         </>\r\n//       ) : (\r\n//         <p>Waiting for camera and microphone access...</p>\r\n//       )}\r\n\r\n//       {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n// import * as faceapi from \"face-api.js\";\r\n// import Webcam from \"react-webcam\";\r\n// import \"./ContinuousAuth.css\";\r\n\r\n// const ContinuousAuth = () => {\r\n//   const webcamRef = useRef(null);\r\n//   const [faceDetected, setFaceDetected] = useState(false);\r\n//   const [soundDetected, setSoundDetected] = useState(false);\r\n//   const [currentImage, setCurrentImage] = useState(null);\r\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n//   const [examTerminated, setExamTerminated] = useState(false);\r\n//   const [mediaStream, setMediaStream] = useState(null);\r\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n//   const [transcript, setTranscript] = useState(\"\");\r\n//   const [violations, setViolations] = useState(0);\r\n//   const recognitionRef = useRef(null);\r\n\r\n//   // ŸÜÿ∏ÿßŸÖ ŸÉÿ¥ŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ© ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\r\n//   const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\r\n//   const audioContextRef = useRef(null);\r\n//   const analyserRef = useRef(null);\r\n//   const voiceProfileRef = useRef({\r\n//     baseline: null,\r\n//     lastAlert: 0,\r\n//     active: false\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const loadModels = async () => {\r\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n//       console.log(\"Face Detection Model Loaded\");\r\n//     };\r\n//     loadModels();\r\n//   }, []);\r\n\r\n//   const getPermissions = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n//       setMediaStream(stream);\r\n//       setPermissionsGranted(true);\r\n//       setShowPermissionMessage(false);\r\n//       initializeSpeechRecognition();\r\n//       setupVoiceAnalysis(stream);\r\n//     } catch (error) {\r\n//       alert(\"Please allow access to camera and microphone.\");\r\n//       setShowPermissionMessage(true);\r\n//     }\r\n//   };\r\n\r\n//   // ŸÜÿ∏ÿßŸÖ ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™ ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\r\n//   const setupVoiceAnalysis = (stream) => {\r\n//     try {\r\n//       audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n//       analyserRef.current = audioContextRef.current.createAnalyser();\r\n//       analyserRef.current.fftSize = 4096;\r\n      \r\n//       const source = audioContextRef.current.createMediaStreamSource(stream);\r\n//       source.connect(analyserRef.current);\r\n\r\n//       // ÿ•ŸÜÿ¥ÿßÿ° ÿ®ÿµŸÖÿ© ÿµŸàÿ™Ÿäÿ© ÿ£ŸàŸÑŸäÿ© ÿ®ÿπÿØ 3 ÿ´ŸàÿßŸÜŸä\r\n//       setTimeout(() => {\r\n//         voiceProfileRef.current.baseline = createVoiceProfile();\r\n//         voiceProfileRef.current.active = true;\r\n//       }, 3000);\r\n\r\n//       const analyzeVoice = () => {\r\n//         if (!voiceProfileRef.current.active) {\r\n//           requestAnimationFrame(analyzeVoice);\r\n//           return;\r\n//         }\r\n\r\n//         const currentProfile = createVoiceProfile();\r\n//         const isMultiple = compareVoiceProfiles(voiceProfileRef.current.baseline, currentProfile);\r\n        \r\n//         if (isMultiple && Date.now() - voiceProfileRef.current.lastAlert > 5000) {\r\n//           setMultipleVoicesDetected(true);\r\n//           voiceProfileRef.current.lastAlert = Date.now();\r\n//         } else {\r\n//           setMultipleVoicesDetected(false);\r\n//         }\r\n\r\n//         requestAnimationFrame(analyzeVoice);\r\n//       };\r\n\r\n//       analyzeVoice();\r\n//     } catch (error) {\r\n//       console.error(\"Voice analysis error:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const createVoiceProfile = () => {\r\n//     const bufferLength = analyserRef.current.frequencyBinCount;\r\n//     const dataArray = new Float32Array(bufferLength);\r\n//     analyserRef.current.getFloatFrequencyData(dataArray);\r\n\r\n//     const profile = {\r\n//       lowRange: 0,    // 85-300Hz\r\n//       midRange: 0,    // 300-1000Hz\r\n//       highRange: 0,   // 1000-4000Hz\r\n//       peakCount: 0,\r\n//       totalEnergy: 0\r\n//     };\r\n\r\n//     for (let i = 0; i < bufferLength; i++) {\r\n//       const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\r\n//       const value = Math.pow(10, dataArray[i]/20); // Convert dB to linear\r\n\r\n//       if (freq >= 85 && freq < 300) {\r\n//         profile.lowRange += value;\r\n//       } else if (freq >= 300 && freq < 1000) {\r\n//         profile.midRange += value;\r\n//       } else if (freq >= 1000 && freq < 4000) {\r\n//         profile.highRange += value;\r\n//       }\r\n\r\n//       if (dataArray[i] > -40) profile.peakCount++;\r\n//       profile.totalEnergy += value;\r\n//     }\r\n\r\n//     return profile;\r\n//   };\r\n\r\n//   const compareVoiceProfiles = (baseline, current) => {\r\n//     // ÿ≠ÿ≥ÿßÿ® ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ™ÿ∫Ÿäÿ± ŸÑŸÉŸÑ ŸÜÿ∑ÿßŸÇ ÿ™ÿ±ÿØÿØŸä\r\n//     const lowDiff = Math.abs(current.lowRange - baseline.lowRange) / baseline.lowRange;\r\n//     const midDiff = Math.abs(current.midRange - baseline.midRange) / baseline.midRange;\r\n//     const highDiff = Math.abs(current.highRange - baseline.highRange) / baseline.highRange;\r\n//     const energyDiff = Math.abs(current.totalEnergy - baseline.totalEnergy) / baseline.totalEnergy;\r\n//     const peakDiff = Math.abs(current.peakCount - baseline.peakCount);\r\n\r\n//     // ÿ¥ÿ±Ÿàÿ∑ ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ©\r\n//     return (\r\n//       (lowDiff > 0.6 || midDiff > 0.6 || highDiff > 0.6) &&\r\n//       energyDiff > 0.4 &&\r\n//       peakDiff > 15\r\n//     );\r\n//   };\r\n\r\n//   const initializeSpeechRecognition = () => {\r\n//     const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n//     if (!SpeechRecognition) {\r\n//       console.error(\"Speech Recognition API not supported in this browser\");\r\n//       return;\r\n//     }\r\n\r\n//     recognitionRef.current = new SpeechRecognition();\r\n//     recognitionRef.current.continuous = true;\r\n//     recognitionRef.current.interimResults = false;\r\n//     recognitionRef.current.lang = \"ar-SA\";\r\n\r\n//     recognitionRef.current.onresult = (event) => {\r\n//       const last = event.results.length - 1;\r\n//       const text = event.results[last][0].transcript;\r\n//       setTranscript(text);\r\n//     };\r\n\r\n//     recognitionRef.current.onerror = (event) => {\r\n//       console.error(\"Speech recognition error\", event.error);\r\n//     };\r\n\r\n//     recognitionRef.current.start();\r\n//     recognitionRef.current.onend = () => {\r\n//       recognitionRef.current.start();\r\n//     };\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (mediaStream) {\r\n//       const tracks = mediaStream.getTracks();\r\n//       tracks.forEach((track) => {\r\n//         track.enabled = true;\r\n//       });\r\n//     }\r\n\r\n//     return () => {\r\n//       if (recognitionRef.current) {\r\n//         recognitionRef.current.stop();\r\n//       }\r\n//       if (audioContextRef.current) {\r\n//         audioContextRef.current.close();\r\n//       }\r\n//     };\r\n//   }, [mediaStream]);\r\n\r\n//   const detectFace = async () => {\r\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n//       const video = webcamRef.current.video;\r\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n//       const isFacePresent = detections.length > 0;\r\n//       setFaceDetected(isFacePresent);\r\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       const interval = setInterval(detectFace, 1000);\r\n//       return () => clearInterval(interval);\r\n//     }\r\n//   }, [permissionsGranted]);\r\n\r\n//   useEffect(() => {\r\n//     if (noFaceDuration >= 15) {\r\n//       alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n//       setNoFaceDuration(0);\r\n//     }\r\n//   }, [noFaceDuration]);\r\n\r\n//   const detectSound = useCallback(() => {\r\n//     if (!mediaStream) return;\r\n\r\n//     const audioContext = new AudioContext();\r\n//     const analyser = audioContext.createAnalyser();\r\n//     const source = audioContext.createMediaStreamSource(mediaStream);\r\n//     source.connect(analyser);\r\n//     analyser.fftSize = 256;\r\n//     const bufferLength = analyser.frequencyBinCount;\r\n//     const dataArray = new Uint8Array(bufferLength);\r\n\r\n//     const checkSound = () => {\r\n//       analyser.getByteFrequencyData(dataArray);\r\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n//       setSoundDetected(volume > 10);\r\n//       requestAnimationFrame(checkSound);\r\n//     };\r\n//     checkSound();\r\n//   }, [mediaStream]);\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       detectSound();\r\n//     }\r\n//   }, [permissionsGranted, detectSound]);\r\n\r\n//   useEffect(() => {\r\n//     if (multipleVoicesDetected) {\r\n//       const newViolations = violations + 1;\r\n//       setViolations(newViolations);\r\n      \r\n//       alert(`üö® MULTIPLE VOICES DETECTED! (Violation ${newViolations}/3)`);\r\n      \r\n//       if (newViolations >= 3) {\r\n//         setExamTerminated(true);\r\n//       }\r\n//     }\r\n//   }, [multipleVoicesDetected]);\r\n\r\n//   return (\r\n//     <div className=\"continuous-auth-container\">\r\n//       <h2>Exam Proctoring System</h2>\r\n\r\n//       {showPermissionMessage && (\r\n//         <div className=\"permission-message\">\r\n//           <h3>Exam Proctoring Setup</h3>\r\n//           <p>This exam requires camera and microphone access for proctoring purposes.</p>\r\n//           <div className=\"permission-requirements\">\r\n//             <p>‚úì Face detection must be enabled</p>\r\n//             <p>‚úì Microphone must be active</p>\r\n//           </div>\r\n//           <button className=\"permission-button\" onClick={getPermissions}>\r\n//             Enable Camera & Microphone\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {permissionsGranted && !examTerminated && (\r\n//         <div className=\"monitoring-container\">\r\n//           <div className=\"video-section\">\r\n//             <Webcam\r\n//               audio={true}\r\n//               ref={webcamRef}\r\n//               screenshotFormat=\"image/jpeg\"\r\n//               className=\"webcam\"\r\n//               videoConstraints={{\r\n//                 facingMode: \"user\",\r\n//                 width: 480,\r\n//                 height: 360,\r\n//               }}\r\n//             />\r\n//             <div className=\"status-indicators\">\r\n//               <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\r\n//                 {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\r\n//               </div>\r\n//               <div className={`status-indicator ${soundDetected ? \"active\" : \"\"}`}>\r\n//                 {soundDetected ? \"Sound Detected\" : \"No Sound Detected\"}\r\n//               </div>\r\n//               {multipleVoicesDetected && (\r\n//                 <div className=\"status-indicator warning\">\r\n//                   Multiple Voices Detected!\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"transcript-section\">\r\n//             <div className=\"transcript-box\">\r\n//               <div className=\"transcript-header\">\r\n//                 <span>Arabic Speech Transcript</span>\r\n//                 <span className=\"violation-counter\">Violations: {violations}/3</span>\r\n//               </div>\r\n//               <div className=\"transcript-content\" dir=\"rtl\">\r\n//                 {transcript || \"Waiting for audio input...\"}\r\n//               </div>\r\n//               <div className={`voice-detection-status ${multipleVoicesDetected ? \"multiple\" : \"\"}`}>\r\n//                 {multipleVoicesDetected \r\n//                   ? \"Multiple voices detected!\" \r\n//                   : \"Voice analysis active\"}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {examTerminated && (\r\n//         <div className=\"termination-message\">\r\n//           <h3>‚úñ Exam Terminated</h3>\r\n//           <p>Due to multiple violations detected. Please contact your instructor.</p>\r\n//           <p>Total violations: {violations}</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////////////////// \r\n\r\n\r\n\r\n\r\n// ContinuousAuth.js\r\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./ContinuousAuth.css\";\r\n\r\nconst ContinuousAuth = () => {\r\n  const webcamRef = useRef(null);\r\n  const [faceDetected, setFaceDetected] = useState(false);\r\n  const [soundDetected, setSoundDetected] = useState(false);\r\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n  const [examTerminated, setExamTerminated] = useState(false);\r\n  const [mediaStream, setMediaStream] = useState(null);\r\n  const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n  const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n  const [transcript, setTranscript] = useState(\"\");\r\n  const [violations, setViolations] = useState(0);\r\n  const recognitionRef = useRef(null);\r\n\r\n  const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\r\n  const audioContextRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const voiceProfileRef = useRef({ baseline: null, lastAlert: 0, active: false });\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n      console.log(\"Face Detection Model Loaded\");\r\n    };\r\n    loadModels();\r\n  }, []);\r\n\r\n  const getPermissions = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n      setMediaStream(stream);\r\n      setPermissionsGranted(true);\r\n      setShowPermissionMessage(false);\r\n      initializeSpeechRecognition();\r\n      setupVoiceAnalysis(stream);\r\n    } catch (error) {\r\n      alert(\"Please allow access to camera and microphone.\");\r\n      setShowPermissionMessage(true);\r\n    }\r\n  };\r\n\r\n  const setupVoiceAnalysis = (stream) => {\r\n    try {\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      analyserRef.current = audioContextRef.current.createAnalyser();\r\n      analyserRef.current.fftSize = 1024;\r\n  \r\n      const source = audioContextRef.current.createMediaStreamSource(stream);\r\n      source.connect(analyserRef.current);\r\n  \r\n      const bufferLength = analyserRef.current.frequencyBinCount;\r\n      const dataArray = new Uint8Array(bufferLength);\r\n      let lastPeakCount = 0;\r\n      let lastAlert = 0;\r\n  \r\n      const playBeep = () => {\r\n        const ctx = new (window.AudioContext || window.webkitAudioContext)();\r\n        const oscillator = ctx.createOscillator();\r\n        const gainNode = ctx.createGain();\r\n  \r\n        oscillator.type = \"sine\";\r\n        oscillator.frequency.setValueAtTime(800, ctx.currentTime); // ÿßŸÑÿ™ÿ±ÿØÿØ\r\n        oscillator.connect(gainNode);\r\n        gainNode.connect(ctx.destination);\r\n        oscillator.start();\r\n        oscillator.stop(ctx.currentTime + 0.3); // ÿµŸàÿ™ ŸÖÿØÿ™Ÿá 0.3 ÿ´ÿßŸÜŸäÿ©\r\n      };\r\n  \r\n      const analyzeVoice = () => {\r\n        analyserRef.current.getByteFrequencyData(dataArray);\r\n  \r\n        const threshold = 100;\r\n        let peakCount = 0;\r\n  \r\n        for (let i = 0; i < dataArray.length; i++) {\r\n          if (dataArray[i] > threshold) {\r\n            peakCount++;\r\n          }\r\n        }\r\n  \r\n        const peakDiff = Math.abs(peakCount - lastPeakCount);\r\n  \r\n        if (peakDiff > 20 && Date.now() - lastAlert > 5000) {\r\n          setMultipleVoicesDetected(true);\r\n          setViolations((prev) => {\r\n            const newCount = prev + 1;\r\n            if (newCount >= 3) {\r\n              setExamTerminated(true);\r\n            }\r\n            return newCount;\r\n          });\r\n  \r\n          alert(\"üö® MULTIPLE VOICES DETECTED!\");\r\n          playBeep();\r\n          lastAlert = Date.now();\r\n          setTimeout(() => setMultipleVoicesDetected(false), 4000);\r\n        }\r\n  \r\n        lastPeakCount = peakCount;\r\n        requestAnimationFrame(analyzeVoice);\r\n      };\r\n  \r\n      analyzeVoice();\r\n    } catch (error) {\r\n      console.error(\"Voice analysis error:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  const createVoiceProfile = () => {\r\n    const bufferLength = analyserRef.current.frequencyBinCount;\r\n    const dataArray = new Float32Array(bufferLength);\r\n    analyserRef.current.getFloatFrequencyData(dataArray);\r\n\r\n    const profile = { lowRange: 0, midRange: 0, highRange: 0, peakCount: 0, totalEnergy: 0 };\r\n\r\n    for (let i = 0; i < bufferLength; i++) {\r\n      const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\r\n      const value = Math.pow(10, dataArray[i]/20);\r\n\r\n      if (freq >= 85 && freq < 300) profile.lowRange += value;\r\n      else if (freq >= 300 && freq < 1000) profile.midRange += value;\r\n      else if (freq >= 1000 && freq < 4000) profile.highRange += value;\r\n\r\n      if (dataArray[i] > -40) profile.peakCount++;\r\n      profile.totalEnergy += value;\r\n    }\r\n\r\n    return profile;\r\n  };\r\n\r\n  const compareVoiceProfiles = (baseline, current) => {\r\n    if (!baseline || !current) return false;\r\n\r\n    const lowDiff = Math.abs(current.lowRange - baseline.lowRange) / (baseline.lowRange || 1);\r\n    const midDiff = Math.abs(current.midRange - baseline.midRange) / (baseline.midRange || 1);\r\n    const highDiff = Math.abs(current.highRange - baseline.highRange) / (baseline.highRange || 1);\r\n    const energyDiff = Math.abs(current.totalEnergy - baseline.totalEnergy) / (baseline.totalEnergy || 1);\r\n    const peakDiff = Math.abs(current.peakCount - baseline.peakCount);\r\n\r\n    return (\r\n      (lowDiff > 0.5 || midDiff > 0.5 || highDiff > 0.5) &&\r\n      energyDiff > 0.3 &&\r\n      peakDiff > 10\r\n    );\r\n  };\r\n\r\n  const initializeSpeechRecognition = () => {\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if (!SpeechRecognition) {\r\n      console.error(\"Speech Recognition API not supported in this browser\");\r\n      return;\r\n    }\r\n\r\n    recognitionRef.current = new SpeechRecognition();\r\n    recognitionRef.current.continuous = true;\r\n    recognitionRef.current.interimResults = false;\r\n    recognitionRef.current.lang = \"ar-SA\";\r\n\r\n    recognitionRef.current.onresult = (event) => {\r\n      const last = event.results.length - 1;\r\n      const text = event.results[last][0].transcript;\r\n      setTranscript(text);\r\n    };\r\n\r\n    recognitionRef.current.onerror = (event) => {\r\n      console.error(\"Speech recognition error\", event.error);\r\n    };\r\n\r\n    recognitionRef.current.start();\r\n    recognitionRef.current.onend = () => recognitionRef.current.start();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mediaStream) {\r\n      mediaStream.getTracks().forEach((track) => (track.enabled = true));\r\n    }\r\n    return () => {\r\n      recognitionRef.current?.stop();\r\n      audioContextRef.current?.close();\r\n    };\r\n  }, [mediaStream]);\r\n\r\n  const detectFace = async () => {\r\n    if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n      const video = webcamRef.current.video;\r\n      const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n      const isFacePresent = detections.length > 0;\r\n      setFaceDetected(isFacePresent);\r\n      setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (permissionsGranted) {\r\n      const interval = setInterval(detectFace, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [permissionsGranted]);\r\n\r\n  useEffect(() => {\r\n    if (noFaceDuration >= 15) {\r\n      alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n      setNoFaceDuration(0);\r\n    }\r\n  }, [noFaceDuration]);\r\n\r\n  const detectSound = useCallback(() => {\r\n    if (!mediaStream) return;\r\n    const audioContext = new AudioContext();\r\n    const analyser = audioContext.createAnalyser();\r\n    const source = audioContext.createMediaStreamSource(mediaStream);\r\n    source.connect(analyser);\r\n    analyser.fftSize = 256;\r\n    const bufferLength = analyser.frequencyBinCount;\r\n    const dataArray = new Uint8Array(bufferLength);\r\n\r\n    const checkSound = () => {\r\n      analyser.getByteFrequencyData(dataArray);\r\n      const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n      setSoundDetected(volume > 10);\r\n      requestAnimationFrame(checkSound);\r\n    };\r\n    checkSound();\r\n  }, [mediaStream]);\r\n\r\n  useEffect(() => {\r\n    if (permissionsGranted) detectSound();\r\n  }, [permissionsGranted, detectSound]);\r\n\r\n  useEffect(() => {\r\n    if (multipleVoicesDetected) {\r\n      const newViolations = violations + 1;\r\n      setViolations(newViolations);\r\n      if (newViolations >= 3) setExamTerminated(true);\r\n    }\r\n  }, [multipleVoicesDetected]);\r\n\r\n  return (\r\n    <div className=\"continuous-auth-container\">\r\n      <h2>Exam Proctoring System</h2>\r\n\r\n      {showPermissionMessage && (\r\n        <div className=\"permission-message\">\r\n          <h3>Exam Proctoring Setup</h3>\r\n          <p>This exam requires camera and microphone access for proctoring purposes.</p>\r\n          <div className=\"permission-requirements\">\r\n            <p>‚úì Face detection must be enabled</p>\r\n            <p>‚úì Microphone must be active</p>\r\n          </div>\r\n          <button className=\"permission-button\" onClick={getPermissions}>\r\n            Enable Camera & Microphone\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {permissionsGranted && !examTerminated && (\r\n        <div className=\"monitoring-container\">\r\n          <div className=\"video-section\">\r\n            <Webcam\r\n              audio={true}\r\n              ref={webcamRef}\r\n              screenshotFormat=\"image/jpeg\"\r\n              className=\"webcam\"\r\n              videoConstraints={{ facingMode: \"user\", width: 480, height: 360 }}\r\n            />\r\n            <div className=\"status-indicators\">\r\n              <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\r\n                {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\r\n              </div>\r\n              <div className={`status-indicator ${soundDetected ? \"active\" : \"\"}`}>\r\n                {soundDetected ? \"Sound Detected\" : \"No Sound Detected\"}\r\n              </div>\r\n              {multipleVoicesDetected && (\r\n                <div className=\"status-indicator warning\">Multiple Voices Detected!</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"transcript-section\">\r\n            <div className=\"transcript-box\">\r\n              <div className=\"transcript-header\">\r\n                <span>Arabic Speech Transcript</span>\r\n                <span className=\"violation-counter\">Violations: {violations}/3</span>\r\n              </div>\r\n              <div className=\"transcript-content\" dir=\"rtl\">\r\n                {transcript || \"Waiting for audio input...\"}\r\n              </div>\r\n              <div className={`voice-detection-status ${multipleVoicesDetected ? \"multiple\" : \"\"}`}>\r\n                {multipleVoicesDetected ? \"Multiple voices detected!\" : \"Voice analysis active\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {examTerminated && (\r\n        <div className=\"termination-message\">\r\n          <h3>‚úñ Exam Terminated</h3>\r\n          <p>Due to multiple violations detected. Please contact your instructor.</p>\r\n          <p>Total violations: {violations}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}