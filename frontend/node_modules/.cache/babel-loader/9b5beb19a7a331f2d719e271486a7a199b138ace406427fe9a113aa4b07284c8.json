{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\continous-authentication1\\\\continous-authentication1\\\\continous-authentication\\\\continous-authentication\\\\src\\\\ContinuousAuth.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\n// import * as faceapi from \"face-api.js\";\n// import Webcam from \"react-webcam\";\n// import axios from \"axios\";\n// import \"./ContinuousAuth.css\";\n\n// const ContinuousAuth = () => {\n//   const webcamRef = useRef(null);\n//   const [faceDetected, setFaceDetected] = useState(false);\n//   const [soundDetected, setSoundDetected] = useState(false);\n//   const [currentImage, setCurrentImage] = useState(null);\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\n//   const [examTerminated, setExamTerminated] = useState(false);\n//   const [mediaStream, setMediaStream] = useState(null);\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\n\n//   useEffect(() => {\n//     const loadModels = async () => {\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n//       console.log(\"Face Detection Model Loaded\");\n//     };\n//     loadModels();\n//   }, []);\n\n//   const getPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n//       setMediaStream(stream);\n//       setPermissionsGranted(true);\n//       setShowPermissionMessage(false);\n//       fetchIpAddress(); // Call to fetch IP address when permissions are granted\n//     } catch (error) {\n//       alert(\"Please allow access to camera and microphone.\");\n//       setShowPermissionMessage(true);\n//     }\n//   };\n\n//   const fetchIpAddress = async () => {\n//     try {\n//       const response = await fetch(\"https://api.ipify.org?format=json\");\n//       const data = await response.json();\n//       alert(`Your IP Address: ${data.ip}`);\n//     } catch (error) {\n//       console.error(\"Error fetching IP address:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (mediaStream) {\n//       const tracks = mediaStream.getTracks();\n//       tracks.forEach((track) => {\n//         track.enabled = true;\n//       });\n//     }\n//   }, [mediaStream]);\n\n//   const detectFace = async () => {\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n//       const video = webcamRef.current.video;\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n//       const isFacePresent = detections.length > 0;\n//       setFaceDetected(isFacePresent);\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       const interval = setInterval(detectFace, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [permissionsGranted]);\n\n//   useEffect(() => {\n//     if (noFaceDuration >= 15) {\n//       alert(\"‚ö†Ô∏è Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n//       setNoFaceDuration(0);\n//     }\n//   }, [noFaceDuration]);\n\n//   const detectSound = useCallback(() => {\n//     if (!mediaStream) return;\n\n//     const audioContext = new AudioContext();\n//     const analyser = audioContext.createAnalyser();\n//     const source = audioContext.createMediaStreamSource(mediaStream);\n//     source.connect(analyser);\n//     analyser.fftSize = 256;\n//     const bufferLength = analyser.frequencyBinCount;\n//     const dataArray = new Uint8Array(bufferLength);\n\n//     const checkSound = () => {\n//       analyser.getByteFrequencyData(dataArray);\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n//       setSoundDetected(volume > 10);\n//       requestAnimationFrame(checkSound);\n//     };\n//     checkSound();\n//   }, [mediaStream]);\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       detectSound();\n//     }\n//   }, [permissionsGranted, detectSound]);\n\n//   return (\n//     <div className=\"continuous-auth-container\">\n//       <h2>Continuous Authentication</h2>\n\n//       {showPermissionMessage && (\n//         <div className=\"permission-message\">\n//           <p>Please allow access to your camera and microphone to start the exam.</p>\n//           <button onClick={getPermissions}>Allow Camera and Microphone</button>\n//         </div>\n//       )}\n\n//       {permissionsGranted ? (\n//         <>\n//           <Webcam\n//             audio={true}\n//             ref={webcamRef}\n//             screenshotFormat=\"image/jpeg\"\n//             className=\"webcam\"\n//             videoConstraints={{\n//               facingMode: \"user\",\n//               width: 720,\n//               height: 400,\n//             }}\n//           />\n//           <p>Camera and microphone are active for proctoring.</p>\n\n//           <div className=\"status-buttons-container\">\n//             <div className=\"status-buttons\">\n//               <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\n//                 {faceDetected ? \"Face Detected ‚úÖ\" : \"No Face Detected ‚ùå\"}\n//               </button>\n//               <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\n//                 {soundDetected ? \"Sound Detected üîä\" : \"No Sound Detected üîá\"}\n//               </button>\n//             </div>\n\n//             <div className=\"captured-images\">\n//               {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\n//             </div>\n//           </div>\n//         </>\n//       ) : (\n//         <p>Waiting for camera and microphone access...</p>\n//       )}\n\n//       {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\n//     </div>\n//   );\n// };\n\n// export default ContinuousAuth;\n\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\n// import * as faceapi from \"face-api.js\";\n// import Webcam from \"react-webcam\";\n// import \"./ContinuousAuth.css\";\n\n// const ContinuousAuth = () => {\n//   const webcamRef = useRef(null);\n//   const [faceDetected, setFaceDetected] = useState(false);\n//   const [soundDetected, setSoundDetected] = useState(false);\n//   const [currentImage, setCurrentImage] = useState(null);\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\n//   const [examTerminated, setExamTerminated] = useState(false);\n//   const [mediaStream, setMediaStream] = useState(null);\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\n//   const [transcript, setTranscript] = useState(\"\");\n//   const [violations, setViolations] = useState(0);\n//   const recognitionRef = useRef(null);\n\n//   // ŸÜÿ∏ÿßŸÖ ŸÉÿ¥ŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ© ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\n//   const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\n//   const audioContextRef = useRef(null);\n//   const analyserRef = useRef(null);\n//   const voiceProfileRef = useRef({\n//     baseline: null,\n//     lastAlert: 0,\n//     active: false\n//   });\n\n//   useEffect(() => {\n//     const loadModels = async () => {\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n//       console.log(\"Face Detection Model Loaded\");\n//     };\n//     loadModels();\n//   }, []);\n\n//   const getPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n//       setMediaStream(stream);\n//       setPermissionsGranted(true);\n//       setShowPermissionMessage(false);\n//       initializeSpeechRecognition();\n//       setupVoiceAnalysis(stream);\n//     } catch (error) {\n//       alert(\"Please allow access to camera and microphone.\");\n//       setShowPermissionMessage(true);\n//     }\n//   };\n\n//   // ŸÜÿ∏ÿßŸÖ ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™ ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\n//   const setupVoiceAnalysis = (stream) => {\n//     try {\n//       audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n//       analyserRef.current = audioContextRef.current.createAnalyser();\n//       analyserRef.current.fftSize = 4096;\n\n//       const source = audioContextRef.current.createMediaStreamSource(stream);\n//       source.connect(analyserRef.current);\n\n//       // ÿ•ŸÜÿ¥ÿßÿ° ÿ®ÿµŸÖÿ© ÿµŸàÿ™Ÿäÿ© ÿ£ŸàŸÑŸäÿ© ÿ®ÿπÿØ 3 ÿ´ŸàÿßŸÜŸä\n//       setTimeout(() => {\n//         voiceProfileRef.current.baseline = createVoiceProfile();\n//         voiceProfileRef.current.active = true;\n//       }, 3000);\n\n//       const analyzeVoice = () => {\n//         if (!voiceProfileRef.current.active) {\n//           requestAnimationFrame(analyzeVoice);\n//           return;\n//         }\n\n//         const currentProfile = createVoiceProfile();\n//         const isMultiple = compareVoiceProfiles(voiceProfileRef.current.baseline, currentProfile);\n\n//         if (isMultiple && Date.now() - voiceProfileRef.current.lastAlert > 5000) {\n//           setMultipleVoicesDetected(true);\n//           voiceProfileRef.current.lastAlert = Date.now();\n//         } else {\n//           setMultipleVoicesDetected(false);\n//         }\n\n//         requestAnimationFrame(analyzeVoice);\n//       };\n\n//       analyzeVoice();\n//     } catch (error) {\n//       console.error(\"Voice analysis error:\", error);\n//     }\n//   };\n\n//   const createVoiceProfile = () => {\n//     const bufferLength = analyserRef.current.frequencyBinCount;\n//     const dataArray = new Float32Array(bufferLength);\n//     analyserRef.current.getFloatFrequencyData(dataArray);\n\n//     const profile = {\n//       lowRange: 0,    // 85-300Hz\n//       midRange: 0,    // 300-1000Hz\n//       highRange: 0,   // 1000-4000Hz\n//       peakCount: 0,\n//       totalEnergy: 0\n//     };\n\n//     for (let i = 0; i < bufferLength; i++) {\n//       const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\n//       const value = Math.pow(10, dataArray[i]/20); // Convert dB to linear\n\n//       if (freq >= 85 && freq < 300) {\n//         profile.lowRange += value;\n//       } else if (freq >= 300 && freq < 1000) {\n//         profile.midRange += value;\n//       } else if (freq >= 1000 && freq < 4000) {\n//         profile.highRange += value;\n//       }\n\n//       if (dataArray[i] > -40) profile.peakCount++;\n//       profile.totalEnergy += value;\n//     }\n\n//     return profile;\n//   };\n\n//   const compareVoiceProfiles = (baseline, current) => {\n//     // ÿ≠ÿ≥ÿßÿ® ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ™ÿ∫Ÿäÿ± ŸÑŸÉŸÑ ŸÜÿ∑ÿßŸÇ ÿ™ÿ±ÿØÿØŸä\n//     const lowDiff = Math.abs(current.lowRange - baseline.lowRange) / baseline.lowRange;\n//     const midDiff = Math.abs(current.midRange - baseline.midRange) / baseline.midRange;\n//     const highDiff = Math.abs(current.highRange - baseline.highRange) / baseline.highRange;\n//     const energyDiff = Math.abs(current.totalEnergy - baseline.totalEnergy) / baseline.totalEnergy;\n//     const peakDiff = Math.abs(current.peakCount - baseline.peakCount);\n\n//     // ÿ¥ÿ±Ÿàÿ∑ ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ©\n//     return (\n//       (lowDiff > 0.6 || midDiff > 0.6 || highDiff > 0.6) &&\n//       energyDiff > 0.4 &&\n//       peakDiff > 15\n//     );\n//   };\n\n//   const initializeSpeechRecognition = () => {\n//     const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n//     if (!SpeechRecognition) {\n//       console.error(\"Speech Recognition API not supported in this browser\");\n//       return;\n//     }\n\n//     recognitionRef.current = new SpeechRecognition();\n//     recognitionRef.current.continuous = true;\n//     recognitionRef.current.interimResults = false;\n//     recognitionRef.current.lang = \"ar-SA\";\n\n//     recognitionRef.current.onresult = (event) => {\n//       const last = event.results.length - 1;\n//       const text = event.results[last][0].transcript;\n//       setTranscript(text);\n//     };\n\n//     recognitionRef.current.onerror = (event) => {\n//       console.error(\"Speech recognition error\", event.error);\n//     };\n\n//     recognitionRef.current.start();\n//     recognitionRef.current.onend = () => {\n//       recognitionRef.current.start();\n//     };\n//   };\n\n//   useEffect(() => {\n//     if (mediaStream) {\n//       const tracks = mediaStream.getTracks();\n//       tracks.forEach((track) => {\n//         track.enabled = true;\n//       });\n//     }\n\n//     return () => {\n//       if (recognitionRef.current) {\n//         recognitionRef.current.stop();\n//       }\n//       if (audioContextRef.current) {\n//         audioContextRef.current.close();\n//       }\n//     };\n//   }, [mediaStream]);\n\n//   const detectFace = async () => {\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n//       const video = webcamRef.current.video;\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n//       const isFacePresent = detections.length > 0;\n//       setFaceDetected(isFacePresent);\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       const interval = setInterval(detectFace, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [permissionsGranted]);\n\n//   useEffect(() => {\n//     if (noFaceDuration >= 15) {\n//       alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n//       setNoFaceDuration(0);\n//     }\n//   }, [noFaceDuration]);\n\n//   const detectSound = useCallback(() => {\n//     if (!mediaStream) return;\n\n//     const audioContext = new AudioContext();\n//     const analyser = audioContext.createAnalyser();\n//     const source = audioContext.createMediaStreamSource(mediaStream);\n//     source.connect(analyser);\n//     analyser.fftSize = 256;\n//     const bufferLength = analyser.frequencyBinCount;\n//     const dataArray = new Uint8Array(bufferLength);\n\n//     const checkSound = () => {\n//       analyser.getByteFrequencyData(dataArray);\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n//       setSoundDetected(volume > 10);\n//       requestAnimationFrame(checkSound);\n//     };\n//     checkSound();\n//   }, [mediaStream]);\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       detectSound();\n//     }\n//   }, [permissionsGranted, detectSound]);\n\n//   useEffect(() => {\n//     if (multipleVoicesDetected) {\n//       const newViolations = violations + 1;\n//       setViolations(newViolations);\n\n//       alert(`üö® MULTIPLE VOICES DETECTED! (Violation ${newViolations}/3)`);\n\n//       if (newViolations >= 3) {\n//         setExamTerminated(true);\n//       }\n//     }\n//   }, [multipleVoicesDetected]);\n\n//   return (\n//     <div className=\"continuous-auth-container\">\n//       <h2>Exam Proctoring System</h2>\n\n//       {showPermissionMessage && (\n//         <div className=\"permission-message\">\n//           <h3>Exam Proctoring Setup</h3>\n//           <p>This exam requires camera and microphone access for proctoring purposes.</p>\n//           <div className=\"permission-requirements\">\n//             <p>‚úì Face detection must be enabled</p>\n//             <p>‚úì Microphone must be active</p>\n//           </div>\n//           <button className=\"permission-button\" onClick={getPermissions}>\n//             Enable Camera & Microphone\n//           </button>\n//         </div>\n//       )}\n\n//       {permissionsGranted && !examTerminated && (\n//         <div className=\"monitoring-container\">\n//           <div className=\"video-section\">\n//             <Webcam\n//               audio={true}\n//               ref={webcamRef}\n//               screenshotFormat=\"image/jpeg\"\n//               className=\"webcam\"\n//               videoConstraints={{\n//                 facingMode: \"user\",\n//                 width: 480,\n//                 height: 360,\n//               }}\n//             />\n//             <div className=\"status-indicators\">\n//               <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\n//                 {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\n//               </div>\n//               <div className={`status-indicator ${soundDetected ? \"active\" : \"\"}`}>\n//                 {soundDetected ? \"Sound Detected\" : \"No Sound Detected\"}\n//               </div>\n//               {multipleVoicesDetected && (\n//                 <div className=\"status-indicator warning\">\n//                   Multiple Voices Detected!\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n\n//           <div className=\"transcript-section\">\n//             <div className=\"transcript-box\">\n//               <div className=\"transcript-header\">\n//                 <span>Arabic Speech Transcript</span>\n//                 <span className=\"violation-counter\">Violations: {violations}/3</span>\n//               </div>\n//               <div className=\"transcript-content\" dir=\"rtl\">\n//                 {transcript || \"Waiting for audio input...\"}\n//               </div>\n//               <div className={`voice-detection-status ${multipleVoicesDetected ? \"multiple\" : \"\"}`}>\n//                 {multipleVoicesDetected \n//                   ? \"Multiple voices detected!\" \n//                   : \"Voice analysis active\"}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {examTerminated && (\n//         <div className=\"termination-message\">\n//           <h3>‚úñ Exam Terminated</h3>\n//           <p>Due to multiple violations detected. Please contact your instructor.</p>\n//           <p>Total violations: {violations}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ContinuousAuth;\n\n//////////////////////////////////////////////////////////////////////////////////// \n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport Webcam from \"react-webcam\";\nimport \"./ContinuousAuth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContinuousAuth = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const [faceDetected, setFaceDetected] = useState(false);\n  const [soundDetected, setSoundDetected] = useState(false);\n  const [currentImage, setCurrentImage] = useState(null);\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\n  const [examTerminated, setExamTerminated] = useState(false);\n  const [mediaStream, setMediaStream] = useState(null);\n  const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n  const [noFaceDuration, setNoFaceDuration] = useState(0);\n  const [transcript, setTranscript] = useState(\"\");\n  const [violations, setViolations] = useState(0);\n  const recognitionRef = useRef(null);\n\n  // Enhanced voice detection system\n  const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const voiceProfileRef = useRef({\n    baseline: null,\n    currentProfile: null,\n    lastAlert: 0,\n    active: false,\n    voicePrint: null,\n    stabilityCount: 0,\n    lastChange: 0\n  });\n  useEffect(() => {\n    const loadModels = async () => {\n      await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n      console.log(\"Face Detection Model Loaded\");\n    };\n    loadModels();\n  }, []);\n  const getPermissions = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: {\n          echoCancellation: false,\n          noiseSuppression: false,\n          autoGainControl: false\n        }\n      });\n      setMediaStream(stream);\n      setPermissionsGranted(true);\n      setShowPermissionMessage(false);\n      initializeSpeechRecognition();\n      setupVoiceAnalysis(stream);\n    } catch (error) {\n      alert(\"Please allow access to camera and microphone.\");\n      setShowPermissionMessage(true);\n    }\n  };\n\n  // Enhanced voice analysis setup\n  const setupVoiceAnalysis = stream => {\n    try {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      analyserRef.current.fftSize = 4096;\n      analyserRef.current.smoothingTimeConstant = 0.2;\n      const source = audioContextRef.current.createMediaStreamSource(stream);\n      source.connect(analyserRef.current);\n\n      // Initialize voice profile after 5 seconds of stable audio\n      setTimeout(() => {\n        voiceProfileRef.current.baseline = createVoiceProfile();\n        voiceProfileRef.current.active = true;\n        console.log(\"Voice baseline profile established\");\n      }, 5000);\n      const analyzeVoice = () => {\n        if (!voiceProfileRef.current.active) {\n          requestAnimationFrame(analyzeVoice);\n          return;\n        }\n        const currentProfile = createVoiceProfile();\n        voiceProfileRef.current.currentProfile = currentProfile;\n\n        // Check for voice stability first\n        if (isVoiceStable(currentProfile)) {\n          voiceProfileRef.current.stabilityCount++;\n\n          // Update baseline if voice remains stable for a while\n          if (voiceProfileRef.current.stabilityCount > 20 && Date.now() - voiceProfileRef.current.lastChange > 10000) {\n            voiceProfileRef.current.baseline = currentProfile;\n            voiceProfileRef.current.stabilityCount = 0;\n          }\n        } else {\n          voiceProfileRef.current.stabilityCount = 0;\n        }\n\n        // Check for multiple voices\n        const isMultiple = detectMultipleVoices(currentProfile);\n        if (isMultiple && Date.now() - voiceProfileRef.current.lastAlert > 8000) {\n          setMultipleVoicesDetected(true);\n          voiceProfileRef.current.lastAlert = Date.now();\n          voiceProfileRef.current.lastChange = Date.now();\n        } else {\n          setMultipleVoicesDetected(false);\n        }\n        requestAnimationFrame(analyzeVoice);\n      };\n      analyzeVoice();\n    } catch (error) {\n      console.error(\"Voice analysis error:\", error);\n    }\n  };\n  const createVoiceProfile = () => {\n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    analyserRef.current.getFloatFrequencyData(dataArray);\n\n    // Enhanced profile with more frequency bands and features\n    const profile = {\n      bands: {\n        sub: 0,\n        // 50-100Hz\n        low: 0,\n        // 100-300Hz\n        mid: 0,\n        // 300-1000Hz\n        highMid: 0,\n        // 1000-2000Hz\n        high: 0,\n        // 2000-4000Hz\n        veryHigh: 0 // 4000-8000Hz\n      },\n      peakCount: 0,\n      totalEnergy: 0,\n      spectralFlatness: 0,\n      formants: [],\n      pitch: 0\n    };\n    let sum = 0;\n    let logSum = 0;\n    let peakValues = [];\n    for (let i = 0; i < bufferLength; i++) {\n      const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\n      const value = Math.pow(10, dataArray[i] / 20); // Convert dB to linear\n      sum += value;\n      logSum += Math.log(value + 0.0001); // Avoid log(0)\n\n      // Frequency band analysis\n      if (freq >= 50 && freq < 100) profile.bands.sub += value;else if (freq >= 100 && freq < 300) profile.bands.low += value;else if (freq >= 300 && freq < 1000) profile.bands.mid += value;else if (freq >= 1000 && freq < 2000) profile.bands.highMid += value;else if (freq >= 2000 && freq < 4000) profile.bands.high += value;else if (freq >= 4000 && freq < 8000) profile.bands.veryHigh += value;\n\n      // Peak detection\n      if (dataArray[i] > -40) {\n        profile.peakCount++;\n        peakValues.push(freq);\n      }\n    }\n    profile.totalEnergy = sum;\n\n    // Calculate spectral flatness (measure of tone vs noise)\n    profile.spectralFlatness = Math.exp(logSum / bufferLength) / (sum / bufferLength);\n\n    // Simple formant estimation\n    if (peakValues.length > 0) {\n      profile.formants = [peakValues[0],\n      // F1\n      peakValues[Math.floor(peakValues.length * 0.3)],\n      // F2\n      peakValues[Math.floor(peakValues.length * 0.6)] // F3\n      ];\n\n      // Estimate pitch as the lowest strong frequency\n      profile.pitch = peakValues[0];\n    }\n    return profile;\n  };\n  const isVoiceStable = currentProfile => {\n    if (!voiceProfileRef.current.baseline) return false;\n    const baseline = voiceProfileRef.current.baseline;\n    const energyDiff = Math.abs(currentProfile.totalEnergy - baseline.totalEnergy) / baseline.totalEnergy;\n    const pitchDiff = currentProfile.pitch && baseline.pitch ? Math.abs(currentProfile.pitch - baseline.pitch) / baseline.pitch : 0;\n    return energyDiff < 0.3 && pitchDiff < 0.2;\n  };\n  const detectMultipleVoices = currentProfile => {\n    if (!voiceProfileRef.current.baseline) return false;\n    const baseline = voiceProfileRef.current.baseline;\n\n    // Calculate differences in each frequency band\n    const bandDiffs = Object.keys(currentProfile.bands).map(band => {\n      return Math.abs(currentProfile.bands[band] - baseline.bands[band]) / (baseline.bands[band] || 0.001);\n    });\n\n    // Calculate overall differences\n    const energyDiff = Math.abs(currentProfile.totalEnergy - baseline.totalEnergy) / baseline.totalEnergy;\n    const pitchDiff = currentProfile.pitch && baseline.pitch ? Math.abs(currentProfile.pitch - baseline.pitch) / baseline.pitch : 0;\n    const flatnessDiff = Math.abs(currentProfile.spectralFlatness - baseline.spectralFlatness);\n    const formantDiff = currentProfile.formants.length === 3 && baseline.formants.length === 3 ? currentProfile.formants.reduce((sum, f, i) => sum + Math.abs(f - baseline.formants[i]), 0) / 3 : 0;\n\n    // Conditions for multiple voice detection\n    const significantBandChanges = bandDiffs.filter(diff => diff > 0.5).length >= 2;\n    const energySpike = energyDiff > 0.7;\n    const pitchChange = pitchDiff > 0.3;\n    const formantChange = formantDiff > 150; // Hz difference\n\n    return (significantBandChanges || energySpike) && (pitchChange || formantChange) && flatnessDiff < 0.3 // Not just background noise\n    ;\n  };\n  const initializeSpeechRecognition = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      console.error(\"Speech Recognition API not supported in this browser\");\n      return;\n    }\n    recognitionRef.current = new SpeechRecognition();\n    recognitionRef.current.continuous = true;\n    recognitionRef.current.interimResults = false;\n    recognitionRef.current.lang = \"ar-SA\";\n    recognitionRef.current.onresult = event => {\n      const last = event.results.length - 1;\n      const text = event.results[last][0].transcript;\n      setTranscript(prev => prev + \" \" + text);\n    };\n    recognitionRef.current.onerror = event => {\n      console.error(\"Speech recognition error\", event.error);\n    };\n    recognitionRef.current.start();\n    recognitionRef.current.onend = () => {\n      recognitionRef.current.start();\n    };\n  };\n  useEffect(() => {\n    if (mediaStream) {\n      const tracks = mediaStream.getTracks();\n      tracks.forEach(track => {\n        track.enabled = true;\n      });\n    }\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n    };\n  }, [mediaStream]);\n  const detectFace = async () => {\n    if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n      const video = webcamRef.current.video;\n      const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n      const isFacePresent = detections.length > 0;\n      setFaceDetected(isFacePresent);\n      setNoFaceDuration(prev => isFacePresent ? 0 : prev + 1);\n    }\n  };\n  useEffect(() => {\n    if (permissionsGranted) {\n      const interval = setInterval(detectFace, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [permissionsGranted]);\n  useEffect(() => {\n    if (noFaceDuration >= 15) {\n      alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n      setNoFaceDuration(0);\n    }\n  }, [noFaceDuration]);\n  const detectSound = useCallback(() => {\n    if (!mediaStream) return;\n    const audioContext = new AudioContext();\n    const analyser = audioContext.createAnalyser();\n    const source = audioContext.createMediaStreamSource(mediaStream);\n    source.connect(analyser);\n    analyser.fftSize = 256;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const checkSound = () => {\n      analyser.getByteFrequencyData(dataArray);\n      const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n      setSoundDetected(volume > 10);\n      requestAnimationFrame(checkSound);\n    };\n    checkSound();\n  }, [mediaStream]);\n  useEffect(() => {\n    if (permissionsGranted) {\n      detectSound();\n    }\n  }, [permissionsGranted, detectSound]);\n  useEffect(() => {\n    if (multipleVoicesDetected) {\n      const newViolations = violations + 1;\n      setViolations(newViolations);\n      alert(`üö® MULTIPLE VOICES DETECTED! (Violation ${newViolations}/3)`);\n      if (newViolations >= 3) {\n        setExamTerminated(true);\n      }\n    }\n  }, [multipleVoicesDetected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"continuous-auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Exam Proctoring System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 7\n    }, this), showPermissionMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"permission-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Exam Proctoring Setup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This exam requires camera and microphone access for proctoring purposes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"permission-requirements\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2713 Face detection must be enabled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2713 Microphone must be active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2713 Voice authentication will be performed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"permission-button\",\n        onClick: getPermissions,\n        children: \"Enable Camera & Microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 9\n    }, this), permissionsGranted && !examTerminated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monitoring-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-section\",\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          audio: true,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\",\n          className: \"webcam\",\n          videoConstraints: {\n            facingMode: \"user\",\n            width: 480,\n            height: 360\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicators\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${faceDetected ? \"active\" : \"\"}`,\n            children: faceDetected ? \"Face Detected\" : \"No Face Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${soundDetected ? \"active\" : \"\"}`,\n            children: soundDetected ? \"Sound Detected\" : \"No Sound Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 15\n          }, this), multipleVoicesDetected && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator warning\",\n            children: \"Multiple Voices Detected!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Arabic Speech Transcript\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 898,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"violation-counter\",\n              children: [\"Violations: \", violations, \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-content\",\n            dir: \"rtl\",\n            children: transcript || \"Waiting for audio input...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `voice-detection-status ${multipleVoicesDetected ? \"multiple\" : \"\"}`,\n            children: multipleVoicesDetected ? \"üö® Multiple voices detected!\" : \"Voice analysis: Normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 904,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 9\n    }, this), examTerminated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"termination-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u2716 Exam Terminated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Due to multiple violations detected. Please contact your instructor.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total violations: \", violations]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 848,\n    columnNumber: 5\n  }, this);\n};\n_s(ContinuousAuth, \"Mrpqo08g+jRfCEOTMJbJsAww2l0=\");\n_c = ContinuousAuth;\nexport default ContinuousAuth;\nvar _c;\n$RefreshReg$(_c, \"ContinuousAuth\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","faceapi","Webcam","jsxDEV","_jsxDEV","ContinuousAuth","_s","webcamRef","faceDetected","setFaceDetected","soundDetected","setSoundDetected","currentImage","setCurrentImage","permissionsGranted","setPermissionsGranted","examTerminated","setExamTerminated","mediaStream","setMediaStream","showPermissionMessage","setShowPermissionMessage","noFaceDuration","setNoFaceDuration","transcript","setTranscript","violations","setViolations","recognitionRef","multipleVoicesDetected","setMultipleVoicesDetected","audioContextRef","analyserRef","voiceProfileRef","baseline","currentProfile","lastAlert","active","voicePrint","stabilityCount","lastChange","loadModels","nets","tinyFaceDetector","loadFromUri","console","log","getPermissions","stream","navigator","mediaDevices","getUserMedia","video","audio","echoCancellation","noiseSuppression","autoGainControl","initializeSpeechRecognition","setupVoiceAnalysis","error","alert","current","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","smoothingTimeConstant","source","createMediaStreamSource","connect","setTimeout","createVoiceProfile","analyzeVoice","requestAnimationFrame","isVoiceStable","Date","now","isMultiple","detectMultipleVoices","bufferLength","frequencyBinCount","dataArray","Float32Array","getFloatFrequencyData","profile","bands","sub","low","mid","highMid","high","veryHigh","peakCount","totalEnergy","spectralFlatness","formants","pitch","sum","logSum","peakValues","i","freq","sampleRate","value","Math","pow","push","exp","length","floor","energyDiff","abs","pitchDiff","bandDiffs","Object","keys","map","band","flatnessDiff","formantDiff","reduce","f","significantBandChanges","filter","diff","energySpike","pitchChange","formantChange","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","last","results","text","prev","onerror","start","onend","tracks","getTracks","forEach","track","enabled","stop","close","detectFace","readyState","detections","detectAllFaces","TinyFaceDetectorOptions","isFacePresent","interval","setInterval","clearInterval","detectSound","audioContext","analyser","Uint8Array","checkSound","getByteFrequencyData","volume","newViolations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","screenshotFormat","videoConstraints","facingMode","width","height","dir","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/continous-authentication1/continous-authentication1/continous-authentication/continous-authentication/src/ContinuousAuth.js"],"sourcesContent":["// import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n// import * as faceapi from \"face-api.js\";\r\n// import Webcam from \"react-webcam\";\r\n// import axios from \"axios\";\r\n// import \"./ContinuousAuth.css\";\r\n\r\n// const ContinuousAuth = () => {\r\n//   const webcamRef = useRef(null);\r\n//   const [faceDetected, setFaceDetected] = useState(false);\r\n//   const [soundDetected, setSoundDetected] = useState(false);\r\n//   const [currentImage, setCurrentImage] = useState(null);\r\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n//   const [examTerminated, setExamTerminated] = useState(false);\r\n//   const [mediaStream, setMediaStream] = useState(null);\r\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     const loadModels = async () => {\r\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n//       console.log(\"Face Detection Model Loaded\");\r\n//     };\r\n//     loadModels();\r\n//   }, []);\r\n\r\n//   const getPermissions = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n//       setMediaStream(stream);\r\n//       setPermissionsGranted(true);\r\n//       setShowPermissionMessage(false);\r\n//       fetchIpAddress(); // Call to fetch IP address when permissions are granted\r\n//     } catch (error) {\r\n//       alert(\"Please allow access to camera and microphone.\");\r\n//       setShowPermissionMessage(true);\r\n//     }\r\n//   };\r\n\r\n//   const fetchIpAddress = async () => {\r\n//     try {\r\n//       const response = await fetch(\"https://api.ipify.org?format=json\");\r\n//       const data = await response.json();\r\n//       alert(`Your IP Address: ${data.ip}`);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching IP address:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (mediaStream) {\r\n//       const tracks = mediaStream.getTracks();\r\n//       tracks.forEach((track) => {\r\n//         track.enabled = true;\r\n//       });\r\n//     }\r\n//   }, [mediaStream]);\r\n\r\n//   const detectFace = async () => {\r\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n//       const video = webcamRef.current.video;\r\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n//       const isFacePresent = detections.length > 0;\r\n//       setFaceDetected(isFacePresent);\r\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       const interval = setInterval(detectFace, 1000);\r\n//       return () => clearInterval(interval);\r\n//     }\r\n//   }, [permissionsGranted]);\r\n\r\n//   useEffect(() => {\r\n//     if (noFaceDuration >= 15) {\r\n//       alert(\"‚ö†Ô∏è Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n//       setNoFaceDuration(0);\r\n//     }\r\n//   }, [noFaceDuration]);\r\n\r\n//   const detectSound = useCallback(() => {\r\n//     if (!mediaStream) return;\r\n\r\n//     const audioContext = new AudioContext();\r\n//     const analyser = audioContext.createAnalyser();\r\n//     const source = audioContext.createMediaStreamSource(mediaStream);\r\n//     source.connect(analyser);\r\n//     analyser.fftSize = 256;\r\n//     const bufferLength = analyser.frequencyBinCount;\r\n//     const dataArray = new Uint8Array(bufferLength);\r\n\r\n//     const checkSound = () => {\r\n//       analyser.getByteFrequencyData(dataArray);\r\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n//       setSoundDetected(volume > 10);\r\n//       requestAnimationFrame(checkSound);\r\n//     };\r\n//     checkSound();\r\n//   }, [mediaStream]);\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       detectSound();\r\n//     }\r\n//   }, [permissionsGranted, detectSound]);\r\n\r\n//   return (\r\n//     <div className=\"continuous-auth-container\">\r\n//       <h2>Continuous Authentication</h2>\r\n\r\n//       {showPermissionMessage && (\r\n//         <div className=\"permission-message\">\r\n//           <p>Please allow access to your camera and microphone to start the exam.</p>\r\n//           <button onClick={getPermissions}>Allow Camera and Microphone</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {permissionsGranted ? (\r\n//         <>\r\n//           <Webcam\r\n//             audio={true}\r\n//             ref={webcamRef}\r\n//             screenshotFormat=\"image/jpeg\"\r\n//             className=\"webcam\"\r\n//             videoConstraints={{\r\n//               facingMode: \"user\",\r\n//               width: 720,\r\n//               height: 400,\r\n//             }}\r\n//           />\r\n//           <p>Camera and microphone are active for proctoring.</p>\r\n\r\n//           <div className=\"status-buttons-container\">\r\n//             <div className=\"status-buttons\">\r\n//               <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n//                 {faceDetected ? \"Face Detected ‚úÖ\" : \"No Face Detected ‚ùå\"}\r\n//               </button>\r\n//               <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n//                 {soundDetected ? \"Sound Detected üîä\" : \"No Sound Detected üîá\"}\r\n//               </button>\r\n//             </div>\r\n\r\n//             <div className=\"captured-images\">\r\n//               {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\r\n//             </div>\r\n//           </div>\r\n//         </>\r\n//       ) : (\r\n//         <p>Waiting for camera and microphone access...</p>\r\n//       )}\r\n\r\n//       {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n// import * as faceapi from \"face-api.js\";\r\n// import Webcam from \"react-webcam\";\r\n// import \"./ContinuousAuth.css\";\r\n\r\n// const ContinuousAuth = () => {\r\n//   const webcamRef = useRef(null);\r\n//   const [faceDetected, setFaceDetected] = useState(false);\r\n//   const [soundDetected, setSoundDetected] = useState(false);\r\n//   const [currentImage, setCurrentImage] = useState(null);\r\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n//   const [examTerminated, setExamTerminated] = useState(false);\r\n//   const [mediaStream, setMediaStream] = useState(null);\r\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n//   const [transcript, setTranscript] = useState(\"\");\r\n//   const [violations, setViolations] = useState(0);\r\n//   const recognitionRef = useRef(null);\r\n\r\n//   // ŸÜÿ∏ÿßŸÖ ŸÉÿ¥ŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ© ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\r\n//   const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\r\n//   const audioContextRef = useRef(null);\r\n//   const analyserRef = useRef(null);\r\n//   const voiceProfileRef = useRef({\r\n//     baseline: null,\r\n//     lastAlert: 0,\r\n//     active: false\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const loadModels = async () => {\r\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n//       console.log(\"Face Detection Model Loaded\");\r\n//     };\r\n//     loadModels();\r\n//   }, []);\r\n\r\n//   const getPermissions = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n//       setMediaStream(stream);\r\n//       setPermissionsGranted(true);\r\n//       setShowPermissionMessage(false);\r\n//       initializeSpeechRecognition();\r\n//       setupVoiceAnalysis(stream);\r\n//     } catch (error) {\r\n//       alert(\"Please allow access to camera and microphone.\");\r\n//       setShowPermissionMessage(true);\r\n//     }\r\n//   };\r\n\r\n//   // ŸÜÿ∏ÿßŸÖ ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™ ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\r\n//   const setupVoiceAnalysis = (stream) => {\r\n//     try {\r\n//       audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n//       analyserRef.current = audioContextRef.current.createAnalyser();\r\n//       analyserRef.current.fftSize = 4096;\r\n      \r\n//       const source = audioContextRef.current.createMediaStreamSource(stream);\r\n//       source.connect(analyserRef.current);\r\n\r\n//       // ÿ•ŸÜÿ¥ÿßÿ° ÿ®ÿµŸÖÿ© ÿµŸàÿ™Ÿäÿ© ÿ£ŸàŸÑŸäÿ© ÿ®ÿπÿØ 3 ÿ´ŸàÿßŸÜŸä\r\n//       setTimeout(() => {\r\n//         voiceProfileRef.current.baseline = createVoiceProfile();\r\n//         voiceProfileRef.current.active = true;\r\n//       }, 3000);\r\n\r\n//       const analyzeVoice = () => {\r\n//         if (!voiceProfileRef.current.active) {\r\n//           requestAnimationFrame(analyzeVoice);\r\n//           return;\r\n//         }\r\n\r\n//         const currentProfile = createVoiceProfile();\r\n//         const isMultiple = compareVoiceProfiles(voiceProfileRef.current.baseline, currentProfile);\r\n        \r\n//         if (isMultiple && Date.now() - voiceProfileRef.current.lastAlert > 5000) {\r\n//           setMultipleVoicesDetected(true);\r\n//           voiceProfileRef.current.lastAlert = Date.now();\r\n//         } else {\r\n//           setMultipleVoicesDetected(false);\r\n//         }\r\n\r\n//         requestAnimationFrame(analyzeVoice);\r\n//       };\r\n\r\n//       analyzeVoice();\r\n//     } catch (error) {\r\n//       console.error(\"Voice analysis error:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const createVoiceProfile = () => {\r\n//     const bufferLength = analyserRef.current.frequencyBinCount;\r\n//     const dataArray = new Float32Array(bufferLength);\r\n//     analyserRef.current.getFloatFrequencyData(dataArray);\r\n\r\n//     const profile = {\r\n//       lowRange: 0,    // 85-300Hz\r\n//       midRange: 0,    // 300-1000Hz\r\n//       highRange: 0,   // 1000-4000Hz\r\n//       peakCount: 0,\r\n//       totalEnergy: 0\r\n//     };\r\n\r\n//     for (let i = 0; i < bufferLength; i++) {\r\n//       const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\r\n//       const value = Math.pow(10, dataArray[i]/20); // Convert dB to linear\r\n\r\n//       if (freq >= 85 && freq < 300) {\r\n//         profile.lowRange += value;\r\n//       } else if (freq >= 300 && freq < 1000) {\r\n//         profile.midRange += value;\r\n//       } else if (freq >= 1000 && freq < 4000) {\r\n//         profile.highRange += value;\r\n//       }\r\n\r\n//       if (dataArray[i] > -40) profile.peakCount++;\r\n//       profile.totalEnergy += value;\r\n//     }\r\n\r\n//     return profile;\r\n//   };\r\n\r\n//   const compareVoiceProfiles = (baseline, current) => {\r\n//     // ÿ≠ÿ≥ÿßÿ® ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ™ÿ∫Ÿäÿ± ŸÑŸÉŸÑ ŸÜÿ∑ÿßŸÇ ÿ™ÿ±ÿØÿØŸä\r\n//     const lowDiff = Math.abs(current.lowRange - baseline.lowRange) / baseline.lowRange;\r\n//     const midDiff = Math.abs(current.midRange - baseline.midRange) / baseline.midRange;\r\n//     const highDiff = Math.abs(current.highRange - baseline.highRange) / baseline.highRange;\r\n//     const energyDiff = Math.abs(current.totalEnergy - baseline.totalEnergy) / baseline.totalEnergy;\r\n//     const peakDiff = Math.abs(current.peakCount - baseline.peakCount);\r\n\r\n//     // ÿ¥ÿ±Ÿàÿ∑ ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ©\r\n//     return (\r\n//       (lowDiff > 0.6 || midDiff > 0.6 || highDiff > 0.6) &&\r\n//       energyDiff > 0.4 &&\r\n//       peakDiff > 15\r\n//     );\r\n//   };\r\n\r\n//   const initializeSpeechRecognition = () => {\r\n//     const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n//     if (!SpeechRecognition) {\r\n//       console.error(\"Speech Recognition API not supported in this browser\");\r\n//       return;\r\n//     }\r\n\r\n//     recognitionRef.current = new SpeechRecognition();\r\n//     recognitionRef.current.continuous = true;\r\n//     recognitionRef.current.interimResults = false;\r\n//     recognitionRef.current.lang = \"ar-SA\";\r\n\r\n//     recognitionRef.current.onresult = (event) => {\r\n//       const last = event.results.length - 1;\r\n//       const text = event.results[last][0].transcript;\r\n//       setTranscript(text);\r\n//     };\r\n\r\n//     recognitionRef.current.onerror = (event) => {\r\n//       console.error(\"Speech recognition error\", event.error);\r\n//     };\r\n\r\n//     recognitionRef.current.start();\r\n//     recognitionRef.current.onend = () => {\r\n//       recognitionRef.current.start();\r\n//     };\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (mediaStream) {\r\n//       const tracks = mediaStream.getTracks();\r\n//       tracks.forEach((track) => {\r\n//         track.enabled = true;\r\n//       });\r\n//     }\r\n\r\n//     return () => {\r\n//       if (recognitionRef.current) {\r\n//         recognitionRef.current.stop();\r\n//       }\r\n//       if (audioContextRef.current) {\r\n//         audioContextRef.current.close();\r\n//       }\r\n//     };\r\n//   }, [mediaStream]);\r\n\r\n//   const detectFace = async () => {\r\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n//       const video = webcamRef.current.video;\r\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n//       const isFacePresent = detections.length > 0;\r\n//       setFaceDetected(isFacePresent);\r\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       const interval = setInterval(detectFace, 1000);\r\n//       return () => clearInterval(interval);\r\n//     }\r\n//   }, [permissionsGranted]);\r\n\r\n//   useEffect(() => {\r\n//     if (noFaceDuration >= 15) {\r\n//       alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n//       setNoFaceDuration(0);\r\n//     }\r\n//   }, [noFaceDuration]);\r\n\r\n//   const detectSound = useCallback(() => {\r\n//     if (!mediaStream) return;\r\n\r\n//     const audioContext = new AudioContext();\r\n//     const analyser = audioContext.createAnalyser();\r\n//     const source = audioContext.createMediaStreamSource(mediaStream);\r\n//     source.connect(analyser);\r\n//     analyser.fftSize = 256;\r\n//     const bufferLength = analyser.frequencyBinCount;\r\n//     const dataArray = new Uint8Array(bufferLength);\r\n\r\n//     const checkSound = () => {\r\n//       analyser.getByteFrequencyData(dataArray);\r\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n//       setSoundDetected(volume > 10);\r\n//       requestAnimationFrame(checkSound);\r\n//     };\r\n//     checkSound();\r\n//   }, [mediaStream]);\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       detectSound();\r\n//     }\r\n//   }, [permissionsGranted, detectSound]);\r\n\r\n//   useEffect(() => {\r\n//     if (multipleVoicesDetected) {\r\n//       const newViolations = violations + 1;\r\n//       setViolations(newViolations);\r\n      \r\n//       alert(`üö® MULTIPLE VOICES DETECTED! (Violation ${newViolations}/3)`);\r\n      \r\n//       if (newViolations >= 3) {\r\n//         setExamTerminated(true);\r\n//       }\r\n//     }\r\n//   }, [multipleVoicesDetected]);\r\n\r\n//   return (\r\n//     <div className=\"continuous-auth-container\">\r\n//       <h2>Exam Proctoring System</h2>\r\n\r\n//       {showPermissionMessage && (\r\n//         <div className=\"permission-message\">\r\n//           <h3>Exam Proctoring Setup</h3>\r\n//           <p>This exam requires camera and microphone access for proctoring purposes.</p>\r\n//           <div className=\"permission-requirements\">\r\n//             <p>‚úì Face detection must be enabled</p>\r\n//             <p>‚úì Microphone must be active</p>\r\n//           </div>\r\n//           <button className=\"permission-button\" onClick={getPermissions}>\r\n//             Enable Camera & Microphone\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {permissionsGranted && !examTerminated && (\r\n//         <div className=\"monitoring-container\">\r\n//           <div className=\"video-section\">\r\n//             <Webcam\r\n//               audio={true}\r\n//               ref={webcamRef}\r\n//               screenshotFormat=\"image/jpeg\"\r\n//               className=\"webcam\"\r\n//               videoConstraints={{\r\n//                 facingMode: \"user\",\r\n//                 width: 480,\r\n//                 height: 360,\r\n//               }}\r\n//             />\r\n//             <div className=\"status-indicators\">\r\n//               <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\r\n//                 {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\r\n//               </div>\r\n//               <div className={`status-indicator ${soundDetected ? \"active\" : \"\"}`}>\r\n//                 {soundDetected ? \"Sound Detected\" : \"No Sound Detected\"}\r\n//               </div>\r\n//               {multipleVoicesDetected && (\r\n//                 <div className=\"status-indicator warning\">\r\n//                   Multiple Voices Detected!\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"transcript-section\">\r\n//             <div className=\"transcript-box\">\r\n//               <div className=\"transcript-header\">\r\n//                 <span>Arabic Speech Transcript</span>\r\n//                 <span className=\"violation-counter\">Violations: {violations}/3</span>\r\n//               </div>\r\n//               <div className=\"transcript-content\" dir=\"rtl\">\r\n//                 {transcript || \"Waiting for audio input...\"}\r\n//               </div>\r\n//               <div className={`voice-detection-status ${multipleVoicesDetected ? \"multiple\" : \"\"}`}>\r\n//                 {multipleVoicesDetected \r\n//                   ? \"Multiple voices detected!\" \r\n//                   : \"Voice analysis active\"}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {examTerminated && (\r\n//         <div className=\"termination-message\">\r\n//           <h3>‚úñ Exam Terminated</h3>\r\n//           <p>Due to multiple violations detected. Please contact your instructor.</p>\r\n//           <p>Total violations: {violations}</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////////////////// \r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./ContinuousAuth.css\";\r\n\r\nconst ContinuousAuth = () => {\r\n  const webcamRef = useRef(null);\r\n  const [faceDetected, setFaceDetected] = useState(false);\r\n  const [soundDetected, setSoundDetected] = useState(false);\r\n  const [currentImage, setCurrentImage] = useState(null);\r\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n  const [examTerminated, setExamTerminated] = useState(false);\r\n  const [mediaStream, setMediaStream] = useState(null);\r\n  const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n  const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n  const [transcript, setTranscript] = useState(\"\");\r\n  const [violations, setViolations] = useState(0);\r\n  const recognitionRef = useRef(null);\r\n\r\n  // Enhanced voice detection system\r\n  const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\r\n  const audioContextRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const voiceProfileRef = useRef({\r\n    baseline: null,\r\n    currentProfile: null,\r\n    lastAlert: 0,\r\n    active: false,\r\n    voicePrint: null,\r\n    stabilityCount: 0,\r\n    lastChange: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n      console.log(\"Face Detection Model Loaded\");\r\n    };\r\n    loadModels();\r\n  }, []);\r\n\r\n  const getPermissions = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        video: true, \r\n        audio: {\r\n          echoCancellation: false,\r\n          noiseSuppression: false,\r\n          autoGainControl: false\r\n        }\r\n      });\r\n      setMediaStream(stream);\r\n      setPermissionsGranted(true);\r\n      setShowPermissionMessage(false);\r\n      initializeSpeechRecognition();\r\n      setupVoiceAnalysis(stream);\r\n    } catch (error) {\r\n      alert(\"Please allow access to camera and microphone.\");\r\n      setShowPermissionMessage(true);\r\n    }\r\n  };\r\n\r\n  // Enhanced voice analysis setup\r\n  const setupVoiceAnalysis = (stream) => {\r\n    try {\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      analyserRef.current = audioContextRef.current.createAnalyser();\r\n      analyserRef.current.fftSize = 4096;\r\n      analyserRef.current.smoothingTimeConstant = 0.2;\r\n      \r\n      const source = audioContextRef.current.createMediaStreamSource(stream);\r\n      source.connect(analyserRef.current);\r\n\r\n      // Initialize voice profile after 5 seconds of stable audio\r\n      setTimeout(() => {\r\n        voiceProfileRef.current.baseline = createVoiceProfile();\r\n        voiceProfileRef.current.active = true;\r\n        console.log(\"Voice baseline profile established\");\r\n      }, 5000);\r\n\r\n      const analyzeVoice = () => {\r\n        if (!voiceProfileRef.current.active) {\r\n          requestAnimationFrame(analyzeVoice);\r\n          return;\r\n        }\r\n\r\n        const currentProfile = createVoiceProfile();\r\n        voiceProfileRef.current.currentProfile = currentProfile;\r\n        \r\n        // Check for voice stability first\r\n        if (isVoiceStable(currentProfile)) {\r\n          voiceProfileRef.current.stabilityCount++;\r\n          \r\n          // Update baseline if voice remains stable for a while\r\n          if (voiceProfileRef.current.stabilityCount > 20 && \r\n              Date.now() - voiceProfileRef.current.lastChange > 10000) {\r\n            voiceProfileRef.current.baseline = currentProfile;\r\n            voiceProfileRef.current.stabilityCount = 0;\r\n          }\r\n        } else {\r\n          voiceProfileRef.current.stabilityCount = 0;\r\n        }\r\n\r\n        // Check for multiple voices\r\n        const isMultiple = detectMultipleVoices(currentProfile);\r\n        \r\n        if (isMultiple && Date.now() - voiceProfileRef.current.lastAlert > 8000) {\r\n          setMultipleVoicesDetected(true);\r\n          voiceProfileRef.current.lastAlert = Date.now();\r\n          voiceProfileRef.current.lastChange = Date.now();\r\n        } else {\r\n          setMultipleVoicesDetected(false);\r\n        }\r\n\r\n        requestAnimationFrame(analyzeVoice);\r\n      };\r\n\r\n      analyzeVoice();\r\n    } catch (error) {\r\n      console.error(\"Voice analysis error:\", error);\r\n    }\r\n  };\r\n\r\n  const createVoiceProfile = () => {\r\n    const bufferLength = analyserRef.current.frequencyBinCount;\r\n    const dataArray = new Float32Array(bufferLength);\r\n    analyserRef.current.getFloatFrequencyData(dataArray);\r\n\r\n    // Enhanced profile with more frequency bands and features\r\n    const profile = {\r\n      bands: {\r\n        sub: 0,       // 50-100Hz\r\n        low: 0,       // 100-300Hz\r\n        mid: 0,       // 300-1000Hz\r\n        highMid: 0,   // 1000-2000Hz\r\n        high: 0,      // 2000-4000Hz\r\n        veryHigh: 0   // 4000-8000Hz\r\n      },\r\n      peakCount: 0,\r\n      totalEnergy: 0,\r\n      spectralFlatness: 0,\r\n      formants: [],\r\n      pitch: 0\r\n    };\r\n\r\n    let sum = 0;\r\n    let logSum = 0;\r\n    let peakValues = [];\r\n\r\n    for (let i = 0; i < bufferLength; i++) {\r\n      const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\r\n      const value = Math.pow(10, dataArray[i]/20); // Convert dB to linear\r\n      sum += value;\r\n      logSum += Math.log(value + 0.0001); // Avoid log(0)\r\n\r\n      // Frequency band analysis\r\n      if (freq >= 50 && freq < 100) profile.bands.sub += value;\r\n      else if (freq >= 100 && freq < 300) profile.bands.low += value;\r\n      else if (freq >= 300 && freq < 1000) profile.bands.mid += value;\r\n      else if (freq >= 1000 && freq < 2000) profile.bands.highMid += value;\r\n      else if (freq >= 2000 && freq < 4000) profile.bands.high += value;\r\n      else if (freq >= 4000 && freq < 8000) profile.bands.veryHigh += value;\r\n\r\n      // Peak detection\r\n      if (dataArray[i] > -40) {\r\n        profile.peakCount++;\r\n        peakValues.push(freq);\r\n      }\r\n    }\r\n\r\n    profile.totalEnergy = sum;\r\n    \r\n    // Calculate spectral flatness (measure of tone vs noise)\r\n    profile.spectralFlatness = Math.exp(logSum / bufferLength) / (sum / bufferLength);\r\n    \r\n    // Simple formant estimation\r\n    if (peakValues.length > 0) {\r\n      profile.formants = [\r\n        peakValues[0], // F1\r\n        peakValues[Math.floor(peakValues.length * 0.3)], // F2\r\n        peakValues[Math.floor(peakValues.length * 0.6)]  // F3\r\n      ];\r\n      \r\n      // Estimate pitch as the lowest strong frequency\r\n      profile.pitch = peakValues[0];\r\n    }\r\n\r\n    return profile;\r\n  };\r\n\r\n  const isVoiceStable = (currentProfile) => {\r\n    if (!voiceProfileRef.current.baseline) return false;\r\n    \r\n    const baseline = voiceProfileRef.current.baseline;\r\n    const energyDiff = Math.abs(currentProfile.totalEnergy - baseline.totalEnergy) / baseline.totalEnergy;\r\n    const pitchDiff = currentProfile.pitch && baseline.pitch ? \r\n                     Math.abs(currentProfile.pitch - baseline.pitch) / baseline.pitch : 0;\r\n    \r\n    return energyDiff < 0.3 && pitchDiff < 0.2;\r\n  };\r\n\r\n  const detectMultipleVoices = (currentProfile) => {\r\n    if (!voiceProfileRef.current.baseline) return false;\r\n    \r\n    const baseline = voiceProfileRef.current.baseline;\r\n    \r\n    // Calculate differences in each frequency band\r\n    const bandDiffs = Object.keys(currentProfile.bands).map(band => {\r\n      return Math.abs(currentProfile.bands[band] - baseline.bands[band]) / (baseline.bands[band] || 0.001);\r\n    });\r\n    \r\n    // Calculate overall differences\r\n    const energyDiff = Math.abs(currentProfile.totalEnergy - baseline.totalEnergy) / baseline.totalEnergy;\r\n    const pitchDiff = currentProfile.pitch && baseline.pitch ? \r\n                     Math.abs(currentProfile.pitch - baseline.pitch) / baseline.pitch : 0;\r\n    const flatnessDiff = Math.abs(currentProfile.spectralFlatness - baseline.spectralFlatness);\r\n    const formantDiff = currentProfile.formants.length === 3 && baseline.formants.length === 3 ?\r\n                       currentProfile.formants.reduce((sum, f, i) => sum + Math.abs(f - baseline.formants[i]), 0) / 3 : 0;\r\n    \r\n    // Conditions for multiple voice detection\r\n    const significantBandChanges = bandDiffs.filter(diff => diff > 0.5).length >= 2;\r\n    const energySpike = energyDiff > 0.7;\r\n    const pitchChange = pitchDiff > 0.3;\r\n    const formantChange = formantDiff > 150; // Hz difference\r\n    \r\n    return (\r\n      (significantBandChanges || energySpike) && \r\n      (pitchChange || formantChange) &&\r\n      flatnessDiff < 0.3 // Not just background noise\r\n    );\r\n  };\r\n\r\n  const initializeSpeechRecognition = () => {\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if (!SpeechRecognition) {\r\n      console.error(\"Speech Recognition API not supported in this browser\");\r\n      return;\r\n    }\r\n\r\n    recognitionRef.current = new SpeechRecognition();\r\n    recognitionRef.current.continuous = true;\r\n    recognitionRef.current.interimResults = false;\r\n    recognitionRef.current.lang = \"ar-SA\";\r\n\r\n    recognitionRef.current.onresult = (event) => {\r\n      const last = event.results.length - 1;\r\n      const text = event.results[last][0].transcript;\r\n      setTranscript(prev => prev + \" \" + text);\r\n    };\r\n\r\n    recognitionRef.current.onerror = (event) => {\r\n      console.error(\"Speech recognition error\", event.error);\r\n    };\r\n\r\n    recognitionRef.current.start();\r\n    recognitionRef.current.onend = () => {\r\n      recognitionRef.current.start();\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mediaStream) {\r\n      const tracks = mediaStream.getTracks();\r\n      tracks.forEach((track) => {\r\n        track.enabled = true;\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (recognitionRef.current) {\r\n        recognitionRef.current.stop();\r\n      }\r\n      if (audioContextRef.current) {\r\n        audioContextRef.current.close();\r\n      }\r\n    };\r\n  }, [mediaStream]);\r\n\r\n  const detectFace = async () => {\r\n    if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n      const video = webcamRef.current.video;\r\n      const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n      const isFacePresent = detections.length > 0;\r\n      setFaceDetected(isFacePresent);\r\n      setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (permissionsGranted) {\r\n      const interval = setInterval(detectFace, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [permissionsGranted]);\r\n\r\n  useEffect(() => {\r\n    if (noFaceDuration >= 15) {\r\n      alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n      setNoFaceDuration(0);\r\n    }\r\n  }, [noFaceDuration]);\r\n\r\n  const detectSound = useCallback(() => {\r\n    if (!mediaStream) return;\r\n\r\n    const audioContext = new AudioContext();\r\n    const analyser = audioContext.createAnalyser();\r\n    const source = audioContext.createMediaStreamSource(mediaStream);\r\n    source.connect(analyser);\r\n    analyser.fftSize = 256;\r\n    const bufferLength = analyser.frequencyBinCount;\r\n    const dataArray = new Uint8Array(bufferLength);\r\n\r\n    const checkSound = () => {\r\n      analyser.getByteFrequencyData(dataArray);\r\n      const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n      setSoundDetected(volume > 10);\r\n      requestAnimationFrame(checkSound);\r\n    };\r\n    checkSound();\r\n  }, [mediaStream]);\r\n\r\n  useEffect(() => {\r\n    if (permissionsGranted) {\r\n      detectSound();\r\n    }\r\n  }, [permissionsGranted, detectSound]);\r\n\r\n  useEffect(() => {\r\n    if (multipleVoicesDetected) {\r\n      const newViolations = violations + 1;\r\n      setViolations(newViolations);\r\n      \r\n      alert(`üö® MULTIPLE VOICES DETECTED! (Violation ${newViolations}/3)`);\r\n      \r\n      if (newViolations >= 3) {\r\n        setExamTerminated(true);\r\n      }\r\n    }\r\n  }, [multipleVoicesDetected]);\r\n\r\n  return (\r\n    <div className=\"continuous-auth-container\">\r\n      <h2>Exam Proctoring System</h2>\r\n\r\n      {showPermissionMessage && (\r\n        <div className=\"permission-message\">\r\n          <h3>Exam Proctoring Setup</h3>\r\n          <p>This exam requires camera and microphone access for proctoring purposes.</p>\r\n          <div className=\"permission-requirements\">\r\n            <p>‚úì Face detection must be enabled</p>\r\n            <p>‚úì Microphone must be active</p>\r\n            <p>‚úì Voice authentication will be performed</p>\r\n          </div>\r\n          <button className=\"permission-button\" onClick={getPermissions}>\r\n            Enable Camera & Microphone\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {permissionsGranted && !examTerminated && (\r\n        <div className=\"monitoring-container\">\r\n          <div className=\"video-section\">\r\n            <Webcam\r\n              audio={true}\r\n              ref={webcamRef}\r\n              screenshotFormat=\"image/jpeg\"\r\n              className=\"webcam\"\r\n              videoConstraints={{\r\n                facingMode: \"user\",\r\n                width: 480,\r\n                height: 360,\r\n              }}\r\n            />\r\n            <div className=\"status-indicators\">\r\n              <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\r\n                {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\r\n              </div>\r\n              <div className={`status-indicator ${soundDetected ? \"active\" : \"\"}`}>\r\n                {soundDetected ? \"Sound Detected\" : \"No Sound Detected\"}\r\n              </div>\r\n              {multipleVoicesDetected && (\r\n                <div className=\"status-indicator warning\">\r\n                  Multiple Voices Detected!\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"transcript-section\">\r\n            <div className=\"transcript-box\">\r\n              <div className=\"transcript-header\">\r\n                <span>Arabic Speech Transcript</span>\r\n                <span className=\"violation-counter\">Violations: {violations}/3</span>\r\n              </div>\r\n              <div className=\"transcript-content\" dir=\"rtl\">\r\n                {transcript || \"Waiting for audio input...\"}\r\n              </div>\r\n              <div className={`voice-detection-status ${multipleVoicesDetected ? \"multiple\" : \"\"}`}>\r\n                {multipleVoicesDetected \r\n                  ? \"üö® Multiple voices detected!\" \r\n                  : \"Voice analysis: Normal\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {examTerminated && (\r\n        <div className=\"termination-message\">\r\n          <h3>‚úñ Exam Terminated</h3>\r\n          <p>Due to multiple violations detected. Please contact your instructor.</p>\r\n          <p>Total violations: {violations}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAYA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAO,KAAKC,OAAO,MAAM,aAAa;AACtC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}