{"ast":null,"code":"var _jsxFileName = \"E:\\\\continous-authentication\\\\frontend\\\\src\\\\ContinuousAuth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport Webcam from \"react-webcam\";\nimport forbiddenWordsList from \"./forbiddenWords.json\";\nimport \"./ContinuousAuth.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContinuousAuth = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const [faceDetected, setFaceDetected] = useState(false);\n  const [soundDetected, setSoundDetected] = useState(false);\n  const [currentImage, setCurrentImage] = useState(null);\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\n  const [examTerminated, setExamTerminated] = useState(false);\n  const [mediaStream, setMediaStream] = useState(null);\n  const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n  const [noFaceDuration, setNoFaceDuration] = useState(0);\n  const [noFaceWarningCount, setNoFaceWarningCount] = useState(0);\n  const [transcript, setTranscript] = useState(\"\");\n  const [violations, setViolations] = useState(0);\n  const forbiddenWords = forbiddenWordsList.words;\n  const [forbiddenCount, setForbiddenCount] = useState(0);\n  const detectedForbiddenWords = useRef(new Set());\n  const [referenceDescriptor, setReferenceDescriptor] = useState(null);\n  const [violationCount, setViolationCount] = useState(0);\n  const [capturedImages, setCapturedImages] = useState([]);\n  useEffect(() => {\n    const loadModels = async () => {\n      try {\n        await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n        await faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\");\n        await faceapi.nets.faceRecognitionNet.loadFromUri(\"/models\");\n        console.log(\"All required models loaded successfully\");\n      } catch (error) {\n        alert(\"Failed to load face recognition models. Please check the model files are in the correct path.\");\n      }\n    };\n    loadModels();\n  }, []);\n  const getPermissions = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      setMediaStream(stream);\n      setPermissionsGranted(true);\n      setShowPermissionMessage(false);\n      initializeSpeechRecognition();\n    } catch (error) {\n      alert(\"Please allow access to camera and microphone.\");\n      setShowPermissionMessage(true);\n    }\n  };\n  const initializeSpeechRecognition = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      console.error(\"Speech Recognition API not supported in this browser\");\n      return;\n    }\n    recognitionRef.current = new SpeechRecognition();\n    recognitionRef.current.continuous = true;\n    recognitionRef.current.interimResults = false;\n    recognitionRef.current.lang = \"ar-SA\";\n    recognitionRef.current.onresult = event => {\n      const last = event.results.length - 1;\n      const text = event.results[last][0].transcript;\n      console.log(\"Recognized Text:\", text);\n      setTranscript(text);\n      checkForbiddenWords(text);\n    };\n    recognitionRef.current.onerror = event => {\n      console.error(\"Speech recognition error\", event.error);\n    };\n    recognitionRef.current.start();\n    recognitionRef.current.onend = () => {\n      recognitionRef.current.start();\n    };\n  };\n  const checkForbiddenWords = text => {\n    forbiddenWords.forEach(word => {\n      if (text.includes(word)) {\n        if (!detectedForbiddenWords.current.has(word)) {\n          detectedForbiddenWords.current.add(word);\n          const newCount = detectedForbiddenWords.current.size;\n          setForbiddenCount(newCount);\n          console.log(`New forbidden word detected: ${word} (Total: ${newCount})`);\n          if (newCount >= 3) {\n            alert(\"⚠️ Detected 3 different forbidden words! Exam will be terminated.\");\n            terminateExam();\n          }\n        }\n      }\n    });\n  };\n  const terminateExam = () => {\n    setExamTerminated(true);\n    alert(\"✖ Exam has been terminated due to multiple violations!\");\n    window.close();\n  };\n  const detectFace = async () => {\n    if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n      const video = webcamRef.current.video;\n      const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n      const isFacePresent = detections.length > 0;\n      setFaceDetected(isFacePresent);\n      setNoFaceDuration(prev => isFacePresent ? 0 : prev + 1);\n    }\n  };\n  useEffect(() => {\n    if (permissionsGranted) {\n      const interval = setInterval(detectFace, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [permissionsGranted]);\n  useEffect(() => {\n    if (noFaceDuration >= 30) {\n      const newWarningCount = noFaceWarningCount + 1;\n      setNoFaceWarningCount(newWarningCount);\n      if (newWarningCount === 4) {\n        alert(\"⚠️ Your face has not been detected 4 times. If it happens again, the exam will be terminated.\");\n      } else if (newWarningCount >= 5) {\n        alert(\"✖ Your face was not detected multiple times. The exam will now be terminated.\");\n        terminateExam();\n      } else {\n        alert(`⚠ Face not detected for 30 seconds (Occurrence ${newWarningCount}/5). Please stay visible.`);\n      }\n      setNoFaceDuration(0);\n    }\n  }, [noFaceDuration, noFaceWarningCount]);\n  const detectSound = useCallback(() => {\n    if (!mediaStream) return;\n    const audioContext = new AudioContext();\n    const analyser = audioContext.createAnalyser();\n    const source = audioContext.createMediaStreamSource(mediaStream);\n    source.connect(analyser);\n    analyser.fftSize = 256;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const checkSound = () => {\n      analyser.getByteFrequencyData(dataArray);\n      const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n      setSoundDetected(volume > 10);\n      requestAnimationFrame(checkSound);\n    };\n    checkSound();\n  }, [mediaStream]);\n  useEffect(() => {\n    if (permissionsGranted) {\n      detectSound();\n    }\n  }, [permissionsGranted, detectSound]);\n  const captureAndSendImage = async () => {\n    if (!webcamRef.current) return;\n    const imageSrc = webcamRef.current.getScreenshot();\n    setCurrentImage(imageSrc);\n    try {\n      const img = await faceapi.fetchImage(imageSrc);\n      const detection = await faceapi.detectSingleFace(img, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n      if (!detection) return;\n      if (!referenceDescriptor) {\n        setReferenceDescriptor(detection.descriptor);\n        console.log(\"Reference face stored\");\n        return;\n      }\n      const distance = faceapi.euclideanDistance(referenceDescriptor, detection.descriptor);\n      if (distance > 0.6) {\n        alert(\"⚠️ Different person detected!\");\n        const violationData = {\n          studentId: \"student_123\",\n          examId: \"exam_456\",\n          image: imageSrc,\n          timestamp: new Date().toISOString()\n        };\n        try {\n          await axios.post(\"http://localhost:5000/api/violation\", violationData);\n          setViolationCount(prev => prev + 1);\n          setCapturedImages(prev => [...prev, violationData]);\n          if (violationCount + 1 >= 3) {\n            alert(\"✖ Exam terminated due to multiple violations.\");\n            terminateExam();\n          }\n        } catch (err) {\n          console.error(\"Error sending violation to server\", err);\n        }\n      }\n    } catch (err) {\n      console.error(\"Error analyzing face\", err);\n    }\n  };\n  useEffect(() => {\n    if (permissionsGranted && !examTerminated) {\n      const interval = setInterval(captureAndSendImage, 60000);\n      return () => clearInterval(interval);\n    }\n  }, [permissionsGranted, examTerminated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"continuous-auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Exam Proctoring System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), showPermissionMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"permission-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Exam Proctoring Setup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This exam requires camera and microphone access for proctoring purposes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"permission-requirements\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2713 Face detection must be enabled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2713 Microphone must be active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"permission-button\",\n        onClick: getPermissions,\n        children: \"Enable Camera & Microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), permissionsGranted && !examTerminated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monitoring-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-section\",\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          audio: true,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\",\n          className: \"webcam\",\n          videoConstraints: {\n            facingMode: \"user\",\n            width: 480,\n            height: 360\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicators\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${faceDetected ? \"active\" : \"\"}`,\n            children: faceDetected ? \"Face Detected\" : \"No Face Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${soundDetected ? \"active\" : \"\"}`,\n            children: soundDetected ? \"Sound Detected\" : \"No Sound Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), currentImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"captured-image-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Captured Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: currentImage,\n            alt: \"Last captured face\",\n            className: \"captured-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Arabic Speech Transcript\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"violation-counter\",\n              children: [\"Total Forbidden Words: \", forbiddenCount, \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-content\",\n            children: transcript || \"Waiting for audio input...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), capturedImages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"all-captured-images\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"All Violation Captures\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"captured-images-grid\",\n            children: capturedImages.map((imgObj, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imgObj.image,\n              alt: `Violation ${index}`,\n              className: \"captured-image-small\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this), examTerminated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"termination-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u2716 Exam Terminated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Due to multiple violations detected. Please contact your instructor.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n_s(ContinuousAuth, \"MHiacwsEx9A8EsiyvyumgSPnx3o=\");\n_c = ContinuousAuth;\nexport default ContinuousAuth;\nvar _c;\n$RefreshReg$(_c, \"ContinuousAuth\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","faceapi","Webcam","forbiddenWordsList","axios","jsxDEV","_jsxDEV","ContinuousAuth","_s","webcamRef","recognitionRef","faceDetected","setFaceDetected","soundDetected","setSoundDetected","currentImage","setCurrentImage","permissionsGranted","setPermissionsGranted","examTerminated","setExamTerminated","mediaStream","setMediaStream","showPermissionMessage","setShowPermissionMessage","noFaceDuration","setNoFaceDuration","noFaceWarningCount","setNoFaceWarningCount","transcript","setTranscript","violations","setViolations","forbiddenWords","words","forbiddenCount","setForbiddenCount","detectedForbiddenWords","Set","referenceDescriptor","setReferenceDescriptor","violationCount","setViolationCount","capturedImages","setCapturedImages","loadModels","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","console","log","error","alert","getPermissions","stream","navigator","mediaDevices","getUserMedia","video","audio","initializeSpeechRecognition","SpeechRecognition","window","webkitSpeechRecognition","current","continuous","interimResults","lang","onresult","event","last","results","length","text","checkForbiddenWords","onerror","start","onend","forEach","word","includes","has","add","newCount","size","terminateExam","close","detectFace","readyState","detections","detectAllFaces","TinyFaceDetectorOptions","isFacePresent","prev","interval","setInterval","clearInterval","newWarningCount","detectSound","audioContext","AudioContext","analyser","createAnalyser","source","createMediaStreamSource","connect","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","checkSound","getByteFrequencyData","volume","reduce","sum","value","requestAnimationFrame","captureAndSendImage","imageSrc","getScreenshot","img","fetchImage","detection","detectSingleFace","withFaceLandmarks","withFaceDescriptor","descriptor","distance","euclideanDistance","violationData","studentId","examId","image","timestamp","Date","toISOString","post","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","screenshotFormat","videoConstraints","facingMode","width","height","src","alt","map","imgObj","index","_c","$RefreshReg$"],"sources":["E:/continous-authentication/frontend/src/ContinuousAuth.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport Webcam from \"react-webcam\";\r\nimport forbiddenWordsList from \"./forbiddenWords.json\";\r\nimport \"./ContinuousAuth.css\";\r\nimport axios from \"axios\";\r\n\r\nconst ContinuousAuth = () => {\r\n  const webcamRef = useRef(null);\r\n  const recognitionRef = useRef(null);\r\n\r\n  const [faceDetected, setFaceDetected] = useState(false);\r\n  const [soundDetected, setSoundDetected] = useState(false);\r\n  const [currentImage, setCurrentImage] = useState(null);\r\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n  const [examTerminated, setExamTerminated] = useState(false);\r\n  const [mediaStream, setMediaStream] = useState(null);\r\n  const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n  const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n  const [noFaceWarningCount, setNoFaceWarningCount] = useState(0);\r\n  const [transcript, setTranscript] = useState(\"\");\r\n  const [violations, setViolations] = useState(0);\r\n  const forbiddenWords = forbiddenWordsList.words;\r\n  const [forbiddenCount, setForbiddenCount] = useState(0);\r\n  const detectedForbiddenWords = useRef(new Set());\r\n  const [referenceDescriptor, setReferenceDescriptor] = useState(null);\r\n  const [violationCount, setViolationCount] = useState(0);\r\n  const [capturedImages, setCapturedImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      try {\r\n        await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n        await faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\");\r\n        await faceapi.nets.faceRecognitionNet.loadFromUri(\"/models\");\r\n        console.log(\"All required models loaded successfully\");\r\n      } catch (error) {\r\n        alert(\"Failed to load face recognition models. Please check the model files are in the correct path.\");\r\n      }\r\n    };\r\n    loadModels();\r\n  }, []);\r\n\r\n  const getPermissions = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n      setMediaStream(stream);\r\n      setPermissionsGranted(true);\r\n      setShowPermissionMessage(false);\r\n      initializeSpeechRecognition();\r\n    } catch (error) {\r\n      alert(\"Please allow access to camera and microphone.\");\r\n      setShowPermissionMessage(true);\r\n    }\r\n  };\r\n\r\n  const initializeSpeechRecognition = () => {\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if (!SpeechRecognition) {\r\n      console.error(\"Speech Recognition API not supported in this browser\");\r\n      return;\r\n    }\r\n\r\n    recognitionRef.current = new SpeechRecognition();\r\n    recognitionRef.current.continuous = true;\r\n    recognitionRef.current.interimResults = false;\r\n    recognitionRef.current.lang = \"ar-SA\";\r\n\r\n    recognitionRef.current.onresult = (event) => {\r\n      const last = event.results.length - 1;\r\n      const text = event.results[last][0].transcript;\r\n      console.log(\"Recognized Text:\", text);\r\n      setTranscript(text);\r\n      checkForbiddenWords(text);\r\n    };\r\n\r\n    recognitionRef.current.onerror = (event) => {\r\n      console.error(\"Speech recognition error\", event.error);\r\n    };\r\n\r\n    recognitionRef.current.start();\r\n\r\n    recognitionRef.current.onend = () => {\r\n      recognitionRef.current.start();\r\n    };\r\n  };\r\n\r\n  const checkForbiddenWords = (text) => {\r\n    forbiddenWords.forEach((word) => {\r\n      if (text.includes(word)) {\r\n        if (!detectedForbiddenWords.current.has(word)) {\r\n          detectedForbiddenWords.current.add(word);\r\n          const newCount = detectedForbiddenWords.current.size;\r\n          setForbiddenCount(newCount);\r\n          console.log(`New forbidden word detected: ${word} (Total: ${newCount})`);\r\n          if (newCount >= 3) {\r\n            alert(\"⚠️ Detected 3 different forbidden words! Exam will be terminated.\");\r\n            terminateExam();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const terminateExam = () => {\r\n    setExamTerminated(true);\r\n    alert(\"✖ Exam has been terminated due to multiple violations!\");\r\n    window.close();\r\n  };\r\n\r\n  const detectFace = async () => {\r\n    if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n      const video = webcamRef.current.video;\r\n      const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n      const isFacePresent = detections.length > 0;\r\n      setFaceDetected(isFacePresent);\r\n      setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (permissionsGranted) {\r\n      const interval = setInterval(detectFace, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [permissionsGranted]);\r\n\r\n  useEffect(() => {\r\n    if (noFaceDuration >= 30) {\r\n      const newWarningCount = noFaceWarningCount + 1;\r\n      setNoFaceWarningCount(newWarningCount);\r\n\r\n      if (newWarningCount === 4) {\r\n        alert(\"⚠️ Your face has not been detected 4 times. If it happens again, the exam will be terminated.\");\r\n      } else if (newWarningCount >= 5) {\r\n        alert(\"✖ Your face was not detected multiple times. The exam will now be terminated.\");\r\n        terminateExam();\r\n      } else {\r\n        alert(`⚠ Face not detected for 30 seconds (Occurrence ${newWarningCount}/5). Please stay visible.`);\r\n      }\r\n\r\n      setNoFaceDuration(0);\r\n    }\r\n  }, [noFaceDuration, noFaceWarningCount]);\r\n\r\n  const detectSound = useCallback(() => {\r\n    if (!mediaStream) return;\r\n    const audioContext = new AudioContext();\r\n    const analyser = audioContext.createAnalyser();\r\n    const source = audioContext.createMediaStreamSource(mediaStream);\r\n    source.connect(analyser);\r\n    analyser.fftSize = 256;\r\n    const bufferLength = analyser.frequencyBinCount;\r\n    const dataArray = new Uint8Array(bufferLength);\r\n\r\n    const checkSound = () => {\r\n      analyser.getByteFrequencyData(dataArray);\r\n      const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n      setSoundDetected(volume > 10);\r\n      requestAnimationFrame(checkSound);\r\n    };\r\n\r\n    checkSound();\r\n  }, [mediaStream]);\r\n\r\n  useEffect(() => {\r\n    if (permissionsGranted) {\r\n      detectSound();\r\n    }\r\n  }, [permissionsGranted, detectSound]);\r\n\r\n  const captureAndSendImage = async () => {\r\n    if (!webcamRef.current) return;\r\n\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setCurrentImage(imageSrc);\r\n\r\n    try {\r\n      const img = await faceapi.fetchImage(imageSrc);\r\n      const detection = await faceapi\r\n        .detectSingleFace(img, new faceapi.TinyFaceDetectorOptions())\r\n        .withFaceLandmarks()\r\n        .withFaceDescriptor();\r\n\r\n      if (!detection) return;\r\n\r\n      if (!referenceDescriptor) {\r\n        setReferenceDescriptor(detection.descriptor);\r\n        console.log(\"Reference face stored\");\r\n        return;\r\n      }\r\n\r\n      const distance = faceapi.euclideanDistance(referenceDescriptor, detection.descriptor);\r\n      if (distance > 0.6) {\r\n        alert(\"⚠️ Different person detected!\");\r\n\r\n        const violationData = {\r\n          studentId: \"student_123\",\r\n          examId: \"exam_456\",\r\n          image: imageSrc,\r\n          timestamp: new Date().toISOString(),\r\n        };\r\n\r\n        try {\r\n          await axios.post(\"http://localhost:5000/api/violation\", violationData);\r\n          setViolationCount((prev) => prev + 1);\r\n          setCapturedImages((prev) => [...prev, violationData]);\r\n\r\n          if (violationCount + 1 >= 3) {\r\n            alert(\"✖ Exam terminated due to multiple violations.\");\r\n            terminateExam();\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Error sending violation to server\", err);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error analyzing face\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (permissionsGranted && !examTerminated) {\r\n      const interval = setInterval(captureAndSendImage, 60000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [permissionsGranted, examTerminated]);\r\n\r\n  return (\r\n    <div className=\"continuous-auth-container\">\r\n      <h2>Exam Proctoring System</h2>\r\n\r\n      {showPermissionMessage && (\r\n        <div className=\"permission-message\">\r\n          <h3>Exam Proctoring Setup</h3>\r\n          <p>This exam requires camera and microphone access for proctoring purposes.</p>\r\n          <div className=\"permission-requirements\">\r\n            <p>✓ Face detection must be enabled</p>\r\n            <p>✓ Microphone must be active</p>\r\n          </div>\r\n          <button className=\"permission-button\" onClick={getPermissions}>\r\n            Enable Camera & Microphone\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {permissionsGranted && !examTerminated && (\r\n        <div className=\"monitoring-container\">\r\n          <div className=\"video-section\">\r\n            <Webcam\r\n              audio={true}\r\n              ref={webcamRef}\r\n              screenshotFormat=\"image/jpeg\"\r\n              className=\"webcam\"\r\n              videoConstraints={{\r\n                facingMode: \"user\",\r\n                width: 480,\r\n                height: 360,\r\n              }}\r\n            />\r\n            <div className=\"status-indicators\">\r\n              <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\r\n                {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\r\n              </div>\r\n              <div className={`status-indicator ${soundDetected ? \"active\" : \"\"}`}>\r\n                {soundDetected ? \"Sound Detected\" : \"No Sound Detected\"}\r\n              </div>\r\n            </div>\r\n\r\n            {currentImage && (\r\n              <div className=\"captured-image-section\">\r\n                <h4>Captured Image</h4>\r\n                <img src={currentImage} alt=\"Last captured face\" className=\"captured-image\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"transcript-section\">\r\n            <div className=\"transcript-box\">\r\n              <div className=\"transcript-header\">\r\n                <span>Arabic Speech Transcript</span>\r\n                <span className=\"violation-counter\">Total Forbidden Words: {forbiddenCount}/3</span>\r\n              </div>\r\n              <div className=\"transcript-content\">\r\n                {transcript || \"Waiting for audio input...\"}\r\n              </div>\r\n            </div>\r\n\r\n            {capturedImages.length > 0 && (\r\n              <div className=\"all-captured-images\">\r\n                <h4>All Violation Captures</h4>\r\n                <div className=\"captured-images-grid\">\r\n                  {capturedImages.map((imgObj, index) => (\r\n                    <img\r\n                      key={index}\r\n                      src={imgObj.image}\r\n                      alt={`Violation ${index}`}\r\n                      className=\"captured-image-small\"\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {examTerminated && (\r\n        <div className=\"termination-message\">\r\n          <h3>✖ Exam Terminated</h3>\r\n          <p>Due to multiple violations detected. Please contact your instructor.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContinuousAuth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}