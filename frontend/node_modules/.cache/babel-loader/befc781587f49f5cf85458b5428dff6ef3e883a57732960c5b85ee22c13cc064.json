{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\continous-authentication1\\\\continous-authentication1\\\\continous-authentication\\\\continous-authentication\\\\src\\\\ContinuousAuth.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\n// import * as faceapi from \"face-api.js\";\n// import Webcam from \"react-webcam\";\n// import axios from \"axios\";\n// import \"./ContinuousAuth.css\";\n\n// const ContinuousAuth = () => {\n//   const webcamRef = useRef(null);\n//   const [faceDetected, setFaceDetected] = useState(false);\n//   const [soundDetected, setSoundDetected] = useState(false);\n//   const [currentImage, setCurrentImage] = useState(null);\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\n//   const [examTerminated, setExamTerminated] = useState(false);\n//   const [mediaStream, setMediaStream] = useState(null);\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\n\n//   useEffect(() => {\n//     const loadModels = async () => {\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n//       console.log(\"Face Detection Model Loaded\");\n//     };\n//     loadModels();\n//   }, []);\n\n//   const getPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n//       setMediaStream(stream);\n//       setPermissionsGranted(true);\n//       setShowPermissionMessage(false);\n//       fetchIpAddress(); // Call to fetch IP address when permissions are granted\n//     } catch (error) {\n//       alert(\"Please allow access to camera and microphone.\");\n//       setShowPermissionMessage(true);\n//     }\n//   };\n\n//   const fetchIpAddress = async () => {\n//     try {\n//       const response = await fetch(\"https://api.ipify.org?format=json\");\n//       const data = await response.json();\n//       alert(`Your IP Address: ${data.ip}`);\n//     } catch (error) {\n//       console.error(\"Error fetching IP address:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (mediaStream) {\n//       const tracks = mediaStream.getTracks();\n//       tracks.forEach((track) => {\n//         track.enabled = true;\n//       });\n//     }\n//   }, [mediaStream]);\n\n//   const detectFace = async () => {\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n//       const video = webcamRef.current.video;\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n//       const isFacePresent = detections.length > 0;\n//       setFaceDetected(isFacePresent);\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       const interval = setInterval(detectFace, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [permissionsGranted]);\n\n//   useEffect(() => {\n//     if (noFaceDuration >= 15) {\n//       alert(\"‚ö†Ô∏è Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n//       setNoFaceDuration(0);\n//     }\n//   }, [noFaceDuration]);\n\n//   const detectSound = useCallback(() => {\n//     if (!mediaStream) return;\n\n//     const audioContext = new AudioContext();\n//     const analyser = audioContext.createAnalyser();\n//     const source = audioContext.createMediaStreamSource(mediaStream);\n//     source.connect(analyser);\n//     analyser.fftSize = 256;\n//     const bufferLength = analyser.frequencyBinCount;\n//     const dataArray = new Uint8Array(bufferLength);\n\n//     const checkSound = () => {\n//       analyser.getByteFrequencyData(dataArray);\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n//       setSoundDetected(volume > 10);\n//       requestAnimationFrame(checkSound);\n//     };\n//     checkSound();\n//   }, [mediaStream]);\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       detectSound();\n//     }\n//   }, [permissionsGranted, detectSound]);\n\n//   return (\n//     <div className=\"continuous-auth-container\">\n//       <h2>Continuous Authentication</h2>\n\n//       {showPermissionMessage && (\n//         <div className=\"permission-message\">\n//           <p>Please allow access to your camera and microphone to start the exam.</p>\n//           <button onClick={getPermissions}>Allow Camera and Microphone</button>\n//         </div>\n//       )}\n\n//       {permissionsGranted ? (\n//         <>\n//           <Webcam\n//             audio={true}\n//             ref={webcamRef}\n//             screenshotFormat=\"image/jpeg\"\n//             className=\"webcam\"\n//             videoConstraints={{\n//               facingMode: \"user\",\n//               width: 720,\n//               height: 400,\n//             }}\n//           />\n//           <p>Camera and microphone are active for proctoring.</p>\n\n//           <div className=\"status-buttons-container\">\n//             <div className=\"status-buttons\">\n//               <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\n//                 {faceDetected ? \"Face Detected ‚úÖ\" : \"No Face Detected ‚ùå\"}\n//               </button>\n//               <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\n//                 {soundDetected ? \"Sound Detected üîä\" : \"No Sound Detected üîá\"}\n//               </button>\n//             </div>\n\n//             <div className=\"captured-images\">\n//               {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\n//             </div>\n//           </div>\n//         </>\n//       ) : (\n//         <p>Waiting for camera and microphone access...</p>\n//       )}\n\n//       {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\n//     </div>\n//   );\n// };\n\n// export default ContinuousAuth;\n\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\n// import * as faceapi from \"face-api.js\";\n// import Webcam from \"react-webcam\";\n// import \"./ContinuousAuth.css\";\n\n// const ContinuousAuth = () => {\n//   const webcamRef = useRef(null);\n//   const [faceDetected, setFaceDetected] = useState(false);\n//   const [soundDetected, setSoundDetected] = useState(false);\n//   const [currentImage, setCurrentImage] = useState(null);\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\n//   const [examTerminated, setExamTerminated] = useState(false);\n//   const [mediaStream, setMediaStream] = useState(null);\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\n//   const [transcript, setTranscript] = useState(\"\");\n//   const [violations, setViolations] = useState(0);\n//   const recognitionRef = useRef(null);\n\n//   // ŸÜÿ∏ÿßŸÖ ŸÉÿ¥ŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ© ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\n//   const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\n//   const audioContextRef = useRef(null);\n//   const analyserRef = useRef(null);\n//   const voiceProfileRef = useRef({\n//     baseline: null,\n//     lastAlert: 0,\n//     active: false\n//   });\n\n//   useEffect(() => {\n//     const loadModels = async () => {\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n//       console.log(\"Face Detection Model Loaded\");\n//     };\n//     loadModels();\n//   }, []);\n\n//   const getPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n//       setMediaStream(stream);\n//       setPermissionsGranted(true);\n//       setShowPermissionMessage(false);\n//       initializeSpeechRecognition();\n//       setupVoiceAnalysis(stream);\n//     } catch (error) {\n//       alert(\"Please allow access to camera and microphone.\");\n//       setShowPermissionMessage(true);\n//     }\n//   };\n\n//   // ŸÜÿ∏ÿßŸÖ ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™ ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\n//   const setupVoiceAnalysis = (stream) => {\n//     try {\n//       audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n//       analyserRef.current = audioContextRef.current.createAnalyser();\n//       analyserRef.current.fftSize = 4096;\n\n//       const source = audioContextRef.current.createMediaStreamSource(stream);\n//       source.connect(analyserRef.current);\n\n//       // ÿ•ŸÜÿ¥ÿßÿ° ÿ®ÿµŸÖÿ© ÿµŸàÿ™Ÿäÿ© ÿ£ŸàŸÑŸäÿ© ÿ®ÿπÿØ 3 ÿ´ŸàÿßŸÜŸä\n//       setTimeout(() => {\n//         voiceProfileRef.current.baseline = createVoiceProfile();\n//         voiceProfileRef.current.active = true;\n//       }, 3000);\n\n//       const analyzeVoice = () => {\n//         if (!voiceProfileRef.current.active) {\n//           requestAnimationFrame(analyzeVoice);\n//           return;\n//         }\n\n//         const currentProfile = createVoiceProfile();\n//         const isMultiple = compareVoiceProfiles(voiceProfileRef.current.baseline, currentProfile);\n\n//         if (isMultiple && Date.now() - voiceProfileRef.current.lastAlert > 5000) {\n//           setMultipleVoicesDetected(true);\n//           voiceProfileRef.current.lastAlert = Date.now();\n//         } else {\n//           setMultipleVoicesDetected(false);\n//         }\n\n//         requestAnimationFrame(analyzeVoice);\n//       };\n\n//       analyzeVoice();\n//     } catch (error) {\n//       console.error(\"Voice analysis error:\", error);\n//     }\n//   };\n\n//   const createVoiceProfile = () => {\n//     const bufferLength = analyserRef.current.frequencyBinCount;\n//     const dataArray = new Float32Array(bufferLength);\n//     analyserRef.current.getFloatFrequencyData(dataArray);\n\n//     const profile = {\n//       lowRange: 0,    // 85-300Hz\n//       midRange: 0,    // 300-1000Hz\n//       highRange: 0,   // 1000-4000Hz\n//       peakCount: 0,\n//       totalEnergy: 0\n//     };\n\n//     for (let i = 0; i < bufferLength; i++) {\n//       const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\n//       const value = Math.pow(10, dataArray[i]/20); // Convert dB to linear\n\n//       if (freq >= 85 && freq < 300) {\n//         profile.lowRange += value;\n//       } else if (freq >= 300 && freq < 1000) {\n//         profile.midRange += value;\n//       } else if (freq >= 1000 && freq < 4000) {\n//         profile.highRange += value;\n//       }\n\n//       if (dataArray[i] > -40) profile.peakCount++;\n//       profile.totalEnergy += value;\n//     }\n\n//     return profile;\n//   };\n\n//   const compareVoiceProfiles = (baseline, current) => {\n//     // ÿ≠ÿ≥ÿßÿ® ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ™ÿ∫Ÿäÿ± ŸÑŸÉŸÑ ŸÜÿ∑ÿßŸÇ ÿ™ÿ±ÿØÿØŸä\n//     const lowDiff = Math.abs(current.lowRange - baseline.lowRange) / baseline.lowRange;\n//     const midDiff = Math.abs(current.midRange - baseline.midRange) / baseline.midRange;\n//     const highDiff = Math.abs(current.highRange - baseline.highRange) / baseline.highRange;\n//     const energyDiff = Math.abs(current.totalEnergy - baseline.totalEnergy) / baseline.totalEnergy;\n//     const peakDiff = Math.abs(current.peakCount - baseline.peakCount);\n\n//     // ÿ¥ÿ±Ÿàÿ∑ ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ©\n//     return (\n//       (lowDiff > 0.6 || midDiff > 0.6 || highDiff > 0.6) &&\n//       energyDiff > 0.4 &&\n//       peakDiff > 15\n//     );\n//   };\n\n//   const initializeSpeechRecognition = () => {\n//     const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n//     if (!SpeechRecognition) {\n//       console.error(\"Speech Recognition API not supported in this browser\");\n//       return;\n//     }\n\n//     recognitionRef.current = new SpeechRecognition();\n//     recognitionRef.current.continuous = true;\n//     recognitionRef.current.interimResults = false;\n//     recognitionRef.current.lang = \"ar-SA\";\n\n//     recognitionRef.current.onresult = (event) => {\n//       const last = event.results.length - 1;\n//       const text = event.results[last][0].transcript;\n//       setTranscript(text);\n//     };\n\n//     recognitionRef.current.onerror = (event) => {\n//       console.error(\"Speech recognition error\", event.error);\n//     };\n\n//     recognitionRef.current.start();\n//     recognitionRef.current.onend = () => {\n//       recognitionRef.current.start();\n//     };\n//   };\n\n//   useEffect(() => {\n//     if (mediaStream) {\n//       const tracks = mediaStream.getTracks();\n//       tracks.forEach((track) => {\n//         track.enabled = true;\n//       });\n//     }\n\n//     return () => {\n//       if (recognitionRef.current) {\n//         recognitionRef.current.stop();\n//       }\n//       if (audioContextRef.current) {\n//         audioContextRef.current.close();\n//       }\n//     };\n//   }, [mediaStream]);\n\n//   const detectFace = async () => {\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n//       const video = webcamRef.current.video;\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n//       const isFacePresent = detections.length > 0;\n//       setFaceDetected(isFacePresent);\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       const interval = setInterval(detectFace, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [permissionsGranted]);\n\n//   useEffect(() => {\n//     if (noFaceDuration >= 15) {\n//       alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n//       setNoFaceDuration(0);\n//     }\n//   }, [noFaceDuration]);\n\n//   const detectSound = useCallback(() => {\n//     if (!mediaStream) return;\n\n//     const audioContext = new AudioContext();\n//     const analyser = audioContext.createAnalyser();\n//     const source = audioContext.createMediaStreamSource(mediaStream);\n//     source.connect(analyser);\n//     analyser.fftSize = 256;\n//     const bufferLength = analyser.frequencyBinCount;\n//     const dataArray = new Uint8Array(bufferLength);\n\n//     const checkSound = () => {\n//       analyser.getByteFrequencyData(dataArray);\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n//       setSoundDetected(volume > 10);\n//       requestAnimationFrame(checkSound);\n//     };\n//     checkSound();\n//   }, [mediaStream]);\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       detectSound();\n//     }\n//   }, [permissionsGranted, detectSound]);\n\n//   useEffect(() => {\n//     if (multipleVoicesDetected) {\n//       const newViolations = violations + 1;\n//       setViolations(newViolations);\n\n//       alert(`üö® MULTIPLE VOICES DETECTED! (Violation ${newViolations}/3)`);\n\n//       if (newViolations >= 3) {\n//         setExamTerminated(true);\n//       }\n//     }\n//   }, [multipleVoicesDetected]);\n\n//   return (\n//     <div className=\"continuous-auth-container\">\n//       <h2>Exam Proctoring System</h2>\n\n//       {showPermissionMessage && (\n//         <div className=\"permission-message\">\n//           <h3>Exam Proctoring Setup</h3>\n//           <p>This exam requires camera and microphone access for proctoring purposes.</p>\n//           <div className=\"permission-requirements\">\n//             <p>‚úì Face detection must be enabled</p>\n//             <p>‚úì Microphone must be active</p>\n//           </div>\n//           <button className=\"permission-button\" onClick={getPermissions}>\n//             Enable Camera & Microphone\n//           </button>\n//         </div>\n//       )}\n\n//       {permissionsGranted && !examTerminated && (\n//         <div className=\"monitoring-container\">\n//           <div className=\"video-section\">\n//             <Webcam\n//               audio={true}\n//               ref={webcamRef}\n//               screenshotFormat=\"image/jpeg\"\n//               className=\"webcam\"\n//               videoConstraints={{\n//                 facingMode: \"user\",\n//                 width: 480,\n//                 height: 360,\n//               }}\n//             />\n//             <div className=\"status-indicators\">\n//               <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\n//                 {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\n//               </div>\n//               <div className={`status-indicator ${soundDetected ? \"active\" : \"\"}`}>\n//                 {soundDetected ? \"Sound Detected\" : \"No Sound Detected\"}\n//               </div>\n//               {multipleVoicesDetected && (\n//                 <div className=\"status-indicator warning\">\n//                   Multiple Voices Detected!\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n\n//           <div className=\"transcript-section\">\n//             <div className=\"transcript-box\">\n//               <div className=\"transcript-header\">\n//                 <span>Arabic Speech Transcript</span>\n//                 <span className=\"violation-counter\">Violations: {violations}/3</span>\n//               </div>\n//               <div className=\"transcript-content\" dir=\"rtl\">\n//                 {transcript || \"Waiting for audio input...\"}\n//               </div>\n//               <div className={`voice-detection-status ${multipleVoicesDetected ? \"multiple\" : \"\"}`}>\n//                 {multipleVoicesDetected \n//                   ? \"Multiple voices detected!\" \n//                   : \"Voice analysis active\"}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {examTerminated && (\n//         <div className=\"termination-message\">\n//           <h3>‚úñ Exam Terminated</h3>\n//           <p>Due to multiple violations detected. Please contact your instructor.</p>\n//           <p>Total violations: {violations}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ContinuousAuth;\n\n//////////////////////////////////////////////////////////////////////////////////// \n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport Webcam from \"react-webcam\";\nimport \"./ContinuousAuth.css\";\n\n// ÿ™ÿπÿ±ŸäŸÅ ŸÉŸÑÿßÿ≥ SoundMeter\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SoundMeter(context) {\n  this.context = context;\n  this.instant = 0.0;\n  this.slow = 0.0;\n  this.clip = 0.0;\n  this.script = context.createScriptProcessor(2048, 1, 1);\n  const that = this;\n  this.script.onaudioprocess = function (event) {\n    const input = event.inputBuffer.getChannelData(0);\n    let i;\n    let sum = 0.0;\n    let clipcount = 0;\n    for (i = 0; i < input.length; ++i) {\n      sum += input[i] * input[i];\n      if (Math.abs(input[i]) > 0.99) {\n        clipcount += 1;\n      }\n    }\n    that.instant = Math.sqrt(sum / input.length);\n    that.slow = 0.95 * that.slow + 0.05 * that.instant;\n    that.clip = clipcount / input.length;\n  };\n}\n_c = SoundMeter;\nSoundMeter.prototype.connectToSource = function (stream, callback) {\n  console.log(\"SoundMeter connecting\");\n  try {\n    this.mic = this.context.createMediaStreamSource(stream);\n    this.mic.connect(this.script);\n    this.script.connect(this.context.destination);\n    if (typeof callback !== \"undefined\") {\n      callback(null);\n    }\n  } catch (e) {\n    console.error(e);\n    if (typeof callback !== \"undefined\") {\n      callback(e);\n    }\n  }\n};\nSoundMeter.prototype.stop = function () {\n  console.log(\"SoundMeter stopping\");\n  this.mic.disconnect();\n  this.script.disconnect();\n};\nconst ContinuousAuth = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const [faceDetected, setFaceDetected] = useState(false);\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\n  const [examTerminated, setExamTerminated] = useState(false);\n  const [violations, setViolations] = useState(0);\n\n  // ŸÜÿ∏ÿßŸÖ ÿßŸÑŸÉÿ¥ŸÅ ÿπŸÜ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ© (ÿßŸÑŸÜÿ≥ÿÆÿ© ÿßŸÑŸÖÿ®ÿ≥ÿ∑ÿ©)\n  const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\n  const audioContextRef = useRef(null);\n  const soundMeterRef = useRef(null);\n  useEffect(() => {\n    const loadModels = async () => {\n      await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n      console.log(\"Face Detection Model Loaded\");\n    };\n    loadModels();\n  }, []);\n  const getPermissions = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      setPermissionsGranted(true);\n      setupVoiceAnalysis(stream);\n    } catch (error) {\n      alert(\"Please allow access to camera and microphone.\");\n    }\n  };\n  const setupVoiceAnalysis = stream => {\n    try {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      soundMeterRef.current = new SoundMeter(audioContextRef.current);\n      soundMeterRef.current.connectToSource(stream, () => {\n        console.log(\"SoundMeter connected successfully\");\n      });\n      let lastInstant = 0;\n      const analyzeVoice = () => {\n        const instant = soundMeterRef.current.instant;\n        const volumeChange = Math.abs(instant - lastInstant);\n        lastInstant = instant;\n\n        // ÿ¥ÿ±Ÿàÿ∑ ÿßŸÑŸÉÿ¥ŸÅ ÿπŸÜ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ©\n        if (volumeChange > 0.1 && instant > 0.05) {\n          setMultipleVoicesDetected(true);\n        } else {\n          setMultipleVoicesDetected(false);\n        }\n        requestAnimationFrame(analyzeVoice);\n      };\n      analyzeVoice();\n    } catch (error) {\n      console.error(\"Voice analysis error:\", error);\n    }\n  };\n  useEffect(() => {\n    if (!permissionsGranted) {\n      getPermissions();\n    }\n  }, [permissionsGranted]);\n  const detectFace = async () => {\n    if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n      const video = webcamRef.current.video;\n      const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n      setFaceDetected(detections.length > 0);\n    }\n  };\n  useEffect(() => {\n    if (permissionsGranted) {\n      const interval = setInterval(detectFace, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [permissionsGranted]);\n  useEffect(() => {\n    if (multipleVoicesDetected) {\n      const newViolations = violations + 1;\n      setViolations(newViolations);\n\n      // ÿ™ŸÜÿ®ŸäŸá Ÿàÿßÿ∂ÿ≠ ÿ®Ÿàÿ¨ŸàÿØ ÿ£ŸÉÿ´ÿ± ŸÖŸÜ ÿ¥ÿÆÿµ Ÿäÿ™ÿ≠ÿØÿ´\n      alert(`‚ö† Warning: More than one person detected speaking! (Violation ${newViolations}/3)`);\n      if (newViolations >= 3) {\n        setExamTerminated(true);\n      }\n    }\n  }, [multipleVoicesDetected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"continuous-auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Exam Proctoring System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 7\n    }, this), !permissionsGranted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"permission-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Exam Proctoring Setup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This exam requires camera and microphone access for proctoring purposes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"permission-requirements\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2713 Face detection must be enabled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2713 Microphone must be active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"permission-button\",\n        onClick: getPermissions,\n        children: \"Enable Camera & Microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 9\n    }, this), permissionsGranted && !examTerminated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monitoring-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-section\",\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          audio: true,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\",\n          className: \"webcam\",\n          videoConstraints: {\n            facingMode: \"user\",\n            width: 480,\n            height: 360\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicators\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${faceDetected ? \"active\" : \"\"}`,\n            children: faceDetected ? \"Face Detected\" : \"No Face Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, this), multipleVoicesDetected && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator warning\",\n            children: \"\\u26A0 Warning: More than one person detected!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 9\n    }, this), examTerminated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"termination-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u2716 Exam Terminated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Due to multiple violations detected. Please contact your instructor.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total violations: \", violations]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 660,\n    columnNumber: 5\n  }, this);\n};\n_s(ContinuousAuth, \"mqYW9SJHGA++IceLGYI+v1fUgyI=\");\n_c2 = ContinuousAuth;\nexport default ContinuousAuth;\nvar _c, _c2;\n$RefreshReg$(_c, \"SoundMeter\");\n$RefreshReg$(_c2, \"ContinuousAuth\");","map":{"version":3,"names":["React","useState","useEffect","useRef","faceapi","Webcam","jsxDEV","_jsxDEV","SoundMeter","context","instant","slow","clip","script","createScriptProcessor","that","onaudioprocess","event","input","inputBuffer","getChannelData","i","sum","clipcount","length","Math","abs","sqrt","_c","prototype","connectToSource","stream","callback","console","log","mic","createMediaStreamSource","connect","destination","e","error","stop","disconnect","ContinuousAuth","_s","webcamRef","faceDetected","setFaceDetected","permissionsGranted","setPermissionsGranted","examTerminated","setExamTerminated","violations","setViolations","multipleVoicesDetected","setMultipleVoicesDetected","audioContextRef","soundMeterRef","loadModels","nets","tinyFaceDetector","loadFromUri","getPermissions","navigator","mediaDevices","getUserMedia","video","audio","setupVoiceAnalysis","alert","current","window","AudioContext","webkitAudioContext","lastInstant","analyzeVoice","volumeChange","requestAnimationFrame","detectFace","readyState","detections","detectAllFaces","TinyFaceDetectorOptions","interval","setInterval","clearInterval","newViolations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","screenshotFormat","videoConstraints","facingMode","width","height","_c2","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/continous-authentication1/continous-authentication1/continous-authentication/continous-authentication/src/ContinuousAuth.js"],"sourcesContent":["// import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n// import * as faceapi from \"face-api.js\";\r\n// import Webcam from \"react-webcam\";\r\n// import axios from \"axios\";\r\n// import \"./ContinuousAuth.css\";\r\n\r\n// const ContinuousAuth = () => {\r\n//   const webcamRef = useRef(null);\r\n//   const [faceDetected, setFaceDetected] = useState(false);\r\n//   const [soundDetected, setSoundDetected] = useState(false);\r\n//   const [currentImage, setCurrentImage] = useState(null);\r\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n//   const [examTerminated, setExamTerminated] = useState(false);\r\n//   const [mediaStream, setMediaStream] = useState(null);\r\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     const loadModels = async () => {\r\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n//       console.log(\"Face Detection Model Loaded\");\r\n//     };\r\n//     loadModels();\r\n//   }, []);\r\n\r\n//   const getPermissions = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n//       setMediaStream(stream);\r\n//       setPermissionsGranted(true);\r\n//       setShowPermissionMessage(false);\r\n//       fetchIpAddress(); // Call to fetch IP address when permissions are granted\r\n//     } catch (error) {\r\n//       alert(\"Please allow access to camera and microphone.\");\r\n//       setShowPermissionMessage(true);\r\n//     }\r\n//   };\r\n\r\n//   const fetchIpAddress = async () => {\r\n//     try {\r\n//       const response = await fetch(\"https://api.ipify.org?format=json\");\r\n//       const data = await response.json();\r\n//       alert(`Your IP Address: ${data.ip}`);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching IP address:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (mediaStream) {\r\n//       const tracks = mediaStream.getTracks();\r\n//       tracks.forEach((track) => {\r\n//         track.enabled = true;\r\n//       });\r\n//     }\r\n//   }, [mediaStream]);\r\n\r\n//   const detectFace = async () => {\r\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n//       const video = webcamRef.current.video;\r\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n//       const isFacePresent = detections.length > 0;\r\n//       setFaceDetected(isFacePresent);\r\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       const interval = setInterval(detectFace, 1000);\r\n//       return () => clearInterval(interval);\r\n//     }\r\n//   }, [permissionsGranted]);\r\n\r\n//   useEffect(() => {\r\n//     if (noFaceDuration >= 15) {\r\n//       alert(\"‚ö†Ô∏è Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n//       setNoFaceDuration(0);\r\n//     }\r\n//   }, [noFaceDuration]);\r\n\r\n//   const detectSound = useCallback(() => {\r\n//     if (!mediaStream) return;\r\n\r\n//     const audioContext = new AudioContext();\r\n//     const analyser = audioContext.createAnalyser();\r\n//     const source = audioContext.createMediaStreamSource(mediaStream);\r\n//     source.connect(analyser);\r\n//     analyser.fftSize = 256;\r\n//     const bufferLength = analyser.frequencyBinCount;\r\n//     const dataArray = new Uint8Array(bufferLength);\r\n\r\n//     const checkSound = () => {\r\n//       analyser.getByteFrequencyData(dataArray);\r\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n//       setSoundDetected(volume > 10);\r\n//       requestAnimationFrame(checkSound);\r\n//     };\r\n//     checkSound();\r\n//   }, [mediaStream]);\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       detectSound();\r\n//     }\r\n//   }, [permissionsGranted, detectSound]);\r\n\r\n//   return (\r\n//     <div className=\"continuous-auth-container\">\r\n//       <h2>Continuous Authentication</h2>\r\n\r\n//       {showPermissionMessage && (\r\n//         <div className=\"permission-message\">\r\n//           <p>Please allow access to your camera and microphone to start the exam.</p>\r\n//           <button onClick={getPermissions}>Allow Camera and Microphone</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {permissionsGranted ? (\r\n//         <>\r\n//           <Webcam\r\n//             audio={true}\r\n//             ref={webcamRef}\r\n//             screenshotFormat=\"image/jpeg\"\r\n//             className=\"webcam\"\r\n//             videoConstraints={{\r\n//               facingMode: \"user\",\r\n//               width: 720,\r\n//               height: 400,\r\n//             }}\r\n//           />\r\n//           <p>Camera and microphone are active for proctoring.</p>\r\n\r\n//           <div className=\"status-buttons-container\">\r\n//             <div className=\"status-buttons\">\r\n//               <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n//                 {faceDetected ? \"Face Detected ‚úÖ\" : \"No Face Detected ‚ùå\"}\r\n//               </button>\r\n//               <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n//                 {soundDetected ? \"Sound Detected üîä\" : \"No Sound Detected üîá\"}\r\n//               </button>\r\n//             </div>\r\n\r\n//             <div className=\"captured-images\">\r\n//               {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\r\n//             </div>\r\n//           </div>\r\n//         </>\r\n//       ) : (\r\n//         <p>Waiting for camera and microphone access...</p>\r\n//       )}\r\n\r\n//       {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n// import * as faceapi from \"face-api.js\";\r\n// import Webcam from \"react-webcam\";\r\n// import \"./ContinuousAuth.css\";\r\n\r\n// const ContinuousAuth = () => {\r\n//   const webcamRef = useRef(null);\r\n//   const [faceDetected, setFaceDetected] = useState(false);\r\n//   const [soundDetected, setSoundDetected] = useState(false);\r\n//   const [currentImage, setCurrentImage] = useState(null);\r\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n//   const [examTerminated, setExamTerminated] = useState(false);\r\n//   const [mediaStream, setMediaStream] = useState(null);\r\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n//   const [transcript, setTranscript] = useState(\"\");\r\n//   const [violations, setViolations] = useState(0);\r\n//   const recognitionRef = useRef(null);\r\n\r\n//   // ŸÜÿ∏ÿßŸÖ ŸÉÿ¥ŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ© ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\r\n//   const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\r\n//   const audioContextRef = useRef(null);\r\n//   const analyserRef = useRef(null);\r\n//   const voiceProfileRef = useRef({\r\n//     baseline: null,\r\n//     lastAlert: 0,\r\n//     active: false\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const loadModels = async () => {\r\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n//       console.log(\"Face Detection Model Loaded\");\r\n//     };\r\n//     loadModels();\r\n//   }, []);\r\n\r\n//   const getPermissions = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n//       setMediaStream(stream);\r\n//       setPermissionsGranted(true);\r\n//       setShowPermissionMessage(false);\r\n//       initializeSpeechRecognition();\r\n//       setupVoiceAnalysis(stream);\r\n//     } catch (error) {\r\n//       alert(\"Please allow access to camera and microphone.\");\r\n//       setShowPermissionMessage(true);\r\n//     }\r\n//   };\r\n\r\n//   // ŸÜÿ∏ÿßŸÖ ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™ ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\r\n//   const setupVoiceAnalysis = (stream) => {\r\n//     try {\r\n//       audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n//       analyserRef.current = audioContextRef.current.createAnalyser();\r\n//       analyserRef.current.fftSize = 4096;\r\n      \r\n//       const source = audioContextRef.current.createMediaStreamSource(stream);\r\n//       source.connect(analyserRef.current);\r\n\r\n//       // ÿ•ŸÜÿ¥ÿßÿ° ÿ®ÿµŸÖÿ© ÿµŸàÿ™Ÿäÿ© ÿ£ŸàŸÑŸäÿ© ÿ®ÿπÿØ 3 ÿ´ŸàÿßŸÜŸä\r\n//       setTimeout(() => {\r\n//         voiceProfileRef.current.baseline = createVoiceProfile();\r\n//         voiceProfileRef.current.active = true;\r\n//       }, 3000);\r\n\r\n//       const analyzeVoice = () => {\r\n//         if (!voiceProfileRef.current.active) {\r\n//           requestAnimationFrame(analyzeVoice);\r\n//           return;\r\n//         }\r\n\r\n//         const currentProfile = createVoiceProfile();\r\n//         const isMultiple = compareVoiceProfiles(voiceProfileRef.current.baseline, currentProfile);\r\n        \r\n//         if (isMultiple && Date.now() - voiceProfileRef.current.lastAlert > 5000) {\r\n//           setMultipleVoicesDetected(true);\r\n//           voiceProfileRef.current.lastAlert = Date.now();\r\n//         } else {\r\n//           setMultipleVoicesDetected(false);\r\n//         }\r\n\r\n//         requestAnimationFrame(analyzeVoice);\r\n//       };\r\n\r\n//       analyzeVoice();\r\n//     } catch (error) {\r\n//       console.error(\"Voice analysis error:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const createVoiceProfile = () => {\r\n//     const bufferLength = analyserRef.current.frequencyBinCount;\r\n//     const dataArray = new Float32Array(bufferLength);\r\n//     analyserRef.current.getFloatFrequencyData(dataArray);\r\n\r\n//     const profile = {\r\n//       lowRange: 0,    // 85-300Hz\r\n//       midRange: 0,    // 300-1000Hz\r\n//       highRange: 0,   // 1000-4000Hz\r\n//       peakCount: 0,\r\n//       totalEnergy: 0\r\n//     };\r\n\r\n//     for (let i = 0; i < bufferLength; i++) {\r\n//       const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\r\n//       const value = Math.pow(10, dataArray[i]/20); // Convert dB to linear\r\n\r\n//       if (freq >= 85 && freq < 300) {\r\n//         profile.lowRange += value;\r\n//       } else if (freq >= 300 && freq < 1000) {\r\n//         profile.midRange += value;\r\n//       } else if (freq >= 1000 && freq < 4000) {\r\n//         profile.highRange += value;\r\n//       }\r\n\r\n//       if (dataArray[i] > -40) profile.peakCount++;\r\n//       profile.totalEnergy += value;\r\n//     }\r\n\r\n//     return profile;\r\n//   };\r\n\r\n//   const compareVoiceProfiles = (baseline, current) => {\r\n//     // ÿ≠ÿ≥ÿßÿ® ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ™ÿ∫Ÿäÿ± ŸÑŸÉŸÑ ŸÜÿ∑ÿßŸÇ ÿ™ÿ±ÿØÿØŸä\r\n//     const lowDiff = Math.abs(current.lowRange - baseline.lowRange) / baseline.lowRange;\r\n//     const midDiff = Math.abs(current.midRange - baseline.midRange) / baseline.midRange;\r\n//     const highDiff = Math.abs(current.highRange - baseline.highRange) / baseline.highRange;\r\n//     const energyDiff = Math.abs(current.totalEnergy - baseline.totalEnergy) / baseline.totalEnergy;\r\n//     const peakDiff = Math.abs(current.peakCount - baseline.peakCount);\r\n\r\n//     // ÿ¥ÿ±Ÿàÿ∑ ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ©\r\n//     return (\r\n//       (lowDiff > 0.6 || midDiff > 0.6 || highDiff > 0.6) &&\r\n//       energyDiff > 0.4 &&\r\n//       peakDiff > 15\r\n//     );\r\n//   };\r\n\r\n//   const initializeSpeechRecognition = () => {\r\n//     const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n//     if (!SpeechRecognition) {\r\n//       console.error(\"Speech Recognition API not supported in this browser\");\r\n//       return;\r\n//     }\r\n\r\n//     recognitionRef.current = new SpeechRecognition();\r\n//     recognitionRef.current.continuous = true;\r\n//     recognitionRef.current.interimResults = false;\r\n//     recognitionRef.current.lang = \"ar-SA\";\r\n\r\n//     recognitionRef.current.onresult = (event) => {\r\n//       const last = event.results.length - 1;\r\n//       const text = event.results[last][0].transcript;\r\n//       setTranscript(text);\r\n//     };\r\n\r\n//     recognitionRef.current.onerror = (event) => {\r\n//       console.error(\"Speech recognition error\", event.error);\r\n//     };\r\n\r\n//     recognitionRef.current.start();\r\n//     recognitionRef.current.onend = () => {\r\n//       recognitionRef.current.start();\r\n//     };\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (mediaStream) {\r\n//       const tracks = mediaStream.getTracks();\r\n//       tracks.forEach((track) => {\r\n//         track.enabled = true;\r\n//       });\r\n//     }\r\n\r\n//     return () => {\r\n//       if (recognitionRef.current) {\r\n//         recognitionRef.current.stop();\r\n//       }\r\n//       if (audioContextRef.current) {\r\n//         audioContextRef.current.close();\r\n//       }\r\n//     };\r\n//   }, [mediaStream]);\r\n\r\n//   const detectFace = async () => {\r\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n//       const video = webcamRef.current.video;\r\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n//       const isFacePresent = detections.length > 0;\r\n//       setFaceDetected(isFacePresent);\r\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       const interval = setInterval(detectFace, 1000);\r\n//       return () => clearInterval(interval);\r\n//     }\r\n//   }, [permissionsGranted]);\r\n\r\n//   useEffect(() => {\r\n//     if (noFaceDuration >= 15) {\r\n//       alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n//       setNoFaceDuration(0);\r\n//     }\r\n//   }, [noFaceDuration]);\r\n\r\n//   const detectSound = useCallback(() => {\r\n//     if (!mediaStream) return;\r\n\r\n//     const audioContext = new AudioContext();\r\n//     const analyser = audioContext.createAnalyser();\r\n//     const source = audioContext.createMediaStreamSource(mediaStream);\r\n//     source.connect(analyser);\r\n//     analyser.fftSize = 256;\r\n//     const bufferLength = analyser.frequencyBinCount;\r\n//     const dataArray = new Uint8Array(bufferLength);\r\n\r\n//     const checkSound = () => {\r\n//       analyser.getByteFrequencyData(dataArray);\r\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n//       setSoundDetected(volume > 10);\r\n//       requestAnimationFrame(checkSound);\r\n//     };\r\n//     checkSound();\r\n//   }, [mediaStream]);\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       detectSound();\r\n//     }\r\n//   }, [permissionsGranted, detectSound]);\r\n\r\n//   useEffect(() => {\r\n//     if (multipleVoicesDetected) {\r\n//       const newViolations = violations + 1;\r\n//       setViolations(newViolations);\r\n      \r\n//       alert(`üö® MULTIPLE VOICES DETECTED! (Violation ${newViolations}/3)`);\r\n      \r\n//       if (newViolations >= 3) {\r\n//         setExamTerminated(true);\r\n//       }\r\n//     }\r\n//   }, [multipleVoicesDetected]);\r\n\r\n//   return (\r\n//     <div className=\"continuous-auth-container\">\r\n//       <h2>Exam Proctoring System</h2>\r\n\r\n//       {showPermissionMessage && (\r\n//         <div className=\"permission-message\">\r\n//           <h3>Exam Proctoring Setup</h3>\r\n//           <p>This exam requires camera and microphone access for proctoring purposes.</p>\r\n//           <div className=\"permission-requirements\">\r\n//             <p>‚úì Face detection must be enabled</p>\r\n//             <p>‚úì Microphone must be active</p>\r\n//           </div>\r\n//           <button className=\"permission-button\" onClick={getPermissions}>\r\n//             Enable Camera & Microphone\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {permissionsGranted && !examTerminated && (\r\n//         <div className=\"monitoring-container\">\r\n//           <div className=\"video-section\">\r\n//             <Webcam\r\n//               audio={true}\r\n//               ref={webcamRef}\r\n//               screenshotFormat=\"image/jpeg\"\r\n//               className=\"webcam\"\r\n//               videoConstraints={{\r\n//                 facingMode: \"user\",\r\n//                 width: 480,\r\n//                 height: 360,\r\n//               }}\r\n//             />\r\n//             <div className=\"status-indicators\">\r\n//               <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\r\n//                 {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\r\n//               </div>\r\n//               <div className={`status-indicator ${soundDetected ? \"active\" : \"\"}`}>\r\n//                 {soundDetected ? \"Sound Detected\" : \"No Sound Detected\"}\r\n//               </div>\r\n//               {multipleVoicesDetected && (\r\n//                 <div className=\"status-indicator warning\">\r\n//                   Multiple Voices Detected!\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"transcript-section\">\r\n//             <div className=\"transcript-box\">\r\n//               <div className=\"transcript-header\">\r\n//                 <span>Arabic Speech Transcript</span>\r\n//                 <span className=\"violation-counter\">Violations: {violations}/3</span>\r\n//               </div>\r\n//               <div className=\"transcript-content\" dir=\"rtl\">\r\n//                 {transcript || \"Waiting for audio input...\"}\r\n//               </div>\r\n//               <div className={`voice-detection-status ${multipleVoicesDetected ? \"multiple\" : \"\"}`}>\r\n//                 {multipleVoicesDetected \r\n//                   ? \"Multiple voices detected!\" \r\n//                   : \"Voice analysis active\"}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {examTerminated && (\r\n//         <div className=\"termination-message\">\r\n//           <h3>‚úñ Exam Terminated</h3>\r\n//           <p>Due to multiple violations detected. Please contact your instructor.</p>\r\n//           <p>Total violations: {violations}</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////////////////// \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./ContinuousAuth.css\";\r\n\r\n// ÿ™ÿπÿ±ŸäŸÅ ŸÉŸÑÿßÿ≥ SoundMeter\r\nfunction SoundMeter(context) {\r\n  this.context = context;\r\n  this.instant = 0.0;\r\n  this.slow = 0.0;\r\n  this.clip = 0.0;\r\n  this.script = context.createScriptProcessor(2048, 1, 1);\r\n  const that = this;\r\n  this.script.onaudioprocess = function (event) {\r\n    const input = event.inputBuffer.getChannelData(0);\r\n    let i;\r\n    let sum = 0.0;\r\n    let clipcount = 0;\r\n    for (i = 0; i < input.length; ++i) {\r\n      sum += input[i] * input[i];\r\n      if (Math.abs(input[i]) > 0.99) {\r\n        clipcount += 1;\r\n      }\r\n    }\r\n    that.instant = Math.sqrt(sum / input.length);\r\n    that.slow = 0.95 * that.slow + 0.05 * that.instant;\r\n    that.clip = clipcount / input.length;\r\n  };\r\n}\r\n\r\nSoundMeter.prototype.connectToSource = function (stream, callback) {\r\n  console.log(\"SoundMeter connecting\");\r\n  try {\r\n    this.mic = this.context.createMediaStreamSource(stream);\r\n    this.mic.connect(this.script);\r\n    this.script.connect(this.context.destination);\r\n    if (typeof callback !== \"undefined\") {\r\n      callback(null);\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n    if (typeof callback !== \"undefined\") {\r\n      callback(e);\r\n    }\r\n  }\r\n};\r\n\r\nSoundMeter.prototype.stop = function () {\r\n  console.log(\"SoundMeter stopping\");\r\n  this.mic.disconnect();\r\n  this.script.disconnect();\r\n};\r\n\r\nconst ContinuousAuth = () => {\r\n  const webcamRef = useRef(null);\r\n  const [faceDetected, setFaceDetected] = useState(false);\r\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n  const [examTerminated, setExamTerminated] = useState(false);\r\n  const [violations, setViolations] = useState(0);\r\n\r\n  // ŸÜÿ∏ÿßŸÖ ÿßŸÑŸÉÿ¥ŸÅ ÿπŸÜ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ© (ÿßŸÑŸÜÿ≥ÿÆÿ© ÿßŸÑŸÖÿ®ÿ≥ÿ∑ÿ©)\r\n  const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\r\n  const audioContextRef = useRef(null);\r\n  const soundMeterRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n      console.log(\"Face Detection Model Loaded\");\r\n    };\r\n    loadModels();\r\n  }, []);\r\n\r\n  const getPermissions = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n      setPermissionsGranted(true);\r\n      setupVoiceAnalysis(stream);\r\n    } catch (error) {\r\n      alert(\"Please allow access to camera and microphone.\");\r\n    }\r\n  };\r\n\r\n  const setupVoiceAnalysis = (stream) => {\r\n    try {\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      soundMeterRef.current = new SoundMeter(audioContextRef.current);\r\n      soundMeterRef.current.connectToSource(stream, () => {\r\n        console.log(\"SoundMeter connected successfully\");\r\n      });\r\n\r\n      let lastInstant = 0;\r\n\r\n      const analyzeVoice = () => {\r\n        const instant = soundMeterRef.current.instant;\r\n        const volumeChange = Math.abs(instant - lastInstant);\r\n        lastInstant = instant;\r\n\r\n        // ÿ¥ÿ±Ÿàÿ∑ ÿßŸÑŸÉÿ¥ŸÅ ÿπŸÜ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ©\r\n        if (volumeChange > 0.1 && instant > 0.05) {\r\n          setMultipleVoicesDetected(true);\r\n        } else {\r\n          setMultipleVoicesDetected(false);\r\n        }\r\n\r\n        requestAnimationFrame(analyzeVoice);\r\n      };\r\n\r\n      analyzeVoice();\r\n    } catch (error) {\r\n      console.error(\"Voice analysis error:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!permissionsGranted) {\r\n      getPermissions();\r\n    }\r\n  }, [permissionsGranted]);\r\n\r\n  const detectFace = async () => {\r\n    if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n      const video = webcamRef.current.video;\r\n      const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n      setFaceDetected(detections.length > 0);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (permissionsGranted) {\r\n      const interval = setInterval(detectFace, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [permissionsGranted]);\r\n\r\n  useEffect(() => {\r\n    if (multipleVoicesDetected) {\r\n      const newViolations = violations + 1;\r\n      setViolations(newViolations);\r\n\r\n      // ÿ™ŸÜÿ®ŸäŸá Ÿàÿßÿ∂ÿ≠ ÿ®Ÿàÿ¨ŸàÿØ ÿ£ŸÉÿ´ÿ± ŸÖŸÜ ÿ¥ÿÆÿµ Ÿäÿ™ÿ≠ÿØÿ´\r\n      alert(`‚ö† Warning: More than one person detected speaking! (Violation ${newViolations}/3)`);\r\n\r\n      if (newViolations >= 3) {\r\n        setExamTerminated(true);\r\n      }\r\n    }\r\n  }, [multipleVoicesDetected]);\r\n\r\n  return (\r\n    <div className=\"continuous-auth-container\">\r\n      <h2>Exam Proctoring System</h2>\r\n      {!permissionsGranted && (\r\n        <div className=\"permission-message\">\r\n          <h3>Exam Proctoring Setup</h3>\r\n          <p>This exam requires camera and microphone access for proctoring purposes.</p>\r\n          <div className=\"permission-requirements\">\r\n            <p>‚úì Face detection must be enabled</p>\r\n            <p>‚úì Microphone must be active</p>\r\n          </div>\r\n          <button className=\"permission-button\" onClick={getPermissions}>\r\n            Enable Camera & Microphone\r\n          </button>\r\n        </div>\r\n      )}\r\n      {permissionsGranted && !examTerminated && (\r\n        <div className=\"monitoring-container\">\r\n          <div className=\"video-section\">\r\n            <Webcam\r\n              audio={true}\r\n              ref={webcamRef}\r\n              screenshotFormat=\"image/jpeg\"\r\n              className=\"webcam\"\r\n              videoConstraints={{\r\n                facingMode: \"user\",\r\n                width: 480,\r\n                height: 360,\r\n              }}\r\n            />\r\n            <div className=\"status-indicators\">\r\n              <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\r\n                {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\r\n              </div>\r\n              {multipleVoicesDetected && (\r\n                <div className=\"status-indicator warning\">\r\n                  ‚ö† Warning: More than one person detected!\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {examTerminated && (\r\n        <div className=\"termination-message\">\r\n          <h3>‚úñ Exam Terminated</h3>\r\n          <p>Due to multiple violations detected. Please contact your instructor.</p>\r\n          <p>Total violations: {violations}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}