{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\continous-authentication1\\\\continous-authentication1\\\\continous-authentication\\\\continous-authentication\\\\src\\\\ContinuousAuth.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\n// import * as faceapi from \"face-api.js\";\n// import Webcam from \"react-webcam\";\n// import axios from \"axios\";\n// import \"./ContinuousAuth.css\";\n\n// const ContinuousAuth = () => {\n//   const webcamRef = useRef(null);\n//   const [faceDetected, setFaceDetected] = useState(false);\n//   const [soundDetected, setSoundDetected] = useState(false);\n//   const [currentImage, setCurrentImage] = useState(null);\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\n//   const [examTerminated, setExamTerminated] = useState(false);\n//   const [mediaStream, setMediaStream] = useState(null);\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\n\n//   useEffect(() => {\n//     const loadModels = async () => {\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n//       console.log(\"Face Detection Model Loaded\");\n//     };\n//     loadModels();\n//   }, []);\n\n//   const getPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n//       setMediaStream(stream);\n//       setPermissionsGranted(true);\n//       setShowPermissionMessage(false);\n//       fetchIpAddress(); // Call to fetch IP address when permissions are granted\n//     } catch (error) {\n//       alert(\"Please allow access to camera and microphone.\");\n//       setShowPermissionMessage(true);\n//     }\n//   };\n\n//   const fetchIpAddress = async () => {\n//     try {\n//       const response = await fetch(\"https://api.ipify.org?format=json\");\n//       const data = await response.json();\n//       alert(`Your IP Address: ${data.ip}`);\n//     } catch (error) {\n//       console.error(\"Error fetching IP address:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (mediaStream) {\n//       const tracks = mediaStream.getTracks();\n//       tracks.forEach((track) => {\n//         track.enabled = true;\n//       });\n//     }\n//   }, [mediaStream]);\n\n//   const detectFace = async () => {\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n//       const video = webcamRef.current.video;\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n//       const isFacePresent = detections.length > 0;\n//       setFaceDetected(isFacePresent);\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       const interval = setInterval(detectFace, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [permissionsGranted]);\n\n//   useEffect(() => {\n//     if (noFaceDuration >= 15) {\n//       alert(\"‚ö†Ô∏è Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n//       setNoFaceDuration(0);\n//     }\n//   }, [noFaceDuration]);\n\n//   const detectSound = useCallback(() => {\n//     if (!mediaStream) return;\n\n//     const audioContext = new AudioContext();\n//     const analyser = audioContext.createAnalyser();\n//     const source = audioContext.createMediaStreamSource(mediaStream);\n//     source.connect(analyser);\n//     analyser.fftSize = 256;\n//     const bufferLength = analyser.frequencyBinCount;\n//     const dataArray = new Uint8Array(bufferLength);\n\n//     const checkSound = () => {\n//       analyser.getByteFrequencyData(dataArray);\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n//       setSoundDetected(volume > 10);\n//       requestAnimationFrame(checkSound);\n//     };\n//     checkSound();\n//   }, [mediaStream]);\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       detectSound();\n//     }\n//   }, [permissionsGranted, detectSound]);\n\n//   return (\n//     <div className=\"continuous-auth-container\">\n//       <h2>Continuous Authentication</h2>\n\n//       {showPermissionMessage && (\n//         <div className=\"permission-message\">\n//           <p>Please allow access to your camera and microphone to start the exam.</p>\n//           <button onClick={getPermissions}>Allow Camera and Microphone</button>\n//         </div>\n//       )}\n\n//       {permissionsGranted ? (\n//         <>\n//           <Webcam\n//             audio={true}\n//             ref={webcamRef}\n//             screenshotFormat=\"image/jpeg\"\n//             className=\"webcam\"\n//             videoConstraints={{\n//               facingMode: \"user\",\n//               width: 720,\n//               height: 400,\n//             }}\n//           />\n//           <p>Camera and microphone are active for proctoring.</p>\n\n//           <div className=\"status-buttons-container\">\n//             <div className=\"status-buttons\">\n//               <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\n//                 {faceDetected ? \"Face Detected ‚úÖ\" : \"No Face Detected ‚ùå\"}\n//               </button>\n//               <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\n//                 {soundDetected ? \"Sound Detected üîä\" : \"No Sound Detected üîá\"}\n//               </button>\n//             </div>\n\n//             <div className=\"captured-images\">\n//               {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\n//             </div>\n//           </div>\n//         </>\n//       ) : (\n//         <p>Waiting for camera and microphone access...</p>\n//       )}\n\n//       {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\n//     </div>\n//   );\n// };\n\n// export default ContinuousAuth;\n\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\n// import * as faceapi from \"face-api.js\";\n// import Webcam from \"react-webcam\";\n// import \"./ContinuousAuth.css\";\n\n// const ContinuousAuth = () => {\n//   const webcamRef = useRef(null);\n//   const [faceDetected, setFaceDetected] = useState(false);\n//   const [soundDetected, setSoundDetected] = useState(false);\n//   const [currentImage, setCurrentImage] = useState(null);\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\n//   const [examTerminated, setExamTerminated] = useState(false);\n//   const [mediaStream, setMediaStream] = useState(null);\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\n//   const [transcript, setTranscript] = useState(\"\");\n//   const [violations, setViolations] = useState(0);\n//   const recognitionRef = useRef(null);\n\n//   // ŸÜÿ∏ÿßŸÖ ŸÉÿ¥ŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ© ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\n//   const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\n//   const audioContextRef = useRef(null);\n//   const analyserRef = useRef(null);\n//   const voiceProfileRef = useRef({\n//     baseline: null,\n//     lastAlert: 0,\n//     active: false\n//   });\n\n//   useEffect(() => {\n//     const loadModels = async () => {\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n//       console.log(\"Face Detection Model Loaded\");\n//     };\n//     loadModels();\n//   }, []);\n\n//   const getPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n//       setMediaStream(stream);\n//       setPermissionsGranted(true);\n//       setShowPermissionMessage(false);\n//       initializeSpeechRecognition();\n//       setupVoiceAnalysis(stream);\n//     } catch (error) {\n//       alert(\"Please allow access to camera and microphone.\");\n//       setShowPermissionMessage(true);\n//     }\n//   };\n\n//   // ŸÜÿ∏ÿßŸÖ ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™ ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\n//   const setupVoiceAnalysis = (stream) => {\n//     try {\n//       audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n//       analyserRef.current = audioContextRef.current.createAnalyser();\n//       analyserRef.current.fftSize = 4096;\n\n//       const source = audioContextRef.current.createMediaStreamSource(stream);\n//       source.connect(analyserRef.current);\n\n//       // ÿ•ŸÜÿ¥ÿßÿ° ÿ®ÿµŸÖÿ© ÿµŸàÿ™Ÿäÿ© ÿ£ŸàŸÑŸäÿ© ÿ®ÿπÿØ 3 ÿ´ŸàÿßŸÜŸä\n//       setTimeout(() => {\n//         voiceProfileRef.current.baseline = createVoiceProfile();\n//         voiceProfileRef.current.active = true;\n//       }, 3000);\n\n//       const analyzeVoice = () => {\n//         if (!voiceProfileRef.current.active) {\n//           requestAnimationFrame(analyzeVoice);\n//           return;\n//         }\n\n//         const currentProfile = createVoiceProfile();\n//         const isMultiple = compareVoiceProfiles(voiceProfileRef.current.baseline, currentProfile);\n\n//         if (isMultiple && Date.now() - voiceProfileRef.current.lastAlert > 5000) {\n//           setMultipleVoicesDetected(true);\n//           voiceProfileRef.current.lastAlert = Date.now();\n//         } else {\n//           setMultipleVoicesDetected(false);\n//         }\n\n//         requestAnimationFrame(analyzeVoice);\n//       };\n\n//       analyzeVoice();\n//     } catch (error) {\n//       console.error(\"Voice analysis error:\", error);\n//     }\n//   };\n\n//   const createVoiceProfile = () => {\n//     const bufferLength = analyserRef.current.frequencyBinCount;\n//     const dataArray = new Float32Array(bufferLength);\n//     analyserRef.current.getFloatFrequencyData(dataArray);\n\n//     const profile = {\n//       lowRange: 0,    // 85-300Hz\n//       midRange: 0,    // 300-1000Hz\n//       highRange: 0,   // 1000-4000Hz\n//       peakCount: 0,\n//       totalEnergy: 0\n//     };\n\n//     for (let i = 0; i < bufferLength; i++) {\n//       const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\n//       const value = Math.pow(10, dataArray[i]/20); // Convert dB to linear\n\n//       if (freq >= 85 && freq < 300) {\n//         profile.lowRange += value;\n//       } else if (freq >= 300 && freq < 1000) {\n//         profile.midRange += value;\n//       } else if (freq >= 1000 && freq < 4000) {\n//         profile.highRange += value;\n//       }\n\n//       if (dataArray[i] > -40) profile.peakCount++;\n//       profile.totalEnergy += value;\n//     }\n\n//     return profile;\n//   };\n\n//   const compareVoiceProfiles = (baseline, current) => {\n//     // ÿ≠ÿ≥ÿßÿ® ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ™ÿ∫Ÿäÿ± ŸÑŸÉŸÑ ŸÜÿ∑ÿßŸÇ ÿ™ÿ±ÿØÿØŸä\n//     const lowDiff = Math.abs(current.lowRange - baseline.lowRange) / baseline.lowRange;\n//     const midDiff = Math.abs(current.midRange - baseline.midRange) / baseline.midRange;\n//     const highDiff = Math.abs(current.highRange - baseline.highRange) / baseline.highRange;\n//     const energyDiff = Math.abs(current.totalEnergy - baseline.totalEnergy) / baseline.totalEnergy;\n//     const peakDiff = Math.abs(current.peakCount - baseline.peakCount);\n\n//     // ÿ¥ÿ±Ÿàÿ∑ ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ©\n//     return (\n//       (lowDiff > 0.6 || midDiff > 0.6 || highDiff > 0.6) &&\n//       energyDiff > 0.4 &&\n//       peakDiff > 15\n//     );\n//   };\n\n//   const initializeSpeechRecognition = () => {\n//     const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n//     if (!SpeechRecognition) {\n//       console.error(\"Speech Recognition API not supported in this browser\");\n//       return;\n//     }\n\n//     recognitionRef.current = new SpeechRecognition();\n//     recognitionRef.current.continuous = true;\n//     recognitionRef.current.interimResults = false;\n//     recognitionRef.current.lang = \"ar-SA\";\n\n//     recognitionRef.current.onresult = (event) => {\n//       const last = event.results.length - 1;\n//       const text = event.results[last][0].transcript;\n//       setTranscript(text);\n//     };\n\n//     recognitionRef.current.onerror = (event) => {\n//       console.error(\"Speech recognition error\", event.error);\n//     };\n\n//     recognitionRef.current.start();\n//     recognitionRef.current.onend = () => {\n//       recognitionRef.current.start();\n//     };\n//   };\n\n//   useEffect(() => {\n//     if (mediaStream) {\n//       const tracks = mediaStream.getTracks();\n//       tracks.forEach((track) => {\n//         track.enabled = true;\n//       });\n//     }\n\n//     return () => {\n//       if (recognitionRef.current) {\n//         recognitionRef.current.stop();\n//       }\n//       if (audioContextRef.current) {\n//         audioContextRef.current.close();\n//       }\n//     };\n//   }, [mediaStream]);\n\n//   const detectFace = async () => {\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n//       const video = webcamRef.current.video;\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n//       const isFacePresent = detections.length > 0;\n//       setFaceDetected(isFacePresent);\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       const interval = setInterval(detectFace, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [permissionsGranted]);\n\n//   useEffect(() => {\n//     if (noFaceDuration >= 15) {\n//       alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n//       setNoFaceDuration(0);\n//     }\n//   }, [noFaceDuration]);\n\n//   const detectSound = useCallback(() => {\n//     if (!mediaStream) return;\n\n//     const audioContext = new AudioContext();\n//     const analyser = audioContext.createAnalyser();\n//     const source = audioContext.createMediaStreamSource(mediaStream);\n//     source.connect(analyser);\n//     analyser.fftSize = 256;\n//     const bufferLength = analyser.frequencyBinCount;\n//     const dataArray = new Uint8Array(bufferLength);\n\n//     const checkSound = () => {\n//       analyser.getByteFrequencyData(dataArray);\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n//       setSoundDetected(volume > 10);\n//       requestAnimationFrame(checkSound);\n//     };\n//     checkSound();\n//   }, [mediaStream]);\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       detectSound();\n//     }\n//   }, [permissionsGranted, detectSound]);\n\n//   useEffect(() => {\n//     if (multipleVoicesDetected) {\n//       const newViolations = violations + 1;\n//       setViolations(newViolations);\n\n//       alert(`üö® MULTIPLE VOICES DETECTED! (Violation ${newViolations}/3)`);\n\n//       if (newViolations >= 3) {\n//         setExamTerminated(true);\n//       }\n//     }\n//   }, [multipleVoicesDetected]);\n\n//   return (\n//     <div className=\"continuous-auth-container\">\n//       <h2>Exam Proctoring System</h2>\n\n//       {showPermissionMessage && (\n//         <div className=\"permission-message\">\n//           <h3>Exam Proctoring Setup</h3>\n//           <p>This exam requires camera and microphone access for proctoring purposes.</p>\n//           <div className=\"permission-requirements\">\n//             <p>‚úì Face detection must be enabled</p>\n//             <p>‚úì Microphone must be active</p>\n//           </div>\n//           <button className=\"permission-button\" onClick={getPermissions}>\n//             Enable Camera & Microphone\n//           </button>\n//         </div>\n//       )}\n\n//       {permissionsGranted && !examTerminated && (\n//         <div className=\"monitoring-container\">\n//           <div className=\"video-section\">\n//             <Webcam\n//               audio={true}\n//               ref={webcamRef}\n//               screenshotFormat=\"image/jpeg\"\n//               className=\"webcam\"\n//               videoConstraints={{\n//                 facingMode: \"user\",\n//                 width: 480,\n//                 height: 360,\n//               }}\n//             />\n//             <div className=\"status-indicators\">\n//               <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\n//                 {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\n//               </div>\n//               <div className={`status-indicator ${soundDetected ? \"active\" : \"\"}`}>\n//                 {soundDetected ? \"Sound Detected\" : \"No Sound Detected\"}\n//               </div>\n//               {multipleVoicesDetected && (\n//                 <div className=\"status-indicator warning\">\n//                   Multiple Voices Detected!\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n\n//           <div className=\"transcript-section\">\n//             <div className=\"transcript-box\">\n//               <div className=\"transcript-header\">\n//                 <span>Arabic Speech Transcript</span>\n//                 <span className=\"violation-counter\">Violations: {violations}/3</span>\n//               </div>\n//               <div className=\"transcript-content\" dir=\"rtl\">\n//                 {transcript || \"Waiting for audio input...\"}\n//               </div>\n//               <div className={`voice-detection-status ${multipleVoicesDetected ? \"multiple\" : \"\"}`}>\n//                 {multipleVoicesDetected \n//                   ? \"Multiple voices detected!\" \n//                   : \"Voice analysis active\"}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {examTerminated && (\n//         <div className=\"termination-message\">\n//           <h3>‚úñ Exam Terminated</h3>\n//           <p>Due to multiple violations detected. Please contact your instructor.</p>\n//           <p>Total violations: {violations}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ContinuousAuth;\n\n//////////////////////////////////////////////////////////////////////////////////// \n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport Webcam from \"react-webcam\";\nimport \"./ContinuousAuth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContinuousAuth = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const [faceDetected, setFaceDetected] = useState(false);\n  const [currentImage, setCurrentImage] = useState(null);\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\n  const [examTerminated, setExamTerminated] = useState(false);\n  const [mediaStream, setMediaStream] = useState(null);\n  const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n  const [noFaceDuration, setNoFaceDuration] = useState(0);\n  const [transcript, setTranscript] = useState(\"\");\n  const [violations, setViolations] = useState(0);\n  const recognitionRef = useRef(null);\n\n  // Enhanced Audio Monitoring State\n  const [audioAnalysis, setAudioAnalysis] = useState({\n    volumeLevel: 0,\n    voiceConsistency: 100,\n    backgroundNoiseLevel: 0,\n    audioAnomalies: 0,\n    speakingRate: 0,\n    pitchVariation: 0,\n    lastVoicePrint: null,\n    audioContextReady: false\n  });\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const voicePrintIntervalRef = useRef(null);\n  const audioCheckIntervalRef = useRef(null);\n  useEffect(() => {\n    const loadModels = async () => {\n      await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n      console.log(\"Face Detection Model Loaded\");\n    };\n    loadModels();\n  }, []);\n  const getPermissions = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: {\n          echoCancellation: false,\n          noiseSuppression: false,\n          autoGainControl: false\n        }\n      });\n      setMediaStream(stream);\n      setPermissionsGranted(true);\n      setShowPermissionMessage(false);\n      initializeAudioAnalysis(stream);\n      initializeSpeechRecognition();\n    } catch (error) {\n      alert(\"Please allow access to camera and microphone.\");\n      setShowPermissionMessage(true);\n    }\n  };\n\n  // Advanced Audio Analysis Initialization\n  const initializeAudioAnalysis = stream => {\n    try {\n      // Create audio context\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)({\n        latencyHint: \"interactive\",\n        sampleRate: 44100\n      });\n\n      // Create analyser node with higher precision\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      analyserRef.current.fftSize = 8192;\n      analyserRef.current.smoothingTimeConstant = 0.8;\n\n      // Create media stream source\n      const source = audioContextRef.current.createMediaStreamSource(stream);\n      source.connect(analyserRef.current);\n\n      // Create script processor for detailed analysis\n      const processor = audioContextRef.current.createScriptProcessor(4096, 1, 1);\n      analyserRef.current.connect(processor);\n      processor.connect(audioContextRef.current.destination);\n\n      // Initialize voice print collection\n      startVoicePrintCollection();\n\n      // Start continuous audio monitoring\n      startAudioMonitoring();\n      setAudioAnalysis(prev => ({\n        ...prev,\n        audioContextReady: true\n      }));\n    } catch (error) {\n      console.error(\"Audio analysis initialization error:\", error);\n    }\n  };\n\n  // Voice Print Collection\n  const startVoicePrintCollection = () => {\n    const collectVoicePrint = () => {\n      if (!analyserRef.current) return;\n      const bufferLength = analyserRef.current.frequencyBinCount;\n      const frequencyData = new Float32Array(bufferLength);\n      const timeDomainData = new Float32Array(bufferLength);\n      analyserRef.current.getFloatFrequencyData(frequencyData);\n      analyserRef.current.getFloatTimeDomainData(timeDomainData);\n\n      // Calculate voice characteristics\n      const voicePrint = {\n        timestamp: Date.now(),\n        spectralCentroid: calculateSpectralCentroid(frequencyData),\n        spectralFlatness: calculateSpectralFlatness(frequencyData),\n        energy: calculateEnergy(timeDomainData),\n        zeroCrossingRate: calculateZeroCrossingRate(timeDomainData),\n        pitch: estimatePitch(timeDomainData, audioContextRef.current.sampleRate),\n        formants: estimateFormants(frequencyData, audioContextRef.current.sampleRate)\n      };\n      setAudioAnalysis(prev => ({\n        ...prev,\n        lastVoicePrint: voicePrint\n      }));\n    };\n    voicePrintIntervalRef.current = setInterval(collectVoicePrint, 2000);\n  };\n\n  // Continuous Audio Monitoring\n  const startAudioMonitoring = () => {\n    const monitorAudio = () => {\n      if (!analyserRef.current) return;\n      const bufferLength = analyserRef.current.frequencyBinCount;\n      const frequencyData = new Float32Array(bufferLength);\n      const timeDomainData = new Float32Array(bufferLength);\n      analyserRef.current.getFloatFrequencyData(frequencyData);\n      analyserRef.current.getFloatTimeDomainData(timeDomainData);\n\n      // Calculate current audio metrics\n      const currentVolume = calculateVolumeLevel(timeDomainData);\n      const currentNoise = calculateBackgroundNoise(frequencyData);\n      const currentAnomalies = detectAudioAnomalies(frequencyData);\n      const speakingRate = estimateSpeakingRate(timeDomainData);\n      const pitchVar = estimatePitchVariation(timeDomainData, audioContextRef.current.sampleRate);\n\n      // Calculate voice consistency if we have a previous voice print\n      let consistency = 100;\n      if (audioAnalysis.lastVoicePrint) {\n        consistency = calculateVoiceConsistency(audioAnalysis.lastVoicePrint, {\n          spectralCentroid: calculateSpectralCentroid(frequencyData),\n          spectralFlatness: calculateSpectralFlatness(frequencyData),\n          energy: calculateEnergy(timeDomainData)\n        });\n      }\n      setAudioAnalysis(prev => ({\n        ...prev,\n        volumeLevel: currentVolume,\n        backgroundNoiseLevel: currentNoise,\n        audioAnomalies: prev.audioAnomalies + currentAnomalies,\n        voiceConsistency: consistency,\n        speakingRate: speakingRate,\n        pitchVariation: pitchVar\n      }));\n\n      // Check for potential violations\n      checkForAudioViolations(currentVolume, currentNoise, consistency, speakingRate, pitchVar);\n    };\n    audioCheckIntervalRef.current = setInterval(monitorAudio, 500);\n  };\n\n  // Audio Analysis Helper Functions\n  const calculateVolumeLevel = timeDomainData => {\n    let sum = 0;\n    for (let i = 0; i < timeDomainData.length; i++) {\n      sum += Math.abs(timeDomainData[i]);\n    }\n    return sum / timeDomainData.length;\n  };\n  const calculateBackgroundNoise = frequencyData => {\n    let sum = 0;\n    let count = 0;\n    for (let i = 0; i < frequencyData.length; i++) {\n      const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\n      if (freq > 5000) {\n        sum += Math.pow(10, frequencyData[i] / 20); // Convert dB to linear\n        count++;\n      }\n    }\n    return count > 0 ? sum / count : 0;\n  };\n  const detectAudioAnomalies = frequencyData => {\n    let anomalies = 0;\n    const bands = [{\n      low: 85,\n      high: 255\n    },\n    // Low male voice\n    {\n      low: 255,\n      high: 400\n    },\n    // Female voice fundamentals\n    {\n      low: 400,\n      high: 1000\n    },\n    // Voice harmonics\n    {\n      low: 1000,\n      high: 4000\n    } // Consonants and sibilance\n    ];\n    bands.forEach(band => {\n      const bandEnergy = calculateBandEnergy(frequencyData, band.low, band.high);\n      const threshold = audioAnalysis.lastVoicePrint ? audioAnalysis.lastVoicePrint.energy * 1.8 : 0.1;\n      if (bandEnergy > threshold) {\n        anomalies++;\n      }\n    });\n    return anomalies;\n  };\n  const calculateVoiceConsistency = (baseline, current) => {\n    const centroidDiff = Math.abs(current.spectralCentroid - baseline.spectralCentroid) / baseline.spectralCentroid;\n    const flatnessDiff = Math.abs(current.spectralFlatness - baseline.spectralFlatness);\n    const energyDiff = Math.abs(current.energy - baseline.energy) / baseline.energy;\n    const score = 100 - (Math.min(centroidDiff, 0.5) * 40 + Math.min(flatnessDiff, 0.3) * 30 + Math.min(energyDiff, 1.0) * 30);\n    return Math.max(0, Math.min(100, score));\n  };\n  const checkForAudioViolations = (volume, noise, consistency, speakingRate, pitchVar) => {\n    const multipleSpeakersDetected = consistency < 60 ||\n    // Voice characteristics changed significantly\n    noise > 0.15 && volume > 0.2 ||\n    // High noise with high volume\n    speakingRate > 10 ||\n    // Unusually fast speech\n    pitchVar > 100; // Extreme pitch variations\n\n    if (multipleSpeakersDetected) {\n      setViolations(prev => {\n        const newViolations = prev + 1;\n        if (newViolations >= 3) {\n          setExamTerminated(true);\n          clearInterval(voicePrintIntervalRef.current);\n          clearInterval(audioCheckIntervalRef.current);\n        } else if (newViolations % 1 === 0) {\n          alert(`Audio Anomaly Detected! (Violation ${newViolations}/3)\\nPlease ensure you're alone in a quiet environment.`);\n        }\n        return newViolations;\n      });\n    }\n  };\n\n  // Speech Recognition Initialization\n  const initializeSpeechRecognition = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      console.error(\"Speech Recognition API not supported in this browser\");\n      return;\n    }\n    recognitionRef.current = new SpeechRecognition();\n    recognitionRef.current.continuous = true;\n    recognitionRef.current.interimResults = true;\n    recognitionRef.current.lang = \"ar-SA\";\n    recognitionRef.current.maxAlternatives = 3;\n    recognitionRef.current.onresult = event => {\n      let finalTranscript = \"\";\n      let interimTranscript = \"\";\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) {\n          finalTranscript += transcript + \" \";\n        } else {\n          interimTranscript += transcript;\n        }\n      }\n      setTranscript(finalTranscript || interimTranscript);\n\n      // Additional check for multiple speakers in transcript\n      if (finalTranscript.includes(\" Ÿà \") || finalTranscript.includes(\" ÿ´ŸÖ \")) {\n        setViolations(prev => prev + 0.5); // Partial violation for conjunction words\n      }\n    };\n    recognitionRef.current.onerror = event => {\n      console.error(\"Speech recognition error\", event.error);\n    };\n    recognitionRef.current.start();\n    recognitionRef.current.onend = () => {\n      recognitionRef.current.start();\n    };\n  };\n\n  // Face Detection\n  const detectFace = async () => {\n    if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n      const video = webcamRef.current.video;\n      const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n      const isFacePresent = detections.length > 0;\n      setFaceDetected(isFacePresent);\n      setNoFaceDuration(prev => isFacePresent ? 0 : prev + 1);\n    }\n  };\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n      if (voicePrintIntervalRef.current) {\n        clearInterval(voicePrintIntervalRef.current);\n      }\n      if (audioCheckIntervalRef.current) {\n        clearInterval(audioCheckIntervalRef.current);\n      }\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (permissionsGranted) {\n      const interval = setInterval(detectFace, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [permissionsGranted]);\n  useEffect(() => {\n    if (noFaceDuration >= 15) {\n      alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n      setNoFaceDuration(0);\n    }\n  }, [noFaceDuration]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"continuous-auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Advanced Exam Proctoring System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 7\n    }, this), showPermissionMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"permission-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Exam Proctoring Setup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This exam requires camera and microphone access for proctoring purposes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"permission-requirements\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2713 Face detection must be enabled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2713 Microphone must be active (raw audio preferred)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2713 Quiet environment recommended\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"permission-button\",\n        onClick: getPermissions,\n        children: \"Enable Camera & Microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 856,\n      columnNumber: 9\n    }, this), permissionsGranted && !examTerminated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monitoring-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-section\",\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          audio: true,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\",\n          className: \"webcam\",\n          videoConstraints: {\n            facingMode: \"user\",\n            width: 480,\n            height: 360\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicators\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${faceDetected ? \"active\" : \"\"}`,\n            children: faceDetected ? \"Face Detected\" : \"No Face Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${audioAnalysis.volumeLevel > 0.1 ? \"active\" : \"\"}`,\n            children: audioAnalysis.volumeLevel > 0.1 ? \"Audio Active\" : \"Audio Silent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator\",\n            children: [\"Voice Consistency: \", Math.round(audioAnalysis.voiceConsistency), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-analysis-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Advanced Audio Monitoring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-metrics\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"metric-label\",\n              children: \"Volume Level:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-bar-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-bar\",\n                style: {\n                  width: `${Math.min(100, audioAnalysis.volumeLevel * 500)}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 901,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"metric-label\",\n              children: \"Background Noise:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 908,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-bar-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-bar noise\",\n                style: {\n                  width: `${Math.min(100, audioAnalysis.backgroundNoiseLevel * 500)}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"metric-label\",\n              children: \"Voice Consistency:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-bar-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-bar consistency\",\n                style: {\n                  width: `${audioAnalysis.voiceConsistency}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 918,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"metric-label\",\n              children: \"Audio Anomalies:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 926,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"metric-value\",\n              children: audioAnalysis.audioAnomalies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Arabic Speech Transcript\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 934,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"violation-counter\",\n              children: [\"Violations: \", Math.floor(violations), \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 935,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-content\",\n            dir: \"rtl\",\n            children: transcript || \"Waiting for audio input...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"audio-warnings\",\n            children: [audioAnalysis.voiceConsistency < 70 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"warning-message\",\n              children: \"\\u26A0 Voice inconsistency detected. Please ensure you're the only speaker.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 19\n            }, this), audioAnalysis.backgroundNoiseLevel > 0.2 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"warning-message\",\n              children: \"\\u26A0 High background noise detected. Find a quieter environment.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 947,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 9\n    }, this), examTerminated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"termination-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u2716 Exam Terminated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Due to multiple audio violations detected. Please contact your instructor.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"violation-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total violations: \", violations]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Final voice consistency: \", Math.round(audioAnalysis.voiceConsistency), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Audio anomalies detected: \", audioAnalysis.audioAnomalies]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 853,\n    columnNumber: 5\n  }, this);\n};\n\n// Additional audio analysis helper functions\n_s(ContinuousAuth, \"piwYle3XS9UEK7M9aQ7f7Lo9YQ4=\");\n_c = ContinuousAuth;\nfunction calculateSpectralCentroid(frequencyData) {\n  let sum = 0;\n  let totalMagnitude = 0;\n  for (let i = 0; i < frequencyData.length; i++) {\n    const magnitude = Math.pow(10, frequencyData[i] / 20);\n    sum += i * magnitude;\n    totalMagnitude += magnitude;\n  }\n  return totalMagnitude > 0 ? sum / totalMagnitude : 0;\n}\nfunction calculateSpectralFlatness(frequencyData) {\n  let product = 1;\n  let sum = 0;\n  const count = frequencyData.length;\n  for (let i = 0; i < count; i++) {\n    const value = Math.pow(10, frequencyData[i] / 20);\n    product *= value;\n    sum += value;\n  }\n  return sum > 0 ? product / Math.pow(sum / count, count) : 0;\n}\nfunction calculateEnergy(timeDomainData) {\n  let sum = 0;\n  for (let i = 0; i < timeDomainData.length; i++) {\n    sum += Math.pow(timeDomainData[i], 2);\n  }\n  return Math.sqrt(sum / timeDomainData.length);\n}\nfunction calculateZeroCrossingRate(timeDomainData) {\n  let crossings = 0;\n  for (let i = 1; i < timeDomainData.length; i++) {\n    if (timeDomainData[i] * timeDomainData[i - 1] < 0) {\n      crossings++;\n    }\n  }\n  return crossings / timeDomainData.length;\n}\nfunction estimatePitch(timeDomainData, sampleRate) {\n  const maxLag = Math.floor(sampleRate / 60); // Minimum pitch (60Hz)\n  const minLag = Math.floor(sampleRate / 400); // Maximum pitch (400Hz)\n  let bestLag = 0;\n  let bestCorrelation = -1;\n  for (let lag = minLag; lag <= maxLag; lag++) {\n    let correlation = 0;\n    for (let i = 0; i < timeDomainData.length - lag; i++) {\n      correlation += timeDomainData[i] * timeDomainData[i + lag];\n    }\n    if (correlation > bestCorrelation) {\n      bestCorrelation = correlation;\n      bestLag = lag;\n    }\n  }\n  return bestLag > 0 ? sampleRate / bestLag : 0;\n}\nfunction estimateFormants(frequencyData, sampleRate) {\n  const formants = [];\n  const binSize = sampleRate / frequencyData.length;\n  for (let i = 1; i < frequencyData.length - 1; i++) {\n    const prev = frequencyData[i - 1];\n    const curr = frequencyData[i];\n    const next = frequencyData[i + 1];\n    if (curr > prev && curr > next && curr > -50) {\n      formants.push(i * binSize);\n      if (formants.length >= 3) break; // Only need first few formants\n    }\n  }\n  return formants;\n}\nfunction calculateBandEnergy(frequencyData, lowFreq, highFreq) {\n  const binSize = audioContextRef.current.sampleRate / frequencyData.length;\n  const startBin = Math.floor(lowFreq / binSize);\n  const endBin = Math.ceil(highFreq / binSize);\n  let energy = 0;\n  for (let i = startBin; i <= endBin; i++) {\n    energy += Math.pow(10, frequencyData[i] / 20);\n  }\n  return energy / (endBin - startBin + 1);\n}\nfunction estimateSpeakingRate(timeDomainData) {\n  let speechFrames = 0;\n  const threshold = 0.05;\n  for (let i = 0; i < timeDomainData.length; i++) {\n    if (Math.abs(timeDomainData[i]) > threshold) {\n      speechFrames++;\n    }\n  }\n  return speechFrames / timeDomainData.length * 100;\n}\nfunction estimatePitchVariation(timeDomainData, sampleRate) {\n  const segmentLength = Math.floor(sampleRate / 100); // 10ms segments\n  const pitches = [];\n  for (let i = 0; i < timeDomainData.length - segmentLength; i += segmentLength) {\n    const segment = timeDomainData.slice(i, i + segmentLength);\n    const pitch = estimatePitch(segment, sampleRate);\n    if (pitch > 0) pitches.push(pitch);\n  }\n  if (pitches.length < 2) return 0;\n  let variation = 0;\n  for (let i = 1; i < pitches.length; i++) {\n    variation += Math.abs(pitches[i] - pitches[i - 1]);\n  }\n  return variation / (pitches.length - 1);\n}\nexport default ContinuousAuth;\nvar _c;\n$RefreshReg$(_c, \"ContinuousAuth\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","faceapi","Webcam","jsxDEV","_jsxDEV","ContinuousAuth","_s","webcamRef","faceDetected","setFaceDetected","currentImage","setCurrentImage","permissionsGranted","setPermissionsGranted","examTerminated","setExamTerminated","mediaStream","setMediaStream","showPermissionMessage","setShowPermissionMessage","noFaceDuration","setNoFaceDuration","transcript","setTranscript","violations","setViolations","recognitionRef","audioAnalysis","setAudioAnalysis","volumeLevel","voiceConsistency","backgroundNoiseLevel","audioAnomalies","speakingRate","pitchVariation","lastVoicePrint","audioContextReady","audioContextRef","analyserRef","voicePrintIntervalRef","audioCheckIntervalRef","loadModels","nets","tinyFaceDetector","loadFromUri","console","log","getPermissions","stream","navigator","mediaDevices","getUserMedia","video","audio","echoCancellation","noiseSuppression","autoGainControl","initializeAudioAnalysis","initializeSpeechRecognition","error","alert","current","window","AudioContext","webkitAudioContext","latencyHint","sampleRate","createAnalyser","fftSize","smoothingTimeConstant","source","createMediaStreamSource","connect","processor","createScriptProcessor","destination","startVoicePrintCollection","startAudioMonitoring","prev","collectVoicePrint","bufferLength","frequencyBinCount","frequencyData","Float32Array","timeDomainData","getFloatFrequencyData","getFloatTimeDomainData","voicePrint","timestamp","Date","now","spectralCentroid","calculateSpectralCentroid","spectralFlatness","calculateSpectralFlatness","energy","calculateEnergy","zeroCrossingRate","calculateZeroCrossingRate","pitch","estimatePitch","formants","estimateFormants","setInterval","monitorAudio","currentVolume","calculateVolumeLevel","currentNoise","calculateBackgroundNoise","currentAnomalies","detectAudioAnomalies","estimateSpeakingRate","pitchVar","estimatePitchVariation","consistency","calculateVoiceConsistency","checkForAudioViolations","sum","i","length","Math","abs","count","freq","pow","anomalies","bands","low","high","forEach","band","bandEnergy","calculateBandEnergy","threshold","baseline","centroidDiff","flatnessDiff","energyDiff","score","min","max","volume","noise","multipleSpeakersDetected","newViolations","clearInterval","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","maxAlternatives","onresult","event","finalTranscript","interimTranscript","resultIndex","results","isFinal","includes","onerror","start","onend","detectFace","readyState","detections","detectAllFaces","TinyFaceDetectorOptions","isFacePresent","stop","close","interval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","screenshotFormat","videoConstraints","facingMode","width","height","round","style","floor","dir","_c","totalMagnitude","magnitude","product","value","sqrt","crossings","maxLag","minLag","bestLag","bestCorrelation","lag","correlation","binSize","curr","next","push","lowFreq","highFreq","startBin","endBin","ceil","speechFrames","segmentLength","pitches","segment","slice","variation","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/continous-authentication1/continous-authentication1/continous-authentication/continous-authentication/src/ContinuousAuth.js"],"sourcesContent":["// import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n// import * as faceapi from \"face-api.js\";\r\n// import Webcam from \"react-webcam\";\r\n// import axios from \"axios\";\r\n// import \"./ContinuousAuth.css\";\r\n\r\n// const ContinuousAuth = () => {\r\n//   const webcamRef = useRef(null);\r\n//   const [faceDetected, setFaceDetected] = useState(false);\r\n//   const [soundDetected, setSoundDetected] = useState(false);\r\n//   const [currentImage, setCurrentImage] = useState(null);\r\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n//   const [examTerminated, setExamTerminated] = useState(false);\r\n//   const [mediaStream, setMediaStream] = useState(null);\r\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     const loadModels = async () => {\r\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n//       console.log(\"Face Detection Model Loaded\");\r\n//     };\r\n//     loadModels();\r\n//   }, []);\r\n\r\n//   const getPermissions = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n//       setMediaStream(stream);\r\n//       setPermissionsGranted(true);\r\n//       setShowPermissionMessage(false);\r\n//       fetchIpAddress(); // Call to fetch IP address when permissions are granted\r\n//     } catch (error) {\r\n//       alert(\"Please allow access to camera and microphone.\");\r\n//       setShowPermissionMessage(true);\r\n//     }\r\n//   };\r\n\r\n//   const fetchIpAddress = async () => {\r\n//     try {\r\n//       const response = await fetch(\"https://api.ipify.org?format=json\");\r\n//       const data = await response.json();\r\n//       alert(`Your IP Address: ${data.ip}`);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching IP address:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (mediaStream) {\r\n//       const tracks = mediaStream.getTracks();\r\n//       tracks.forEach((track) => {\r\n//         track.enabled = true;\r\n//       });\r\n//     }\r\n//   }, [mediaStream]);\r\n\r\n//   const detectFace = async () => {\r\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n//       const video = webcamRef.current.video;\r\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n//       const isFacePresent = detections.length > 0;\r\n//       setFaceDetected(isFacePresent);\r\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       const interval = setInterval(detectFace, 1000);\r\n//       return () => clearInterval(interval);\r\n//     }\r\n//   }, [permissionsGranted]);\r\n\r\n//   useEffect(() => {\r\n//     if (noFaceDuration >= 15) {\r\n//       alert(\"‚ö†Ô∏è Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n//       setNoFaceDuration(0);\r\n//     }\r\n//   }, [noFaceDuration]);\r\n\r\n//   const detectSound = useCallback(() => {\r\n//     if (!mediaStream) return;\r\n\r\n//     const audioContext = new AudioContext();\r\n//     const analyser = audioContext.createAnalyser();\r\n//     const source = audioContext.createMediaStreamSource(mediaStream);\r\n//     source.connect(analyser);\r\n//     analyser.fftSize = 256;\r\n//     const bufferLength = analyser.frequencyBinCount;\r\n//     const dataArray = new Uint8Array(bufferLength);\r\n\r\n//     const checkSound = () => {\r\n//       analyser.getByteFrequencyData(dataArray);\r\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n//       setSoundDetected(volume > 10);\r\n//       requestAnimationFrame(checkSound);\r\n//     };\r\n//     checkSound();\r\n//   }, [mediaStream]);\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       detectSound();\r\n//     }\r\n//   }, [permissionsGranted, detectSound]);\r\n\r\n//   return (\r\n//     <div className=\"continuous-auth-container\">\r\n//       <h2>Continuous Authentication</h2>\r\n\r\n//       {showPermissionMessage && (\r\n//         <div className=\"permission-message\">\r\n//           <p>Please allow access to your camera and microphone to start the exam.</p>\r\n//           <button onClick={getPermissions}>Allow Camera and Microphone</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {permissionsGranted ? (\r\n//         <>\r\n//           <Webcam\r\n//             audio={true}\r\n//             ref={webcamRef}\r\n//             screenshotFormat=\"image/jpeg\"\r\n//             className=\"webcam\"\r\n//             videoConstraints={{\r\n//               facingMode: \"user\",\r\n//               width: 720,\r\n//               height: 400,\r\n//             }}\r\n//           />\r\n//           <p>Camera and microphone are active for proctoring.</p>\r\n\r\n//           <div className=\"status-buttons-container\">\r\n//             <div className=\"status-buttons\">\r\n//               <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n//                 {faceDetected ? \"Face Detected ‚úÖ\" : \"No Face Detected ‚ùå\"}\r\n//               </button>\r\n//               <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n//                 {soundDetected ? \"Sound Detected üîä\" : \"No Sound Detected üîá\"}\r\n//               </button>\r\n//             </div>\r\n\r\n//             <div className=\"captured-images\">\r\n//               {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\r\n//             </div>\r\n//           </div>\r\n//         </>\r\n//       ) : (\r\n//         <p>Waiting for camera and microphone access...</p>\r\n//       )}\r\n\r\n//       {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n// import * as faceapi from \"face-api.js\";\r\n// import Webcam from \"react-webcam\";\r\n// import \"./ContinuousAuth.css\";\r\n\r\n// const ContinuousAuth = () => {\r\n//   const webcamRef = useRef(null);\r\n//   const [faceDetected, setFaceDetected] = useState(false);\r\n//   const [soundDetected, setSoundDetected] = useState(false);\r\n//   const [currentImage, setCurrentImage] = useState(null);\r\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n//   const [examTerminated, setExamTerminated] = useState(false);\r\n//   const [mediaStream, setMediaStream] = useState(null);\r\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n//   const [transcript, setTranscript] = useState(\"\");\r\n//   const [violations, setViolations] = useState(0);\r\n//   const recognitionRef = useRef(null);\r\n\r\n//   // ŸÜÿ∏ÿßŸÖ ŸÉÿ¥ŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ© ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\r\n//   const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\r\n//   const audioContextRef = useRef(null);\r\n//   const analyserRef = useRef(null);\r\n//   const voiceProfileRef = useRef({\r\n//     baseline: null,\r\n//     lastAlert: 0,\r\n//     active: false\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const loadModels = async () => {\r\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n//       console.log(\"Face Detection Model Loaded\");\r\n//     };\r\n//     loadModels();\r\n//   }, []);\r\n\r\n//   const getPermissions = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n//       setMediaStream(stream);\r\n//       setPermissionsGranted(true);\r\n//       setShowPermissionMessage(false);\r\n//       initializeSpeechRecognition();\r\n//       setupVoiceAnalysis(stream);\r\n//     } catch (error) {\r\n//       alert(\"Please allow access to camera and microphone.\");\r\n//       setShowPermissionMessage(true);\r\n//     }\r\n//   };\r\n\r\n//   // ŸÜÿ∏ÿßŸÖ ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™ ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\r\n//   const setupVoiceAnalysis = (stream) => {\r\n//     try {\r\n//       audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n//       analyserRef.current = audioContextRef.current.createAnalyser();\r\n//       analyserRef.current.fftSize = 4096;\r\n      \r\n//       const source = audioContextRef.current.createMediaStreamSource(stream);\r\n//       source.connect(analyserRef.current);\r\n\r\n//       // ÿ•ŸÜÿ¥ÿßÿ° ÿ®ÿµŸÖÿ© ÿµŸàÿ™Ÿäÿ© ÿ£ŸàŸÑŸäÿ© ÿ®ÿπÿØ 3 ÿ´ŸàÿßŸÜŸä\r\n//       setTimeout(() => {\r\n//         voiceProfileRef.current.baseline = createVoiceProfile();\r\n//         voiceProfileRef.current.active = true;\r\n//       }, 3000);\r\n\r\n//       const analyzeVoice = () => {\r\n//         if (!voiceProfileRef.current.active) {\r\n//           requestAnimationFrame(analyzeVoice);\r\n//           return;\r\n//         }\r\n\r\n//         const currentProfile = createVoiceProfile();\r\n//         const isMultiple = compareVoiceProfiles(voiceProfileRef.current.baseline, currentProfile);\r\n        \r\n//         if (isMultiple && Date.now() - voiceProfileRef.current.lastAlert > 5000) {\r\n//           setMultipleVoicesDetected(true);\r\n//           voiceProfileRef.current.lastAlert = Date.now();\r\n//         } else {\r\n//           setMultipleVoicesDetected(false);\r\n//         }\r\n\r\n//         requestAnimationFrame(analyzeVoice);\r\n//       };\r\n\r\n//       analyzeVoice();\r\n//     } catch (error) {\r\n//       console.error(\"Voice analysis error:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const createVoiceProfile = () => {\r\n//     const bufferLength = analyserRef.current.frequencyBinCount;\r\n//     const dataArray = new Float32Array(bufferLength);\r\n//     analyserRef.current.getFloatFrequencyData(dataArray);\r\n\r\n//     const profile = {\r\n//       lowRange: 0,    // 85-300Hz\r\n//       midRange: 0,    // 300-1000Hz\r\n//       highRange: 0,   // 1000-4000Hz\r\n//       peakCount: 0,\r\n//       totalEnergy: 0\r\n//     };\r\n\r\n//     for (let i = 0; i < bufferLength; i++) {\r\n//       const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\r\n//       const value = Math.pow(10, dataArray[i]/20); // Convert dB to linear\r\n\r\n//       if (freq >= 85 && freq < 300) {\r\n//         profile.lowRange += value;\r\n//       } else if (freq >= 300 && freq < 1000) {\r\n//         profile.midRange += value;\r\n//       } else if (freq >= 1000 && freq < 4000) {\r\n//         profile.highRange += value;\r\n//       }\r\n\r\n//       if (dataArray[i] > -40) profile.peakCount++;\r\n//       profile.totalEnergy += value;\r\n//     }\r\n\r\n//     return profile;\r\n//   };\r\n\r\n//   const compareVoiceProfiles = (baseline, current) => {\r\n//     // ÿ≠ÿ≥ÿßÿ® ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ™ÿ∫Ÿäÿ± ŸÑŸÉŸÑ ŸÜÿ∑ÿßŸÇ ÿ™ÿ±ÿØÿØŸä\r\n//     const lowDiff = Math.abs(current.lowRange - baseline.lowRange) / baseline.lowRange;\r\n//     const midDiff = Math.abs(current.midRange - baseline.midRange) / baseline.midRange;\r\n//     const highDiff = Math.abs(current.highRange - baseline.highRange) / baseline.highRange;\r\n//     const energyDiff = Math.abs(current.totalEnergy - baseline.totalEnergy) / baseline.totalEnergy;\r\n//     const peakDiff = Math.abs(current.peakCount - baseline.peakCount);\r\n\r\n//     // ÿ¥ÿ±Ÿàÿ∑ ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ©\r\n//     return (\r\n//       (lowDiff > 0.6 || midDiff > 0.6 || highDiff > 0.6) &&\r\n//       energyDiff > 0.4 &&\r\n//       peakDiff > 15\r\n//     );\r\n//   };\r\n\r\n//   const initializeSpeechRecognition = () => {\r\n//     const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n//     if (!SpeechRecognition) {\r\n//       console.error(\"Speech Recognition API not supported in this browser\");\r\n//       return;\r\n//     }\r\n\r\n//     recognitionRef.current = new SpeechRecognition();\r\n//     recognitionRef.current.continuous = true;\r\n//     recognitionRef.current.interimResults = false;\r\n//     recognitionRef.current.lang = \"ar-SA\";\r\n\r\n//     recognitionRef.current.onresult = (event) => {\r\n//       const last = event.results.length - 1;\r\n//       const text = event.results[last][0].transcript;\r\n//       setTranscript(text);\r\n//     };\r\n\r\n//     recognitionRef.current.onerror = (event) => {\r\n//       console.error(\"Speech recognition error\", event.error);\r\n//     };\r\n\r\n//     recognitionRef.current.start();\r\n//     recognitionRef.current.onend = () => {\r\n//       recognitionRef.current.start();\r\n//     };\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (mediaStream) {\r\n//       const tracks = mediaStream.getTracks();\r\n//       tracks.forEach((track) => {\r\n//         track.enabled = true;\r\n//       });\r\n//     }\r\n\r\n//     return () => {\r\n//       if (recognitionRef.current) {\r\n//         recognitionRef.current.stop();\r\n//       }\r\n//       if (audioContextRef.current) {\r\n//         audioContextRef.current.close();\r\n//       }\r\n//     };\r\n//   }, [mediaStream]);\r\n\r\n//   const detectFace = async () => {\r\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n//       const video = webcamRef.current.video;\r\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n//       const isFacePresent = detections.length > 0;\r\n//       setFaceDetected(isFacePresent);\r\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       const interval = setInterval(detectFace, 1000);\r\n//       return () => clearInterval(interval);\r\n//     }\r\n//   }, [permissionsGranted]);\r\n\r\n//   useEffect(() => {\r\n//     if (noFaceDuration >= 15) {\r\n//       alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n//       setNoFaceDuration(0);\r\n//     }\r\n//   }, [noFaceDuration]);\r\n\r\n//   const detectSound = useCallback(() => {\r\n//     if (!mediaStream) return;\r\n\r\n//     const audioContext = new AudioContext();\r\n//     const analyser = audioContext.createAnalyser();\r\n//     const source = audioContext.createMediaStreamSource(mediaStream);\r\n//     source.connect(analyser);\r\n//     analyser.fftSize = 256;\r\n//     const bufferLength = analyser.frequencyBinCount;\r\n//     const dataArray = new Uint8Array(bufferLength);\r\n\r\n//     const checkSound = () => {\r\n//       analyser.getByteFrequencyData(dataArray);\r\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n//       setSoundDetected(volume > 10);\r\n//       requestAnimationFrame(checkSound);\r\n//     };\r\n//     checkSound();\r\n//   }, [mediaStream]);\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       detectSound();\r\n//     }\r\n//   }, [permissionsGranted, detectSound]);\r\n\r\n//   useEffect(() => {\r\n//     if (multipleVoicesDetected) {\r\n//       const newViolations = violations + 1;\r\n//       setViolations(newViolations);\r\n      \r\n//       alert(`üö® MULTIPLE VOICES DETECTED! (Violation ${newViolations}/3)`);\r\n      \r\n//       if (newViolations >= 3) {\r\n//         setExamTerminated(true);\r\n//       }\r\n//     }\r\n//   }, [multipleVoicesDetected]);\r\n\r\n//   return (\r\n//     <div className=\"continuous-auth-container\">\r\n//       <h2>Exam Proctoring System</h2>\r\n\r\n//       {showPermissionMessage && (\r\n//         <div className=\"permission-message\">\r\n//           <h3>Exam Proctoring Setup</h3>\r\n//           <p>This exam requires camera and microphone access for proctoring purposes.</p>\r\n//           <div className=\"permission-requirements\">\r\n//             <p>‚úì Face detection must be enabled</p>\r\n//             <p>‚úì Microphone must be active</p>\r\n//           </div>\r\n//           <button className=\"permission-button\" onClick={getPermissions}>\r\n//             Enable Camera & Microphone\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {permissionsGranted && !examTerminated && (\r\n//         <div className=\"monitoring-container\">\r\n//           <div className=\"video-section\">\r\n//             <Webcam\r\n//               audio={true}\r\n//               ref={webcamRef}\r\n//               screenshotFormat=\"image/jpeg\"\r\n//               className=\"webcam\"\r\n//               videoConstraints={{\r\n//                 facingMode: \"user\",\r\n//                 width: 480,\r\n//                 height: 360,\r\n//               }}\r\n//             />\r\n//             <div className=\"status-indicators\">\r\n//               <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\r\n//                 {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\r\n//               </div>\r\n//               <div className={`status-indicator ${soundDetected ? \"active\" : \"\"}`}>\r\n//                 {soundDetected ? \"Sound Detected\" : \"No Sound Detected\"}\r\n//               </div>\r\n//               {multipleVoicesDetected && (\r\n//                 <div className=\"status-indicator warning\">\r\n//                   Multiple Voices Detected!\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"transcript-section\">\r\n//             <div className=\"transcript-box\">\r\n//               <div className=\"transcript-header\">\r\n//                 <span>Arabic Speech Transcript</span>\r\n//                 <span className=\"violation-counter\">Violations: {violations}/3</span>\r\n//               </div>\r\n//               <div className=\"transcript-content\" dir=\"rtl\">\r\n//                 {transcript || \"Waiting for audio input...\"}\r\n//               </div>\r\n//               <div className={`voice-detection-status ${multipleVoicesDetected ? \"multiple\" : \"\"}`}>\r\n//                 {multipleVoicesDetected \r\n//                   ? \"Multiple voices detected!\" \r\n//                   : \"Voice analysis active\"}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {examTerminated && (\r\n//         <div className=\"termination-message\">\r\n//           <h3>‚úñ Exam Terminated</h3>\r\n//           <p>Due to multiple violations detected. Please contact your instructor.</p>\r\n//           <p>Total violations: {violations}</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////////////////// \r\n\r\n\r\n\r\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./ContinuousAuth.css\";\r\n\r\nconst ContinuousAuth = () => {\r\n  const webcamRef = useRef(null);\r\n  const [faceDetected, setFaceDetected] = useState(false);\r\n  const [currentImage, setCurrentImage] = useState(null);\r\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n  const [examTerminated, setExamTerminated] = useState(false);\r\n  const [mediaStream, setMediaStream] = useState(null);\r\n  const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n  const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n  const [transcript, setTranscript] = useState(\"\");\r\n  const [violations, setViolations] = useState(0);\r\n  const recognitionRef = useRef(null);\r\n\r\n  // Enhanced Audio Monitoring State\r\n  const [audioAnalysis, setAudioAnalysis] = useState({\r\n    volumeLevel: 0,\r\n    voiceConsistency: 100,\r\n    backgroundNoiseLevel: 0,\r\n    audioAnomalies: 0,\r\n    speakingRate: 0,\r\n    pitchVariation: 0,\r\n    lastVoicePrint: null,\r\n    audioContextReady: false,\r\n  });\r\n\r\n  const audioContextRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const voicePrintIntervalRef = useRef(null);\r\n  const audioCheckIntervalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n      console.log(\"Face Detection Model Loaded\");\r\n    };\r\n    loadModels();\r\n  }, []);\r\n\r\n  const getPermissions = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: {\r\n          echoCancellation: false,\r\n          noiseSuppression: false,\r\n          autoGainControl: false,\r\n        },\r\n      });\r\n      setMediaStream(stream);\r\n      setPermissionsGranted(true);\r\n      setShowPermissionMessage(false);\r\n      initializeAudioAnalysis(stream);\r\n      initializeSpeechRecognition();\r\n    } catch (error) {\r\n      alert(\"Please allow access to camera and microphone.\");\r\n      setShowPermissionMessage(true);\r\n    }\r\n  };\r\n\r\n  // Advanced Audio Analysis Initialization\r\n  const initializeAudioAnalysis = (stream) => {\r\n    try {\r\n      // Create audio context\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)({\r\n        latencyHint: \"interactive\",\r\n        sampleRate: 44100,\r\n      });\r\n\r\n      // Create analyser node with higher precision\r\n      analyserRef.current = audioContextRef.current.createAnalyser();\r\n      analyserRef.current.fftSize = 8192;\r\n      analyserRef.current.smoothingTimeConstant = 0.8;\r\n\r\n      // Create media stream source\r\n      const source = audioContextRef.current.createMediaStreamSource(stream);\r\n      source.connect(analyserRef.current);\r\n\r\n      // Create script processor for detailed analysis\r\n      const processor = audioContextRef.current.createScriptProcessor(4096, 1, 1);\r\n      analyserRef.current.connect(processor);\r\n      processor.connect(audioContextRef.current.destination);\r\n\r\n      // Initialize voice print collection\r\n      startVoicePrintCollection();\r\n\r\n      // Start continuous audio monitoring\r\n      startAudioMonitoring();\r\n\r\n      setAudioAnalysis((prev) => ({\r\n        ...prev,\r\n        audioContextReady: true,\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Audio analysis initialization error:\", error);\r\n    }\r\n  };\r\n\r\n  // Voice Print Collection\r\n  const startVoicePrintCollection = () => {\r\n    const collectVoicePrint = () => {\r\n      if (!analyserRef.current) return;\r\n      const bufferLength = analyserRef.current.frequencyBinCount;\r\n      const frequencyData = new Float32Array(bufferLength);\r\n      const timeDomainData = new Float32Array(bufferLength);\r\n      analyserRef.current.getFloatFrequencyData(frequencyData);\r\n      analyserRef.current.getFloatTimeDomainData(timeDomainData);\r\n\r\n      // Calculate voice characteristics\r\n      const voicePrint = {\r\n        timestamp: Date.now(),\r\n        spectralCentroid: calculateSpectralCentroid(frequencyData),\r\n        spectralFlatness: calculateSpectralFlatness(frequencyData),\r\n        energy: calculateEnergy(timeDomainData),\r\n        zeroCrossingRate: calculateZeroCrossingRate(timeDomainData),\r\n        pitch: estimatePitch(timeDomainData, audioContextRef.current.sampleRate),\r\n        formants: estimateFormants(frequencyData, audioContextRef.current.sampleRate),\r\n      };\r\n\r\n      setAudioAnalysis((prev) => ({\r\n        ...prev,\r\n        lastVoicePrint: voicePrint,\r\n      }));\r\n    };\r\n\r\n    voicePrintIntervalRef.current = setInterval(collectVoicePrint, 2000);\r\n  };\r\n\r\n  // Continuous Audio Monitoring\r\n  const startAudioMonitoring = () => {\r\n    const monitorAudio = () => {\r\n      if (!analyserRef.current) return;\r\n      const bufferLength = analyserRef.current.frequencyBinCount;\r\n      const frequencyData = new Float32Array(bufferLength);\r\n      const timeDomainData = new Float32Array(bufferLength);\r\n      analyserRef.current.getFloatFrequencyData(frequencyData);\r\n      analyserRef.current.getFloatTimeDomainData(timeDomainData);\r\n\r\n      // Calculate current audio metrics\r\n      const currentVolume = calculateVolumeLevel(timeDomainData);\r\n      const currentNoise = calculateBackgroundNoise(frequencyData);\r\n      const currentAnomalies = detectAudioAnomalies(frequencyData);\r\n      const speakingRate = estimateSpeakingRate(timeDomainData);\r\n      const pitchVar = estimatePitchVariation(timeDomainData, audioContextRef.current.sampleRate);\r\n\r\n      // Calculate voice consistency if we have a previous voice print\r\n      let consistency = 100;\r\n      if (audioAnalysis.lastVoicePrint) {\r\n        consistency = calculateVoiceConsistency(\r\n          audioAnalysis.lastVoicePrint,\r\n          {\r\n            spectralCentroid: calculateSpectralCentroid(frequencyData),\r\n            spectralFlatness: calculateSpectralFlatness(frequencyData),\r\n            energy: calculateEnergy(timeDomainData),\r\n          }\r\n        );\r\n      }\r\n\r\n      setAudioAnalysis((prev) => ({\r\n        ...prev,\r\n        volumeLevel: currentVolume,\r\n        backgroundNoiseLevel: currentNoise,\r\n        audioAnomalies: prev.audioAnomalies + currentAnomalies,\r\n        voiceConsistency: consistency,\r\n        speakingRate: speakingRate,\r\n        pitchVariation: pitchVar,\r\n      }));\r\n\r\n      // Check for potential violations\r\n      checkForAudioViolations(currentVolume, currentNoise, consistency, speakingRate, pitchVar);\r\n    };\r\n\r\n    audioCheckIntervalRef.current = setInterval(monitorAudio, 500);\r\n  };\r\n\r\n  // Audio Analysis Helper Functions\r\n  const calculateVolumeLevel = (timeDomainData) => {\r\n    let sum = 0;\r\n    for (let i = 0; i < timeDomainData.length; i++) {\r\n      sum += Math.abs(timeDomainData[i]);\r\n    }\r\n    return sum / timeDomainData.length;\r\n  };\r\n\r\n  const calculateBackgroundNoise = (frequencyData) => {\r\n    let sum = 0;\r\n    let count = 0;\r\n    for (let i = 0; i < frequencyData.length; i++) {\r\n      const freq = (i * audioContextRef.current.sampleRate) / analyserRef.current.fftSize;\r\n      if (freq > 5000) {\r\n        sum += Math.pow(10, frequencyData[i] / 20); // Convert dB to linear\r\n        count++;\r\n      }\r\n    }\r\n    return count > 0 ? sum / count : 0;\r\n  };\r\n\r\n  const detectAudioAnomalies = (frequencyData) => {\r\n    let anomalies = 0;\r\n    const bands = [\r\n      { low: 85, high: 255 }, // Low male voice\r\n      { low: 255, high: 400 }, // Female voice fundamentals\r\n      { low: 400, high: 1000 }, // Voice harmonics\r\n      { low: 1000, high: 4000 }, // Consonants and sibilance\r\n    ];\r\n\r\n    bands.forEach((band) => {\r\n      const bandEnergy = calculateBandEnergy(frequencyData, band.low, band.high);\r\n      const threshold = audioAnalysis.lastVoicePrint\r\n        ? audioAnalysis.lastVoicePrint.energy * 1.8\r\n        : 0.1;\r\n      if (bandEnergy > threshold) {\r\n        anomalies++;\r\n      }\r\n    });\r\n\r\n    return anomalies;\r\n  };\r\n\r\n  const calculateVoiceConsistency = (baseline, current) => {\r\n    const centroidDiff = Math.abs(current.spectralCentroid - baseline.spectralCentroid) / baseline.spectralCentroid;\r\n    const flatnessDiff = Math.abs(current.spectralFlatness - baseline.spectralFlatness);\r\n    const energyDiff = Math.abs(current.energy - baseline.energy) / baseline.energy;\r\n\r\n    const score = 100 - (\r\n      (Math.min(centroidDiff, 0.5) * 40) +\r\n      (Math.min(flatnessDiff, 0.3) * 30) +\r\n      (Math.min(energyDiff, 1.0) * 30)\r\n    );\r\n\r\n    return Math.max(0, Math.min(100, score));\r\n  };\r\n\r\n  const checkForAudioViolations = (volume, noise, consistency, speakingRate, pitchVar) => {\r\n    const multipleSpeakersDetected =\r\n      consistency < 60 || // Voice characteristics changed significantly\r\n      (noise > 0.15 && volume > 0.2) || // High noise with high volume\r\n      speakingRate > 10 || // Unusually fast speech\r\n      pitchVar > 100; // Extreme pitch variations\r\n\r\n    if (multipleSpeakersDetected) {\r\n      setViolations((prev) => {\r\n        const newViolations = prev + 1;\r\n        if (newViolations >= 3) {\r\n          setExamTerminated(true);\r\n          clearInterval(voicePrintIntervalRef.current);\r\n          clearInterval(audioCheckIntervalRef.current);\r\n        } else if (newViolations % 1 === 0) {\r\n          alert(`Audio Anomaly Detected! (Violation ${newViolations}/3)\\nPlease ensure you're alone in a quiet environment.`);\r\n        }\r\n        return newViolations;\r\n      });\r\n    }\r\n  };\r\n\r\n  // Speech Recognition Initialization\r\n  const initializeSpeechRecognition = () => {\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if (!SpeechRecognition) {\r\n      console.error(\"Speech Recognition API not supported in this browser\");\r\n      return;\r\n    }\r\n\r\n    recognitionRef.current = new SpeechRecognition();\r\n    recognitionRef.current.continuous = true;\r\n    recognitionRef.current.interimResults = true;\r\n    recognitionRef.current.lang = \"ar-SA\";\r\n    recognitionRef.current.maxAlternatives = 3;\r\n\r\n    recognitionRef.current.onresult = (event) => {\r\n      let finalTranscript = \"\";\r\n      let interimTranscript = \"\";\r\n\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        const transcript = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal) {\r\n          finalTranscript += transcript + \" \";\r\n        } else {\r\n          interimTranscript += transcript;\r\n        }\r\n      }\r\n\r\n      setTranscript(finalTranscript || interimTranscript);\r\n\r\n      // Additional check for multiple speakers in transcript\r\n      if (finalTranscript.includes(\" Ÿà \") || finalTranscript.includes(\" ÿ´ŸÖ \")) {\r\n        setViolations((prev) => prev + 0.5); // Partial violation for conjunction words\r\n      }\r\n    };\r\n\r\n    recognitionRef.current.onerror = (event) => {\r\n      console.error(\"Speech recognition error\", event.error);\r\n    };\r\n\r\n    recognitionRef.current.start();\r\n    recognitionRef.current.onend = () => {\r\n      recognitionRef.current.start();\r\n    };\r\n  };\r\n\r\n  // Face Detection\r\n  const detectFace = async () => {\r\n    if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n      const video = webcamRef.current.video;\r\n      const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n      const isFacePresent = detections.length > 0;\r\n      setFaceDetected(isFacePresent);\r\n      setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n    }\r\n  };\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (recognitionRef.current) {\r\n        recognitionRef.current.stop();\r\n      }\r\n      if (voicePrintIntervalRef.current) {\r\n        clearInterval(voicePrintIntervalRef.current);\r\n      }\r\n      if (audioCheckIntervalRef.current) {\r\n        clearInterval(audioCheckIntervalRef.current);\r\n      }\r\n      if (audioContextRef.current) {\r\n        audioContextRef.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (permissionsGranted) {\r\n      const interval = setInterval(detectFace, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [permissionsGranted]);\r\n\r\n  useEffect(() => {\r\n    if (noFaceDuration >= 15) {\r\n      alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n      setNoFaceDuration(0);\r\n    }\r\n  }, [noFaceDuration]);\r\n\r\n  return (\r\n    <div className=\"continuous-auth-container\">\r\n      <h2>Advanced Exam Proctoring System</h2>\r\n      {showPermissionMessage && (\r\n        <div className=\"permission-message\">\r\n          <h3>Exam Proctoring Setup</h3>\r\n          <p>This exam requires camera and microphone access for proctoring purposes.</p>\r\n          <div className=\"permission-requirements\">\r\n            <p>‚úì Face detection must be enabled</p>\r\n            <p>‚úì Microphone must be active (raw audio preferred)</p>\r\n            <p>‚úì Quiet environment recommended</p>\r\n          </div>\r\n          <button className=\"permission-button\" onClick={getPermissions}>\r\n            Enable Camera & Microphone\r\n          </button>\r\n        </div>\r\n      )}\r\n      {permissionsGranted && !examTerminated && (\r\n        <div className=\"monitoring-container\">\r\n          <div className=\"video-section\">\r\n            <Webcam\r\n              audio={true}\r\n              ref={webcamRef}\r\n              screenshotFormat=\"image/jpeg\"\r\n              className=\"webcam\"\r\n              videoConstraints={{\r\n                facingMode: \"user\",\r\n                width: 480,\r\n                height: 360,\r\n              }}\r\n            />\r\n            <div className=\"status-indicators\">\r\n              <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\r\n                {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\r\n              </div>\r\n              <div className={`status-indicator ${audioAnalysis.volumeLevel > 0.1 ? \"active\" : \"\"}`}>\r\n                {audioAnalysis.volumeLevel > 0.1 ? \"Audio Active\" : \"Audio Silent\"}\r\n              </div>\r\n              <div className=\"status-indicator\">\r\n                Voice Consistency: {Math.round(audioAnalysis.voiceConsistency)}%\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"audio-analysis-section\">\r\n            <h3>Advanced Audio Monitoring</h3>\r\n            <div className=\"audio-metrics\">\r\n              <div className=\"metric\">\r\n                <span className=\"metric-label\">Volume Level:</span>\r\n                <div className=\"metric-bar-container\">\r\n                  <div\r\n                    className=\"metric-bar\"\r\n                    style={{ width: `${Math.min(100, audioAnalysis.volumeLevel * 500)}%` }}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n              <div className=\"metric\">\r\n                <span className=\"metric-label\">Background Noise:</span>\r\n                <div className=\"metric-bar-container\">\r\n                  <div\r\n                    className=\"metric-bar noise\"\r\n                    style={{ width: `${Math.min(100, audioAnalysis.backgroundNoiseLevel * 500)}%` }}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n              <div className=\"metric\">\r\n                <span className=\"metric-label\">Voice Consistency:</span>\r\n                <div className=\"metric-bar-container\">\r\n                  <div\r\n                    className=\"metric-bar consistency\"\r\n                    style={{ width: `${audioAnalysis.voiceConsistency}%` }}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n              <div className=\"metric\">\r\n                <span className=\"metric-label\">Audio Anomalies:</span>\r\n                <span className=\"metric-value\">{audioAnalysis.audioAnomalies}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"transcript-section\">\r\n            <div className=\"transcript-box\">\r\n              <div className=\"transcript-header\">\r\n                <span>Arabic Speech Transcript</span>\r\n                <span className=\"violation-counter\">Violations: {Math.floor(violations)}/3</span>\r\n              </div>\r\n              <div className=\"transcript-content\" dir=\"rtl\">\r\n                {transcript || \"Waiting for audio input...\"}\r\n              </div>\r\n              <div className=\"audio-warnings\">\r\n                {audioAnalysis.voiceConsistency < 70 && (\r\n                  <div className=\"warning-message\">\r\n                    ‚ö† Voice inconsistency detected. Please ensure you're the only speaker.\r\n                  </div>\r\n                )}\r\n                {audioAnalysis.backgroundNoiseLevel > 0.2 && (\r\n                  <div className=\"warning-message\">\r\n                    ‚ö† High background noise detected. Find a quieter environment.\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {examTerminated && (\r\n        <div className=\"termination-message\">\r\n          <h3>‚úñ Exam Terminated</h3>\r\n          <p>Due to multiple audio violations detected. Please contact your instructor.</p>\r\n          <div className=\"violation-details\">\r\n            <p>Total violations: {violations}</p>\r\n            <p>Final voice consistency: {Math.round(audioAnalysis.voiceConsistency)}%</p>\r\n            <p>Audio anomalies detected: {audioAnalysis.audioAnomalies}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Additional audio analysis helper functions\r\nfunction calculateSpectralCentroid(frequencyData) {\r\n  let sum = 0;\r\n  let totalMagnitude = 0;\r\n  for (let i = 0; i < frequencyData.length; i++) {\r\n    const magnitude = Math.pow(10, frequencyData[i] / 20);\r\n    sum += i * magnitude;\r\n    totalMagnitude += magnitude;\r\n  }\r\n  return totalMagnitude > 0 ? sum / totalMagnitude : 0;\r\n}\r\n\r\nfunction calculateSpectralFlatness(frequencyData) {\r\n  let product = 1;\r\n  let sum = 0;\r\n  const count = frequencyData.length;\r\n  for (let i = 0; i < count; i++) {\r\n    const value = Math.pow(10, frequencyData[i] / 20);\r\n    product *= value;\r\n    sum += value;\r\n  }\r\n  return sum > 0 ? product / Math.pow(sum / count, count) : 0;\r\n}\r\n\r\nfunction calculateEnergy(timeDomainData) {\r\n  let sum = 0;\r\n  for (let i = 0; i < timeDomainData.length; i++) {\r\n    sum += Math.pow(timeDomainData[i], 2);\r\n  }\r\n  return Math.sqrt(sum / timeDomainData.length);\r\n}\r\n\r\nfunction calculateZeroCrossingRate(timeDomainData) {\r\n  let crossings = 0;\r\n  for (let i = 1; i < timeDomainData.length; i++) {\r\n    if (timeDomainData[i] * timeDomainData[i - 1] < 0) {\r\n      crossings++;\r\n    }\r\n  }\r\n  return crossings / timeDomainData.length;\r\n}\r\n\r\nfunction estimatePitch(timeDomainData, sampleRate) {\r\n  const maxLag = Math.floor(sampleRate / 60); // Minimum pitch (60Hz)\r\n  const minLag = Math.floor(sampleRate / 400); // Maximum pitch (400Hz)\r\n  let bestLag = 0;\r\n  let bestCorrelation = -1;\r\n\r\n  for (let lag = minLag; lag <= maxLag; lag++) {\r\n    let correlation = 0;\r\n    for (let i = 0; i < timeDomainData.length - lag; i++) {\r\n      correlation += timeDomainData[i] * timeDomainData[i + lag];\r\n    }\r\n    if (correlation > bestCorrelation) {\r\n      bestCorrelation = correlation;\r\n      bestLag = lag;\r\n    }\r\n  }\r\n\r\n  return bestLag > 0 ? sampleRate / bestLag : 0;\r\n}\r\n\r\nfunction estimateFormants(frequencyData, sampleRate) {\r\n  const formants = [];\r\n  const binSize = sampleRate / frequencyData.length;\r\n\r\n  for (let i = 1; i < frequencyData.length - 1; i++) {\r\n    const prev = frequencyData[i - 1];\r\n    const curr = frequencyData[i];\r\n    const next = frequencyData[i + 1];\r\n\r\n    if (curr > prev && curr > next && curr > -50) {\r\n      formants.push(i * binSize);\r\n      if (formants.length >= 3) break; // Only need first few formants\r\n    }\r\n  }\r\n\r\n  return formants;\r\n}\r\n\r\nfunction calculateBandEnergy(frequencyData, lowFreq, highFreq) {\r\n  const binSize = audioContextRef.current.sampleRate / frequencyData.length;\r\n  const startBin = Math.floor(lowFreq / binSize);\r\n  const endBin = Math.ceil(highFreq / binSize);\r\n  let energy = 0;\r\n\r\n  for (let i = startBin; i <= endBin; i++) {\r\n    energy += Math.pow(10, frequencyData[i] / 20);\r\n  }\r\n\r\n  return energy / (endBin - startBin + 1);\r\n}\r\n\r\nfunction estimateSpeakingRate(timeDomainData) {\r\n  let speechFrames = 0;\r\n  const threshold = 0.05;\r\n\r\n  for (let i = 0; i < timeDomainData.length; i++) {\r\n    if (Math.abs(timeDomainData[i]) > threshold) {\r\n      speechFrames++;\r\n    }\r\n  }\r\n\r\n  return (speechFrames / timeDomainData.length) * 100;\r\n}\r\n\r\nfunction estimatePitchVariation(timeDomainData, sampleRate) {\r\n  const segmentLength = Math.floor(sampleRate / 100); // 10ms segments\r\n  const pitches = [];\r\n\r\n  for (let i = 0; i < timeDomainData.length - segmentLength; i += segmentLength) {\r\n    const segment = timeDomainData.slice(i, i + segmentLength);\r\n    const pitch = estimatePitch(segment, sampleRate);\r\n    if (pitch > 0) pitches.push(pitch);\r\n  }\r\n\r\n  if (pitches.length < 2) return 0;\r\n\r\n  let variation = 0;\r\n  for (let i = 1; i < pitches.length; i++) {\r\n    variation += Math.abs(pitches[i] - pitches[i - 1]);\r\n  }\r\n\r\n  return variation / (pitches.length - 1);\r\n}\r\n\r\nexport default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAYA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAO,KAAKC,OAAO,MAAM,aAAa;AACtC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}