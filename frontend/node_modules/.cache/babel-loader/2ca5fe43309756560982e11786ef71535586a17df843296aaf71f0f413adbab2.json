{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\continous-authentication1\\\\continous-authentication1\\\\continous-authentication\\\\continous-authentication\\\\src\\\\ContinuousAuth.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\n// import * as faceapi from \"face-api.js\";\n// import Webcam from \"react-webcam\";\n// import axios from \"axios\";\n// import \"./ContinuousAuth.css\";\n\n// const ContinuousAuth = () => {\n//   const webcamRef = useRef(null);\n//   const [faceDetected, setFaceDetected] = useState(false);\n//   const [soundDetected, setSoundDetected] = useState(false);\n//   const [currentImage, setCurrentImage] = useState(null);\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\n//   const [examTerminated, setExamTerminated] = useState(false);\n//   const [mediaStream, setMediaStream] = useState(null);\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\n\n//   useEffect(() => {\n//     const loadModels = async () => {\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n//       console.log(\"Face Detection Model Loaded\");\n//     };\n//     loadModels();\n//   }, []);\n\n//   const getPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n//       setMediaStream(stream);\n//       setPermissionsGranted(true);\n//       setShowPermissionMessage(false);\n//       fetchIpAddress(); // Call to fetch IP address when permissions are granted\n//     } catch (error) {\n//       alert(\"Please allow access to camera and microphone.\");\n//       setShowPermissionMessage(true);\n//     }\n//   };\n\n//   const fetchIpAddress = async () => {\n//     try {\n//       const response = await fetch(\"https://api.ipify.org?format=json\");\n//       const data = await response.json();\n//       alert(`Your IP Address: ${data.ip}`);\n//     } catch (error) {\n//       console.error(\"Error fetching IP address:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (mediaStream) {\n//       const tracks = mediaStream.getTracks();\n//       tracks.forEach((track) => {\n//         track.enabled = true;\n//       });\n//     }\n//   }, [mediaStream]);\n\n//   const detectFace = async () => {\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n//       const video = webcamRef.current.video;\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n//       const isFacePresent = detections.length > 0;\n//       setFaceDetected(isFacePresent);\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       const interval = setInterval(detectFace, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [permissionsGranted]);\n\n//   useEffect(() => {\n//     if (noFaceDuration >= 15) {\n//       alert(\"‚ö†Ô∏è Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n//       setNoFaceDuration(0);\n//     }\n//   }, [noFaceDuration]);\n\n//   const detectSound = useCallback(() => {\n//     if (!mediaStream) return;\n\n//     const audioContext = new AudioContext();\n//     const analyser = audioContext.createAnalyser();\n//     const source = audioContext.createMediaStreamSource(mediaStream);\n//     source.connect(analyser);\n//     analyser.fftSize = 256;\n//     const bufferLength = analyser.frequencyBinCount;\n//     const dataArray = new Uint8Array(bufferLength);\n\n//     const checkSound = () => {\n//       analyser.getByteFrequencyData(dataArray);\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n//       setSoundDetected(volume > 10);\n//       requestAnimationFrame(checkSound);\n//     };\n//     checkSound();\n//   }, [mediaStream]);\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       detectSound();\n//     }\n//   }, [permissionsGranted, detectSound]);\n\n//   return (\n//     <div className=\"continuous-auth-container\">\n//       <h2>Continuous Authentication</h2>\n\n//       {showPermissionMessage && (\n//         <div className=\"permission-message\">\n//           <p>Please allow access to your camera and microphone to start the exam.</p>\n//           <button onClick={getPermissions}>Allow Camera and Microphone</button>\n//         </div>\n//       )}\n\n//       {permissionsGranted ? (\n//         <>\n//           <Webcam\n//             audio={true}\n//             ref={webcamRef}\n//             screenshotFormat=\"image/jpeg\"\n//             className=\"webcam\"\n//             videoConstraints={{\n//               facingMode: \"user\",\n//               width: 720,\n//               height: 400,\n//             }}\n//           />\n//           <p>Camera and microphone are active for proctoring.</p>\n\n//           <div className=\"status-buttons-container\">\n//             <div className=\"status-buttons\">\n//               <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\n//                 {faceDetected ? \"Face Detected ‚úÖ\" : \"No Face Detected ‚ùå\"}\n//               </button>\n//               <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\n//                 {soundDetected ? \"Sound Detected üîä\" : \"No Sound Detected üîá\"}\n//               </button>\n//             </div>\n\n//             <div className=\"captured-images\">\n//               {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\n//             </div>\n//           </div>\n//         </>\n//       ) : (\n//         <p>Waiting for camera and microphone access...</p>\n//       )}\n\n//       {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\n//     </div>\n//   );\n// };\n\n// export default ContinuousAuth;\n\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\n// import * as faceapi from \"face-api.js\";\n// import Webcam from \"react-webcam\";\n// import \"./ContinuousAuth.css\";\n\n// const ContinuousAuth = () => {\n//   const webcamRef = useRef(null);\n//   const [faceDetected, setFaceDetected] = useState(false);\n//   const [soundDetected, setSoundDetected] = useState(false);\n//   const [currentImage, setCurrentImage] = useState(null);\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\n//   const [examTerminated, setExamTerminated] = useState(false);\n//   const [mediaStream, setMediaStream] = useState(null);\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\n//   const [transcript, setTranscript] = useState(\"\");\n//   const [violations, setViolations] = useState(0);\n//   const recognitionRef = useRef(null);\n\n//   // ŸÜÿ∏ÿßŸÖ ŸÉÿ¥ŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ© ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\n//   const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\n//   const audioContextRef = useRef(null);\n//   const analyserRef = useRef(null);\n//   const voiceProfileRef = useRef({\n//     baseline: null,\n//     lastAlert: 0,\n//     active: false\n//   });\n\n//   useEffect(() => {\n//     const loadModels = async () => {\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n//       console.log(\"Face Detection Model Loaded\");\n//     };\n//     loadModels();\n//   }, []);\n\n//   const getPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n//       setMediaStream(stream);\n//       setPermissionsGranted(true);\n//       setShowPermissionMessage(false);\n//       initializeSpeechRecognition();\n//       setupVoiceAnalysis(stream);\n//     } catch (error) {\n//       alert(\"Please allow access to camera and microphone.\");\n//       setShowPermissionMessage(true);\n//     }\n//   };\n\n//   // ŸÜÿ∏ÿßŸÖ ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™ ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\n//   const setupVoiceAnalysis = (stream) => {\n//     try {\n//       audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n//       analyserRef.current = audioContextRef.current.createAnalyser();\n//       analyserRef.current.fftSize = 4096;\n\n//       const source = audioContextRef.current.createMediaStreamSource(stream);\n//       source.connect(analyserRef.current);\n\n//       // ÿ•ŸÜÿ¥ÿßÿ° ÿ®ÿµŸÖÿ© ÿµŸàÿ™Ÿäÿ© ÿ£ŸàŸÑŸäÿ© ÿ®ÿπÿØ 3 ÿ´ŸàÿßŸÜŸä\n//       setTimeout(() => {\n//         voiceProfileRef.current.baseline = createVoiceProfile();\n//         voiceProfileRef.current.active = true;\n//       }, 3000);\n\n//       const analyzeVoice = () => {\n//         if (!voiceProfileRef.current.active) {\n//           requestAnimationFrame(analyzeVoice);\n//           return;\n//         }\n\n//         const currentProfile = createVoiceProfile();\n//         const isMultiple = compareVoiceProfiles(voiceProfileRef.current.baseline, currentProfile);\n\n//         if (isMultiple && Date.now() - voiceProfileRef.current.lastAlert > 5000) {\n//           setMultipleVoicesDetected(true);\n//           voiceProfileRef.current.lastAlert = Date.now();\n//         } else {\n//           setMultipleVoicesDetected(false);\n//         }\n\n//         requestAnimationFrame(analyzeVoice);\n//       };\n\n//       analyzeVoice();\n//     } catch (error) {\n//       console.error(\"Voice analysis error:\", error);\n//     }\n//   };\n\n//   const createVoiceProfile = () => {\n//     const bufferLength = analyserRef.current.frequencyBinCount;\n//     const dataArray = new Float32Array(bufferLength);\n//     analyserRef.current.getFloatFrequencyData(dataArray);\n\n//     const profile = {\n//       lowRange: 0,    // 85-300Hz\n//       midRange: 0,    // 300-1000Hz\n//       highRange: 0,   // 1000-4000Hz\n//       peakCount: 0,\n//       totalEnergy: 0\n//     };\n\n//     for (let i = 0; i < bufferLength; i++) {\n//       const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\n//       const value = Math.pow(10, dataArray[i]/20); // Convert dB to linear\n\n//       if (freq >= 85 && freq < 300) {\n//         profile.lowRange += value;\n//       } else if (freq >= 300 && freq < 1000) {\n//         profile.midRange += value;\n//       } else if (freq >= 1000 && freq < 4000) {\n//         profile.highRange += value;\n//       }\n\n//       if (dataArray[i] > -40) profile.peakCount++;\n//       profile.totalEnergy += value;\n//     }\n\n//     return profile;\n//   };\n\n//   const compareVoiceProfiles = (baseline, current) => {\n//     // ÿ≠ÿ≥ÿßÿ® ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ™ÿ∫Ÿäÿ± ŸÑŸÉŸÑ ŸÜÿ∑ÿßŸÇ ÿ™ÿ±ÿØÿØŸä\n//     const lowDiff = Math.abs(current.lowRange - baseline.lowRange) / baseline.lowRange;\n//     const midDiff = Math.abs(current.midRange - baseline.midRange) / baseline.midRange;\n//     const highDiff = Math.abs(current.highRange - baseline.highRange) / baseline.highRange;\n//     const energyDiff = Math.abs(current.totalEnergy - baseline.totalEnergy) / baseline.totalEnergy;\n//     const peakDiff = Math.abs(current.peakCount - baseline.peakCount);\n\n//     // ÿ¥ÿ±Ÿàÿ∑ ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ©\n//     return (\n//       (lowDiff > 0.6 || midDiff > 0.6 || highDiff > 0.6) &&\n//       energyDiff > 0.4 &&\n//       peakDiff > 15\n//     );\n//   };\n\n//   const initializeSpeechRecognition = () => {\n//     const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n//     if (!SpeechRecognition) {\n//       console.error(\"Speech Recognition API not supported in this browser\");\n//       return;\n//     }\n\n//     recognitionRef.current = new SpeechRecognition();\n//     recognitionRef.current.continuous = true;\n//     recognitionRef.current.interimResults = false;\n//     recognitionRef.current.lang = \"ar-SA\";\n\n//     recognitionRef.current.onresult = (event) => {\n//       const last = event.results.length - 1;\n//       const text = event.results[last][0].transcript;\n//       setTranscript(text);\n//     };\n\n//     recognitionRef.current.onerror = (event) => {\n//       console.error(\"Speech recognition error\", event.error);\n//     };\n\n//     recognitionRef.current.start();\n//     recognitionRef.current.onend = () => {\n//       recognitionRef.current.start();\n//     };\n//   };\n\n//   useEffect(() => {\n//     if (mediaStream) {\n//       const tracks = mediaStream.getTracks();\n//       tracks.forEach((track) => {\n//         track.enabled = true;\n//       });\n//     }\n\n//     return () => {\n//       if (recognitionRef.current) {\n//         recognitionRef.current.stop();\n//       }\n//       if (audioContextRef.current) {\n//         audioContextRef.current.close();\n//       }\n//     };\n//   }, [mediaStream]);\n\n//   const detectFace = async () => {\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n//       const video = webcamRef.current.video;\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n//       const isFacePresent = detections.length > 0;\n//       setFaceDetected(isFacePresent);\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       const interval = setInterval(detectFace, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [permissionsGranted]);\n\n//   useEffect(() => {\n//     if (noFaceDuration >= 15) {\n//       alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n//       setNoFaceDuration(0);\n//     }\n//   }, [noFaceDuration]);\n\n//   const detectSound = useCallback(() => {\n//     if (!mediaStream) return;\n\n//     const audioContext = new AudioContext();\n//     const analyser = audioContext.createAnalyser();\n//     const source = audioContext.createMediaStreamSource(mediaStream);\n//     source.connect(analyser);\n//     analyser.fftSize = 256;\n//     const bufferLength = analyser.frequencyBinCount;\n//     const dataArray = new Uint8Array(bufferLength);\n\n//     const checkSound = () => {\n//       analyser.getByteFrequencyData(dataArray);\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n//       setSoundDetected(volume > 10);\n//       requestAnimationFrame(checkSound);\n//     };\n//     checkSound();\n//   }, [mediaStream]);\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       detectSound();\n//     }\n//   }, [permissionsGranted, detectSound]);\n\n//   useEffect(() => {\n//     if (multipleVoicesDetected) {\n//       const newViolations = violations + 1;\n//       setViolations(newViolations);\n\n//       alert(`üö® MULTIPLE VOICES DETECTED! (Violation ${newViolations}/3)`);\n\n//       if (newViolations >= 3) {\n//         setExamTerminated(true);\n//       }\n//     }\n//   }, [multipleVoicesDetected]);\n\n//   return (\n//     <div className=\"continuous-auth-container\">\n//       <h2>Exam Proctoring System</h2>\n\n//       {showPermissionMessage && (\n//         <div className=\"permission-message\">\n//           <h3>Exam Proctoring Setup</h3>\n//           <p>This exam requires camera and microphone access for proctoring purposes.</p>\n//           <div className=\"permission-requirements\">\n//             <p>‚úì Face detection must be enabled</p>\n//             <p>‚úì Microphone must be active</p>\n//           </div>\n//           <button className=\"permission-button\" onClick={getPermissions}>\n//             Enable Camera & Microphone\n//           </button>\n//         </div>\n//       )}\n\n//       {permissionsGranted && !examTerminated && (\n//         <div className=\"monitoring-container\">\n//           <div className=\"video-section\">\n//             <Webcam\n//               audio={true}\n//               ref={webcamRef}\n//               screenshotFormat=\"image/jpeg\"\n//               className=\"webcam\"\n//               videoConstraints={{\n//                 facingMode: \"user\",\n//                 width: 480,\n//                 height: 360,\n//               }}\n//             />\n//             <div className=\"status-indicators\">\n//               <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\n//                 {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\n//               </div>\n//               <div className={`status-indicator ${soundDetected ? \"active\" : \"\"}`}>\n//                 {soundDetected ? \"Sound Detected\" : \"No Sound Detected\"}\n//               </div>\n//               {multipleVoicesDetected && (\n//                 <div className=\"status-indicator warning\">\n//                   Multiple Voices Detected!\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n\n//           <div className=\"transcript-section\">\n//             <div className=\"transcript-box\">\n//               <div className=\"transcript-header\">\n//                 <span>Arabic Speech Transcript</span>\n//                 <span className=\"violation-counter\">Violations: {violations}/3</span>\n//               </div>\n//               <div className=\"transcript-content\" dir=\"rtl\">\n//                 {transcript || \"Waiting for audio input...\"}\n//               </div>\n//               <div className={`voice-detection-status ${multipleVoicesDetected ? \"multiple\" : \"\"}`}>\n//                 {multipleVoicesDetected \n//                   ? \"Multiple voices detected!\" \n//                   : \"Voice analysis active\"}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {examTerminated && (\n//         <div className=\"termination-message\">\n//           <h3>‚úñ Exam Terminated</h3>\n//           <p>Due to multiple violations detected. Please contact your instructor.</p>\n//           <p>Total violations: {violations}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ContinuousAuth;\n\n//////////////////////////////////////////////////////////////////////////////////// \n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceDetection = () => {\n  _s();\n  const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\n  const [violations, setViolations] = useState(0);\n  const [isReady, setIsReady] = useState(false);\n  const [status, setStatus] = useState(\"ÿßŸÜÿ™ÿ∏ÿ± ÿ®ÿØÿ° ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ±\");\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const lastEnergyLevelRef = useRef(0);\n  const lastProfileRef = useRef(null);\n  const lastTimestampRef = useRef(0);\n  const streamRef = useRef(null);\n\n  // ÿ•ŸÜÿ¥ÿßÿ° ÿ®ÿµŸÖÿ© ÿµŸàÿ™Ÿäÿ©\n  const createVoiceProfile = () => {\n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    analyserRef.current.getFloatFrequencyData(dataArray);\n    const profile = {\n      lowRange: 0,\n      // 85-300Hz\n      midRange: 0,\n      // 300-1000Hz\n      highRange: 0,\n      // 1000-4000Hz\n      peakCount: 0,\n      totalEnergy: 0\n    };\n    for (let i = 0; i < bufferLength; i++) {\n      const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\n      const value = Math.pow(10, dataArray[i] / 20);\n      if (freq >= 85 && freq < 300) profile.lowRange += value;else if (freq >= 300 && freq < 1000) profile.midRange += value;else if (freq >= 1000 && freq < 4000) profile.highRange += value;\n      if (dataArray[i] > -40) profile.peakCount++;\n      profile.totalEnergy += value;\n    }\n    return profile;\n  };\n\n  // ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™\n  const analyzeVoice = useCallback(() => {\n    if (!analyserRef.current) return;\n    const currentProfile = createVoiceProfile();\n    const energyLevel = currentProfile.totalEnergy;\n    const energyDifference = Math.abs(energyLevel - lastEnergyLevelRef.current);\n    const timeDifference = Date.now() - lastTimestampRef.current;\n\n    // ÿ¥ÿ±Ÿàÿ∑ ÿßŸÑŸÉÿ¥ŸÅ ÿßŸÑŸÖÿ≠ÿ≥ŸÜÿ©\n    const isSuddenChange = energyDifference > 15 && timeDifference < 200;\n    const isConsistentChange = energyDifference > 8 && timeDifference < 500;\n    if (isSuddenChange || isConsistentChange) {\n      setMultipleVoicesDetected(true);\n      setStatus(\"ÿ™ŸÖ ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿµŸàÿ™ ÿ¨ÿØŸäÿØ!\");\n      lastEnergyLevelRef.current = energyLevel;\n      lastTimestampRef.current = Date.now();\n    } else {\n      setMultipleVoicesDetected(false);\n      setStatus(\"ÿ¨ÿßÿ±Ÿä ÿßŸÑŸÖÿ±ÿßŸÇÿ®ÿ©...\");\n    }\n    lastProfileRef.current = currentProfile;\n    requestAnimationFrame(analyzeVoice);\n  }, []);\n\n  // ÿ•ÿπÿØÿßÿØ ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™Ÿä\n  const setupVoiceAnalysis = useCallback(stream => {\n    try {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      analyserRef.current.fftSize = 4096;\n      const source = audioContextRef.current.createMediaStreamSource(stream);\n      source.connect(analyserRef.current);\n      setStatus(\"ÿ¨ÿßÿ±Ÿä ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™...\");\n      analyzeVoice();\n    } catch (error) {\n      console.error(\"Voice analysis error:\", error);\n      setStatus(\"ÿ≠ÿØÿ´ ÿÆÿ∑ÿ£ ŸÅŸä ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™\");\n    }\n  }, [analyzeVoice]);\n\n  // ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿßŸÑÿµŸàÿ™ ÿßŸÑÿ£ÿ≥ÿßÿ≥Ÿä\n  const detectSound = useCallback(stream => {\n    if (!stream) return;\n    const audioContext = new AudioContext();\n    const analyser = audioContext.createAnalyser();\n    const source = audioContext.createMediaStreamSource(stream);\n    source.connect(analyser);\n    analyser.fftSize = 2048;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const checkSound = () => {\n      analyser.getByteFrequencyData(dataArray);\n      const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n      if (volume > 25) {\n        console.log(\"üîä ÿµŸàÿ™ ÿ™ŸÖ ÿßŸÉÿ™ÿ¥ÿßŸÅŸá - ŸÖÿ≥ÿ™ŸàŸâ ÿßŸÑÿµŸàÿ™:\", volume.toFixed(2));\n      }\n      requestAnimationFrame(checkSound);\n    };\n    checkSound();\n  }, []);\n\n  // ÿ®ÿØÿ° ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ±\n  const startTest = async () => {\n    try {\n      setStatus(\"ÿ¨ÿßÿ±Ÿä ÿ∑ŸÑÿ® ÿ•ÿ∞ŸÜ ÿßŸÑŸÖŸäŸÉÿ±ŸàŸÅŸàŸÜ...\");\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      streamRef.current = stream;\n      setupVoiceAnalysis(stream);\n      detectSound(stream);\n      setIsReady(true);\n    } catch (error) {\n      console.error(\"Error getting media stream:\", error);\n      setStatus(\"ŸÅÿ¥ŸÑ ŸÅŸä ÿßŸÑŸàÿµŸàŸÑ ÿ•ŸÑŸâ ÿßŸÑŸÖŸäŸÉÿ±ŸàŸÅŸàŸÜ\");\n    }\n  };\n\n  // ÿßŸÑÿ™ŸàŸÇŸÅ ÿπŸÜ ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ±\n  const stopTest = () => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n    }\n    setIsReady(false);\n    setStatus(\"ÿ™ŸÖ ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ±\");\n  };\n\n  // ÿ™ÿ£ÿ´Ÿäÿ± ŸÑŸÑŸÉÿ¥ŸÅ ÿπŸÜ ÿßŸÑÿßŸÜÿ™ŸáÿßŸÉÿßÿ™\n  useEffect(() => {\n    if (multipleVoicesDetected) {\n      const newViolations = violations + 1;\n      setViolations(newViolations);\n      alert(`üö® ÿßŸÜÿ™ÿ®ÿßŸá! ÿ™ŸÖ ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿµŸàÿ™ ÿ•ÿ∂ÿßŸÅŸä (ÿßŸÜÿ™ŸáÿßŸÉ ${newViolations}/3)`);\n      if (newViolations >= 3) {\n        alert(\"‚úñ ÿ™ŸÖ ÿ•ŸÜŸáÿßÿ° ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ± ÿ®ÿ≥ÿ®ÿ® ÿßŸÉÿ™ÿ¥ÿßŸÅ 3 ÿßŸÜÿ™ŸáÿßŸÉÿßÿ™\");\n        stopTest();\n      }\n    }\n  }, [multipleVoicesDetected, violations]);\n\n  // ÿ™ŸÜÿ∏ŸäŸÅ ÿßŸÑŸÖŸàÿßÿ±ÿØ\n  useEffect(() => {\n    return () => {\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0646\\u0638\\u0627\\u0645 \\u0643\\u0634\\u0641 \\u0627\\u0644\\u0623\\u0635\\u0648\\u0627\\u062A \\u0627\\u0644\\u0645\\u062A\\u0639\\u062F\\u062F\\u0629\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0',\n        fontSize: '18px',\n        color: multipleVoicesDetected ? 'red' : 'green'\n      },\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0639\\u062F\\u062F \\u0627\\u0644\\u0627\\u0646\\u062A\\u0647\\u0627\\u0643\\u0627\\u062A: \", violations, \"/3\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 7\n    }, this), !isReady ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startTest,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px'\n      },\n      children: \"\\u0628\\u062F\\u0621 \\u0627\\u0644\\u0627\\u062E\\u062A\\u0628\\u0627\\u0631\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopTest,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        backgroundColor: '#f44336',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px'\n      },\n      children: \"\\u0625\\u064A\\u0642\\u0627\\u0641 \\u0627\\u0644\\u0627\\u062E\\u062A\\u0628\\u0627\\u0631\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '30px',\n        padding: '15px',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u062A\\u0639\\u0644\\u064A\\u0645\\u0627\\u062A \\u0627\\u0644\\u0627\\u0633\\u062A\\u062E\\u062F\\u0627\\u0645:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        style: {\n          textAlign: 'left',\n          marginLeft: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u0627\\u0636\\u063A\\u0637 \\u0639\\u0644\\u0649 \\\"\\u0628\\u062F\\u0621 \\u0627\\u0644\\u0627\\u062E\\u062A\\u0628\\u0627\\u0631\\\" \\u0644\\u0644\\u0633\\u0645\\u0627\\u062D \\u0628\\u0627\\u0633\\u062A\\u062E\\u062F\\u0627\\u0645 \\u0627\\u0644\\u0645\\u064A\\u0643\\u0631\\u0648\\u0641\\u0648\\u0646\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u062A\\u062D\\u062F\\u062B \\u0628\\u0634\\u0643\\u0644 \\u0637\\u0628\\u064A\\u0639\\u064A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u0633\\u064A\\u062A\\u0645 \\u0627\\u0643\\u062A\\u0634\\u0627\\u0641 \\u0623\\u064A \\u0623\\u0635\\u0648\\u0627\\u062A \\u0625\\u0636\\u0627\\u0641\\u064A\\u0629 \\u062A\\u0644\\u0642\\u0627\\u0626\\u064A\\u0627\\u064B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"3 \\u0627\\u0646\\u062A\\u0647\\u0627\\u0643\\u0627\\u062A \\u0633\\u062A\\u0624\\u062F\\u064A \\u0644\\u0625\\u0646\\u0647\\u0627\\u0621 \\u0627\\u0644\\u0627\\u062E\\u062A\\u0628\\u0627\\u0631\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 672,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceDetection, \"WFxR//uNqfyZvocewjLlCzYpGXA=\");\n_c = VoiceDetection;\nexport default VoiceDetection;\nvar _c;\n$RefreshReg$(_c, \"VoiceDetection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","VoiceDetection","_s","multipleVoicesDetected","setMultipleVoicesDetected","violations","setViolations","isReady","setIsReady","status","setStatus","audioContextRef","analyserRef","lastEnergyLevelRef","lastProfileRef","lastTimestampRef","streamRef","createVoiceProfile","bufferLength","current","frequencyBinCount","dataArray","Float32Array","getFloatFrequencyData","profile","lowRange","midRange","highRange","peakCount","totalEnergy","i","freq","sampleRate","fftSize","value","Math","pow","analyzeVoice","currentProfile","energyLevel","energyDifference","abs","timeDifference","Date","now","isSuddenChange","isConsistentChange","requestAnimationFrame","setupVoiceAnalysis","stream","window","AudioContext","webkitAudioContext","createAnalyser","source","createMediaStreamSource","connect","error","console","detectSound","audioContext","analyser","Uint8Array","checkSound","getByteFrequencyData","volume","reduce","sum","log","toFixed","startTest","navigator","mediaDevices","getUserMedia","audio","stopTest","getTracks","forEach","track","stop","newViolations","alert","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","margin","fontSize","color","onClick","backgroundColor","border","borderRadius","marginTop","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/continous-authentication1/continous-authentication1/continous-authentication/continous-authentication/src/ContinuousAuth.js"],"sourcesContent":["// import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n// import * as faceapi from \"face-api.js\";\r\n// import Webcam from \"react-webcam\";\r\n// import axios from \"axios\";\r\n// import \"./ContinuousAuth.css\";\r\n\r\n// const ContinuousAuth = () => {\r\n//   const webcamRef = useRef(null);\r\n//   const [faceDetected, setFaceDetected] = useState(false);\r\n//   const [soundDetected, setSoundDetected] = useState(false);\r\n//   const [currentImage, setCurrentImage] = useState(null);\r\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n//   const [examTerminated, setExamTerminated] = useState(false);\r\n//   const [mediaStream, setMediaStream] = useState(null);\r\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     const loadModels = async () => {\r\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n//       console.log(\"Face Detection Model Loaded\");\r\n//     };\r\n//     loadModels();\r\n//   }, []);\r\n\r\n//   const getPermissions = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n//       setMediaStream(stream);\r\n//       setPermissionsGranted(true);\r\n//       setShowPermissionMessage(false);\r\n//       fetchIpAddress(); // Call to fetch IP address when permissions are granted\r\n//     } catch (error) {\r\n//       alert(\"Please allow access to camera and microphone.\");\r\n//       setShowPermissionMessage(true);\r\n//     }\r\n//   };\r\n\r\n//   const fetchIpAddress = async () => {\r\n//     try {\r\n//       const response = await fetch(\"https://api.ipify.org?format=json\");\r\n//       const data = await response.json();\r\n//       alert(`Your IP Address: ${data.ip}`);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching IP address:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (mediaStream) {\r\n//       const tracks = mediaStream.getTracks();\r\n//       tracks.forEach((track) => {\r\n//         track.enabled = true;\r\n//       });\r\n//     }\r\n//   }, [mediaStream]);\r\n\r\n//   const detectFace = async () => {\r\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n//       const video = webcamRef.current.video;\r\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n//       const isFacePresent = detections.length > 0;\r\n//       setFaceDetected(isFacePresent);\r\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       const interval = setInterval(detectFace, 1000);\r\n//       return () => clearInterval(interval);\r\n//     }\r\n//   }, [permissionsGranted]);\r\n\r\n//   useEffect(() => {\r\n//     if (noFaceDuration >= 15) {\r\n//       alert(\"‚ö†Ô∏è Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n//       setNoFaceDuration(0);\r\n//     }\r\n//   }, [noFaceDuration]);\r\n\r\n//   const detectSound = useCallback(() => {\r\n//     if (!mediaStream) return;\r\n\r\n//     const audioContext = new AudioContext();\r\n//     const analyser = audioContext.createAnalyser();\r\n//     const source = audioContext.createMediaStreamSource(mediaStream);\r\n//     source.connect(analyser);\r\n//     analyser.fftSize = 256;\r\n//     const bufferLength = analyser.frequencyBinCount;\r\n//     const dataArray = new Uint8Array(bufferLength);\r\n\r\n//     const checkSound = () => {\r\n//       analyser.getByteFrequencyData(dataArray);\r\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n//       setSoundDetected(volume > 10);\r\n//       requestAnimationFrame(checkSound);\r\n//     };\r\n//     checkSound();\r\n//   }, [mediaStream]);\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       detectSound();\r\n//     }\r\n//   }, [permissionsGranted, detectSound]);\r\n\r\n//   return (\r\n//     <div className=\"continuous-auth-container\">\r\n//       <h2>Continuous Authentication</h2>\r\n\r\n//       {showPermissionMessage && (\r\n//         <div className=\"permission-message\">\r\n//           <p>Please allow access to your camera and microphone to start the exam.</p>\r\n//           <button onClick={getPermissions}>Allow Camera and Microphone</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {permissionsGranted ? (\r\n//         <>\r\n//           <Webcam\r\n//             audio={true}\r\n//             ref={webcamRef}\r\n//             screenshotFormat=\"image/jpeg\"\r\n//             className=\"webcam\"\r\n//             videoConstraints={{\r\n//               facingMode: \"user\",\r\n//               width: 720,\r\n//               height: 400,\r\n//             }}\r\n//           />\r\n//           <p>Camera and microphone are active for proctoring.</p>\r\n\r\n//           <div className=\"status-buttons-container\">\r\n//             <div className=\"status-buttons\">\r\n//               <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n//                 {faceDetected ? \"Face Detected ‚úÖ\" : \"No Face Detected ‚ùå\"}\r\n//               </button>\r\n//               <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n//                 {soundDetected ? \"Sound Detected üîä\" : \"No Sound Detected üîá\"}\r\n//               </button>\r\n//             </div>\r\n\r\n//             <div className=\"captured-images\">\r\n//               {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\r\n//             </div>\r\n//           </div>\r\n//         </>\r\n//       ) : (\r\n//         <p>Waiting for camera and microphone access...</p>\r\n//       )}\r\n\r\n//       {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n// import * as faceapi from \"face-api.js\";\r\n// import Webcam from \"react-webcam\";\r\n// import \"./ContinuousAuth.css\";\r\n\r\n// const ContinuousAuth = () => {\r\n//   const webcamRef = useRef(null);\r\n//   const [faceDetected, setFaceDetected] = useState(false);\r\n//   const [soundDetected, setSoundDetected] = useState(false);\r\n//   const [currentImage, setCurrentImage] = useState(null);\r\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n//   const [examTerminated, setExamTerminated] = useState(false);\r\n//   const [mediaStream, setMediaStream] = useState(null);\r\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n//   const [transcript, setTranscript] = useState(\"\");\r\n//   const [violations, setViolations] = useState(0);\r\n//   const recognitionRef = useRef(null);\r\n\r\n//   // ŸÜÿ∏ÿßŸÖ ŸÉÿ¥ŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ© ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\r\n//   const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\r\n//   const audioContextRef = useRef(null);\r\n//   const analyserRef = useRef(null);\r\n//   const voiceProfileRef = useRef({\r\n//     baseline: null,\r\n//     lastAlert: 0,\r\n//     active: false\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const loadModels = async () => {\r\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n//       console.log(\"Face Detection Model Loaded\");\r\n//     };\r\n//     loadModels();\r\n//   }, []);\r\n\r\n//   const getPermissions = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n//       setMediaStream(stream);\r\n//       setPermissionsGranted(true);\r\n//       setShowPermissionMessage(false);\r\n//       initializeSpeechRecognition();\r\n//       setupVoiceAnalysis(stream);\r\n//     } catch (error) {\r\n//       alert(\"Please allow access to camera and microphone.\");\r\n//       setShowPermissionMessage(true);\r\n//     }\r\n//   };\r\n\r\n//   // ŸÜÿ∏ÿßŸÖ ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™ ÿßŸÑŸÖÿ≠ÿ≥ŸÜ\r\n//   const setupVoiceAnalysis = (stream) => {\r\n//     try {\r\n//       audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n//       analyserRef.current = audioContextRef.current.createAnalyser();\r\n//       analyserRef.current.fftSize = 4096;\r\n      \r\n//       const source = audioContextRef.current.createMediaStreamSource(stream);\r\n//       source.connect(analyserRef.current);\r\n\r\n//       // ÿ•ŸÜÿ¥ÿßÿ° ÿ®ÿµŸÖÿ© ÿµŸàÿ™Ÿäÿ© ÿ£ŸàŸÑŸäÿ© ÿ®ÿπÿØ 3 ÿ´ŸàÿßŸÜŸä\r\n//       setTimeout(() => {\r\n//         voiceProfileRef.current.baseline = createVoiceProfile();\r\n//         voiceProfileRef.current.active = true;\r\n//       }, 3000);\r\n\r\n//       const analyzeVoice = () => {\r\n//         if (!voiceProfileRef.current.active) {\r\n//           requestAnimationFrame(analyzeVoice);\r\n//           return;\r\n//         }\r\n\r\n//         const currentProfile = createVoiceProfile();\r\n//         const isMultiple = compareVoiceProfiles(voiceProfileRef.current.baseline, currentProfile);\r\n        \r\n//         if (isMultiple && Date.now() - voiceProfileRef.current.lastAlert > 5000) {\r\n//           setMultipleVoicesDetected(true);\r\n//           voiceProfileRef.current.lastAlert = Date.now();\r\n//         } else {\r\n//           setMultipleVoicesDetected(false);\r\n//         }\r\n\r\n//         requestAnimationFrame(analyzeVoice);\r\n//       };\r\n\r\n//       analyzeVoice();\r\n//     } catch (error) {\r\n//       console.error(\"Voice analysis error:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const createVoiceProfile = () => {\r\n//     const bufferLength = analyserRef.current.frequencyBinCount;\r\n//     const dataArray = new Float32Array(bufferLength);\r\n//     analyserRef.current.getFloatFrequencyData(dataArray);\r\n\r\n//     const profile = {\r\n//       lowRange: 0,    // 85-300Hz\r\n//       midRange: 0,    // 300-1000Hz\r\n//       highRange: 0,   // 1000-4000Hz\r\n//       peakCount: 0,\r\n//       totalEnergy: 0\r\n//     };\r\n\r\n//     for (let i = 0; i < bufferLength; i++) {\r\n//       const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\r\n//       const value = Math.pow(10, dataArray[i]/20); // Convert dB to linear\r\n\r\n//       if (freq >= 85 && freq < 300) {\r\n//         profile.lowRange += value;\r\n//       } else if (freq >= 300 && freq < 1000) {\r\n//         profile.midRange += value;\r\n//       } else if (freq >= 1000 && freq < 4000) {\r\n//         profile.highRange += value;\r\n//       }\r\n\r\n//       if (dataArray[i] > -40) profile.peakCount++;\r\n//       profile.totalEnergy += value;\r\n//     }\r\n\r\n//     return profile;\r\n//   };\r\n\r\n//   const compareVoiceProfiles = (baseline, current) => {\r\n//     // ÿ≠ÿ≥ÿßÿ® ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ™ÿ∫Ÿäÿ± ŸÑŸÉŸÑ ŸÜÿ∑ÿßŸÇ ÿ™ÿ±ÿØÿØŸä\r\n//     const lowDiff = Math.abs(current.lowRange - baseline.lowRange) / baseline.lowRange;\r\n//     const midDiff = Math.abs(current.midRange - baseline.midRange) / baseline.midRange;\r\n//     const highDiff = Math.abs(current.highRange - baseline.highRange) / baseline.highRange;\r\n//     const energyDiff = Math.abs(current.totalEnergy - baseline.totalEnergy) / baseline.totalEnergy;\r\n//     const peakDiff = Math.abs(current.peakCount - baseline.peakCount);\r\n\r\n//     // ÿ¥ÿ±Ÿàÿ∑ ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ©\r\n//     return (\r\n//       (lowDiff > 0.6 || midDiff > 0.6 || highDiff > 0.6) &&\r\n//       energyDiff > 0.4 &&\r\n//       peakDiff > 15\r\n//     );\r\n//   };\r\n\r\n//   const initializeSpeechRecognition = () => {\r\n//     const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n//     if (!SpeechRecognition) {\r\n//       console.error(\"Speech Recognition API not supported in this browser\");\r\n//       return;\r\n//     }\r\n\r\n//     recognitionRef.current = new SpeechRecognition();\r\n//     recognitionRef.current.continuous = true;\r\n//     recognitionRef.current.interimResults = false;\r\n//     recognitionRef.current.lang = \"ar-SA\";\r\n\r\n//     recognitionRef.current.onresult = (event) => {\r\n//       const last = event.results.length - 1;\r\n//       const text = event.results[last][0].transcript;\r\n//       setTranscript(text);\r\n//     };\r\n\r\n//     recognitionRef.current.onerror = (event) => {\r\n//       console.error(\"Speech recognition error\", event.error);\r\n//     };\r\n\r\n//     recognitionRef.current.start();\r\n//     recognitionRef.current.onend = () => {\r\n//       recognitionRef.current.start();\r\n//     };\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (mediaStream) {\r\n//       const tracks = mediaStream.getTracks();\r\n//       tracks.forEach((track) => {\r\n//         track.enabled = true;\r\n//       });\r\n//     }\r\n\r\n//     return () => {\r\n//       if (recognitionRef.current) {\r\n//         recognitionRef.current.stop();\r\n//       }\r\n//       if (audioContextRef.current) {\r\n//         audioContextRef.current.close();\r\n//       }\r\n//     };\r\n//   }, [mediaStream]);\r\n\r\n//   const detectFace = async () => {\r\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n//       const video = webcamRef.current.video;\r\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n//       const isFacePresent = detections.length > 0;\r\n//       setFaceDetected(isFacePresent);\r\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       const interval = setInterval(detectFace, 1000);\r\n//       return () => clearInterval(interval);\r\n//     }\r\n//   }, [permissionsGranted]);\r\n\r\n//   useEffect(() => {\r\n//     if (noFaceDuration >= 15) {\r\n//       alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n//       setNoFaceDuration(0);\r\n//     }\r\n//   }, [noFaceDuration]);\r\n\r\n//   const detectSound = useCallback(() => {\r\n//     if (!mediaStream) return;\r\n\r\n//     const audioContext = new AudioContext();\r\n//     const analyser = audioContext.createAnalyser();\r\n//     const source = audioContext.createMediaStreamSource(mediaStream);\r\n//     source.connect(analyser);\r\n//     analyser.fftSize = 256;\r\n//     const bufferLength = analyser.frequencyBinCount;\r\n//     const dataArray = new Uint8Array(bufferLength);\r\n\r\n//     const checkSound = () => {\r\n//       analyser.getByteFrequencyData(dataArray);\r\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n//       setSoundDetected(volume > 10);\r\n//       requestAnimationFrame(checkSound);\r\n//     };\r\n//     checkSound();\r\n//   }, [mediaStream]);\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       detectSound();\r\n//     }\r\n//   }, [permissionsGranted, detectSound]);\r\n\r\n//   useEffect(() => {\r\n//     if (multipleVoicesDetected) {\r\n//       const newViolations = violations + 1;\r\n//       setViolations(newViolations);\r\n      \r\n//       alert(`üö® MULTIPLE VOICES DETECTED! (Violation ${newViolations}/3)`);\r\n      \r\n//       if (newViolations >= 3) {\r\n//         setExamTerminated(true);\r\n//       }\r\n//     }\r\n//   }, [multipleVoicesDetected]);\r\n\r\n//   return (\r\n//     <div className=\"continuous-auth-container\">\r\n//       <h2>Exam Proctoring System</h2>\r\n\r\n//       {showPermissionMessage && (\r\n//         <div className=\"permission-message\">\r\n//           <h3>Exam Proctoring Setup</h3>\r\n//           <p>This exam requires camera and microphone access for proctoring purposes.</p>\r\n//           <div className=\"permission-requirements\">\r\n//             <p>‚úì Face detection must be enabled</p>\r\n//             <p>‚úì Microphone must be active</p>\r\n//           </div>\r\n//           <button className=\"permission-button\" onClick={getPermissions}>\r\n//             Enable Camera & Microphone\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {permissionsGranted && !examTerminated && (\r\n//         <div className=\"monitoring-container\">\r\n//           <div className=\"video-section\">\r\n//             <Webcam\r\n//               audio={true}\r\n//               ref={webcamRef}\r\n//               screenshotFormat=\"image/jpeg\"\r\n//               className=\"webcam\"\r\n//               videoConstraints={{\r\n//                 facingMode: \"user\",\r\n//                 width: 480,\r\n//                 height: 360,\r\n//               }}\r\n//             />\r\n//             <div className=\"status-indicators\">\r\n//               <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\r\n//                 {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\r\n//               </div>\r\n//               <div className={`status-indicator ${soundDetected ? \"active\" : \"\"}`}>\r\n//                 {soundDetected ? \"Sound Detected\" : \"No Sound Detected\"}\r\n//               </div>\r\n//               {multipleVoicesDetected && (\r\n//                 <div className=\"status-indicator warning\">\r\n//                   Multiple Voices Detected!\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"transcript-section\">\r\n//             <div className=\"transcript-box\">\r\n//               <div className=\"transcript-header\">\r\n//                 <span>Arabic Speech Transcript</span>\r\n//                 <span className=\"violation-counter\">Violations: {violations}/3</span>\r\n//               </div>\r\n//               <div className=\"transcript-content\" dir=\"rtl\">\r\n//                 {transcript || \"Waiting for audio input...\"}\r\n//               </div>\r\n//               <div className={`voice-detection-status ${multipleVoicesDetected ? \"multiple\" : \"\"}`}>\r\n//                 {multipleVoicesDetected \r\n//                   ? \"Multiple voices detected!\" \r\n//                   : \"Voice analysis active\"}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {examTerminated && (\r\n//         <div className=\"termination-message\">\r\n//           <h3>‚úñ Exam Terminated</h3>\r\n//           <p>Due to multiple violations detected. Please contact your instructor.</p>\r\n//           <p>Total violations: {violations}</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////////////////// \r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n\r\nconst VoiceDetection = () => {\r\n  const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\r\n  const [violations, setViolations] = useState(0);\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [status, setStatus] = useState(\"ÿßŸÜÿ™ÿ∏ÿ± ÿ®ÿØÿ° ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ±\");\r\n  \r\n  const audioContextRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const lastEnergyLevelRef = useRef(0);\r\n  const lastProfileRef = useRef(null);\r\n  const lastTimestampRef = useRef(0);\r\n  const streamRef = useRef(null);\r\n\r\n  // ÿ•ŸÜÿ¥ÿßÿ° ÿ®ÿµŸÖÿ© ÿµŸàÿ™Ÿäÿ©\r\n  const createVoiceProfile = () => {\r\n    const bufferLength = analyserRef.current.frequencyBinCount;\r\n    const dataArray = new Float32Array(bufferLength);\r\n    analyserRef.current.getFloatFrequencyData(dataArray);\r\n\r\n    const profile = {\r\n      lowRange: 0,    // 85-300Hz\r\n      midRange: 0,    // 300-1000Hz\r\n      highRange: 0,   // 1000-4000Hz\r\n      peakCount: 0,\r\n      totalEnergy: 0\r\n    };\r\n\r\n    for (let i = 0; i < bufferLength; i++) {\r\n      const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\r\n      const value = Math.pow(10, dataArray[i] / 20);\r\n\r\n      if (freq >= 85 && freq < 300) profile.lowRange += value;\r\n      else if (freq >= 300 && freq < 1000) profile.midRange += value;\r\n      else if (freq >= 1000 && freq < 4000) profile.highRange += value;\r\n\r\n      if (dataArray[i] > -40) profile.peakCount++;\r\n      profile.totalEnergy += value;\r\n    }\r\n\r\n    return profile;\r\n  };\r\n\r\n  // ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™\r\n  const analyzeVoice = useCallback(() => {\r\n    if (!analyserRef.current) return;\r\n\r\n    const currentProfile = createVoiceProfile();\r\n    const energyLevel = currentProfile.totalEnergy;\r\n    const energyDifference = Math.abs(energyLevel - lastEnergyLevelRef.current);\r\n    const timeDifference = Date.now() - lastTimestampRef.current;\r\n\r\n    // ÿ¥ÿ±Ÿàÿ∑ ÿßŸÑŸÉÿ¥ŸÅ ÿßŸÑŸÖÿ≠ÿ≥ŸÜÿ©\r\n    const isSuddenChange = energyDifference > 15 && timeDifference < 200;\r\n    const isConsistentChange = energyDifference > 8 && timeDifference < 500;\r\n    \r\n    if (isSuddenChange || isConsistentChange) {\r\n      setMultipleVoicesDetected(true);\r\n      setStatus(\"ÿ™ŸÖ ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿµŸàÿ™ ÿ¨ÿØŸäÿØ!\");\r\n      lastEnergyLevelRef.current = energyLevel;\r\n      lastTimestampRef.current = Date.now();\r\n    } else {\r\n      setMultipleVoicesDetected(false);\r\n      setStatus(\"ÿ¨ÿßÿ±Ÿä ÿßŸÑŸÖÿ±ÿßŸÇÿ®ÿ©...\");\r\n    }\r\n\r\n    lastProfileRef.current = currentProfile;\r\n    requestAnimationFrame(analyzeVoice);\r\n  }, []);\r\n\r\n  // ÿ•ÿπÿØÿßÿØ ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™Ÿä\r\n  const setupVoiceAnalysis = useCallback((stream) => {\r\n    try {\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      analyserRef.current = audioContextRef.current.createAnalyser();\r\n      analyserRef.current.fftSize = 4096;\r\n      \r\n      const source = audioContextRef.current.createMediaStreamSource(stream);\r\n      source.connect(analyserRef.current);\r\n      \r\n      setStatus(\"ÿ¨ÿßÿ±Ÿä ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™...\");\r\n      analyzeVoice();\r\n    } catch (error) {\r\n      console.error(\"Voice analysis error:\", error);\r\n      setStatus(\"ÿ≠ÿØÿ´ ÿÆÿ∑ÿ£ ŸÅŸä ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿµŸàÿ™\");\r\n    }\r\n  }, [analyzeVoice]);\r\n\r\n  // ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿßŸÑÿµŸàÿ™ ÿßŸÑÿ£ÿ≥ÿßÿ≥Ÿä\r\n  const detectSound = useCallback((stream) => {\r\n    if (!stream) return;\r\n\r\n    const audioContext = new AudioContext();\r\n    const analyser = audioContext.createAnalyser();\r\n    const source = audioContext.createMediaStreamSource(stream);\r\n    source.connect(analyser);\r\n    analyser.fftSize = 2048;\r\n    \r\n    const bufferLength = analyser.frequencyBinCount;\r\n    const dataArray = new Uint8Array(bufferLength);\r\n\r\n    const checkSound = () => {\r\n      analyser.getByteFrequencyData(dataArray);\r\n      const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n      \r\n      if (volume > 25) {\r\n        console.log(\"üîä ÿµŸàÿ™ ÿ™ŸÖ ÿßŸÉÿ™ÿ¥ÿßŸÅŸá - ŸÖÿ≥ÿ™ŸàŸâ ÿßŸÑÿµŸàÿ™:\", volume.toFixed(2));\r\n      }\r\n      \r\n      requestAnimationFrame(checkSound);\r\n    };\r\n    \r\n    checkSound();\r\n  }, []);\r\n\r\n  // ÿ®ÿØÿ° ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ±\r\n  const startTest = async () => {\r\n    try {\r\n      setStatus(\"ÿ¨ÿßÿ±Ÿä ÿ∑ŸÑÿ® ÿ•ÿ∞ŸÜ ÿßŸÑŸÖŸäŸÉÿ±ŸàŸÅŸàŸÜ...\");\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      streamRef.current = stream;\r\n      \r\n      setupVoiceAnalysis(stream);\r\n      detectSound(stream);\r\n      setIsReady(true);\r\n    } catch (error) {\r\n      console.error(\"Error getting media stream:\", error);\r\n      setStatus(\"ŸÅÿ¥ŸÑ ŸÅŸä ÿßŸÑŸàÿµŸàŸÑ ÿ•ŸÑŸâ ÿßŸÑŸÖŸäŸÉÿ±ŸàŸÅŸàŸÜ\");\r\n    }\r\n  };\r\n\r\n  // ÿßŸÑÿ™ŸàŸÇŸÅ ÿπŸÜ ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ±\r\n  const stopTest = () => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getTracks().forEach(track => track.stop());\r\n    }\r\n    setIsReady(false);\r\n    setStatus(\"ÿ™ŸÖ ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ±\");\r\n  };\r\n\r\n  // ÿ™ÿ£ÿ´Ÿäÿ± ŸÑŸÑŸÉÿ¥ŸÅ ÿπŸÜ ÿßŸÑÿßŸÜÿ™ŸáÿßŸÉÿßÿ™\r\n  useEffect(() => {\r\n    if (multipleVoicesDetected) {\r\n      const newViolations = violations + 1;\r\n      setViolations(newViolations);\r\n\r\n      alert(`üö® ÿßŸÜÿ™ÿ®ÿßŸá! ÿ™ŸÖ ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿµŸàÿ™ ÿ•ÿ∂ÿßŸÅŸä (ÿßŸÜÿ™ŸáÿßŸÉ ${newViolations}/3)`);\r\n\r\n      if (newViolations >= 3) {\r\n        alert(\"‚úñ ÿ™ŸÖ ÿ•ŸÜŸáÿßÿ° ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ± ÿ®ÿ≥ÿ®ÿ® ÿßŸÉÿ™ÿ¥ÿßŸÅ 3 ÿßŸÜÿ™ŸáÿßŸÉÿßÿ™\");\r\n        stopTest();\r\n      }\r\n    }\r\n  }, [multipleVoicesDetected, violations]);\r\n\r\n  // ÿ™ŸÜÿ∏ŸäŸÅ ÿßŸÑŸÖŸàÿßÿ±ÿØ\r\n  useEffect(() => {\r\n    return () => {\r\n      if (streamRef.current) {\r\n        streamRef.current.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px' }}>\r\n      <h2>ŸÜÿ∏ÿßŸÖ ŸÉÿ¥ŸÅ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑŸÖÿ™ÿπÿØÿØÿ©</h2>\r\n      \r\n      <div style={{ margin: '20px 0', fontSize: '18px', color: multipleVoicesDetected ? 'red' : 'green' }}>\r\n        {status}\r\n      </div>\r\n      \r\n      <div style={{ margin: '20px 0' }}>\r\n        <p>ÿπÿØÿØ ÿßŸÑÿßŸÜÿ™ŸáÿßŸÉÿßÿ™: {violations}/3</p>\r\n      </div>\r\n      \r\n      {!isReady ? (\r\n        <button \r\n          onClick={startTest}\r\n          style={{ padding: '10px 20px', fontSize: '16px', backgroundColor: '#4CAF50', color: 'white', border: 'none', borderRadius: '5px' }}\r\n        >\r\n          ÿ®ÿØÿ° ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ±\r\n        </button>\r\n      ) : (\r\n        <button \r\n          onClick={stopTest}\r\n          style={{ padding: '10px 20px', fontSize: '16px', backgroundColor: '#f44336', color: 'white', border: 'none', borderRadius: '5px' }}\r\n        >\r\n          ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ±\r\n        </button>\r\n      )}\r\n      \r\n      <div style={{ marginTop: '30px', padding: '15px', backgroundColor: '#f5f5f5', borderRadius: '5px' }}>\r\n        <h3>ÿ™ÿπŸÑŸäŸÖÿßÿ™ ÿßŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖ:</h3>\r\n        <ol style={{ textAlign: 'left', marginLeft: '20px' }}>\r\n          <li>ÿßÿ∂ÿ∫ÿ∑ ÿπŸÑŸâ \"ÿ®ÿØÿ° ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ±\" ŸÑŸÑÿ≥ŸÖÿßÿ≠ ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑŸÖŸäŸÉÿ±ŸàŸÅŸàŸÜ</li>\r\n          <li>ÿ™ÿ≠ÿØÿ´ ÿ®ÿ¥ŸÉŸÑ ÿ∑ÿ®ŸäÿπŸä</li>\r\n          <li>ÿ≥Ÿäÿ™ŸÖ ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿ£Ÿä ÿ£ÿµŸàÿßÿ™ ÿ•ÿ∂ÿßŸÅŸäÿ© ÿ™ŸÑŸÇÿßÿ¶ŸäÿßŸã</li>\r\n          <li>3 ÿßŸÜÿ™ŸáÿßŸÉÿßÿ™ ÿ≥ÿ™ÿ§ÿØŸä ŸÑÿ•ŸÜŸáÿßÿ° ÿßŸÑÿßÿÆÿ™ÿ®ÿßÿ±</li>\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceDetection;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingsxE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,oBAAoB,CAAC;EAE1D,MAAMgB,eAAe,GAAGd,MAAM,CAAC,IAAI,CAAC;EACpC,MAAMe,WAAW,GAAGf,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMgB,kBAAkB,GAAGhB,MAAM,CAAC,CAAC,CAAC;EACpC,MAAMiB,cAAc,GAAGjB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMkB,gBAAgB,GAAGlB,MAAM,CAAC,CAAC,CAAC;EAClC,MAAMmB,SAAS,GAAGnB,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACA,MAAMoB,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,YAAY,GAAGN,WAAW,CAACO,OAAO,CAACC,iBAAiB;IAC1D,MAAMC,SAAS,GAAG,IAAIC,YAAY,CAACJ,YAAY,CAAC;IAChDN,WAAW,CAACO,OAAO,CAACI,qBAAqB,CAACF,SAAS,CAAC;IAEpD,MAAMG,OAAO,GAAG;MACdC,QAAQ,EAAE,CAAC;MAAK;MAChBC,QAAQ,EAAE,CAAC;MAAK;MAChBC,SAAS,EAAE,CAAC;MAAI;MAChBC,SAAS,EAAE,CAAC;MACZC,WAAW,EAAE;IACf,CAAC;IAED,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,YAAY,EAAEY,CAAC,EAAE,EAAE;MACrC,MAAMC,IAAI,GAAGD,CAAC,GAAGnB,eAAe,CAACQ,OAAO,CAACa,UAAU,GAAGpB,WAAW,CAACO,OAAO,CAACc,OAAO;MACjF,MAAMC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEf,SAAS,CAACS,CAAC,CAAC,GAAG,EAAE,CAAC;MAE7C,IAAIC,IAAI,IAAI,EAAE,IAAIA,IAAI,GAAG,GAAG,EAAEP,OAAO,CAACC,QAAQ,IAAIS,KAAK,CAAC,KACnD,IAAIH,IAAI,IAAI,GAAG,IAAIA,IAAI,GAAG,IAAI,EAAEP,OAAO,CAACE,QAAQ,IAAIQ,KAAK,CAAC,KAC1D,IAAIH,IAAI,IAAI,IAAI,IAAIA,IAAI,GAAG,IAAI,EAAEP,OAAO,CAACG,SAAS,IAAIO,KAAK;MAEhE,IAAIb,SAAS,CAACS,CAAC,CAAC,GAAG,CAAC,EAAE,EAAEN,OAAO,CAACI,SAAS,EAAE;MAC3CJ,OAAO,CAACK,WAAW,IAAIK,KAAK;IAC9B;IAEA,OAAOV,OAAO;EAChB,CAAC;;EAED;EACA,MAAMa,YAAY,GAAGvC,WAAW,CAAC,MAAM;IACrC,IAAI,CAACc,WAAW,CAACO,OAAO,EAAE;IAE1B,MAAMmB,cAAc,GAAGrB,kBAAkB,CAAC,CAAC;IAC3C,MAAMsB,WAAW,GAAGD,cAAc,CAACT,WAAW;IAC9C,MAAMW,gBAAgB,GAAGL,IAAI,CAACM,GAAG,CAACF,WAAW,GAAG1B,kBAAkB,CAACM,OAAO,CAAC;IAC3E,MAAMuB,cAAc,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG7B,gBAAgB,CAACI,OAAO;;IAE5D;IACA,MAAM0B,cAAc,GAAGL,gBAAgB,GAAG,EAAE,IAAIE,cAAc,GAAG,GAAG;IACpE,MAAMI,kBAAkB,GAAGN,gBAAgB,GAAG,CAAC,IAAIE,cAAc,GAAG,GAAG;IAEvE,IAAIG,cAAc,IAAIC,kBAAkB,EAAE;MACxC1C,yBAAyB,CAAC,IAAI,CAAC;MAC/BM,SAAS,CAAC,qBAAqB,CAAC;MAChCG,kBAAkB,CAACM,OAAO,GAAGoB,WAAW;MACxCxB,gBAAgB,CAACI,OAAO,GAAGwB,IAAI,CAACC,GAAG,CAAC,CAAC;IACvC,CAAC,MAAM;MACLxC,yBAAyB,CAAC,KAAK,CAAC;MAChCM,SAAS,CAAC,kBAAkB,CAAC;IAC/B;IAEAI,cAAc,CAACK,OAAO,GAAGmB,cAAc;IACvCS,qBAAqB,CAACV,YAAY,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMW,kBAAkB,GAAGlD,WAAW,CAAEmD,MAAM,IAAK;IACjD,IAAI;MACFtC,eAAe,CAACQ,OAAO,GAAG,KAAK+B,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB,EAAE,CAAC;MAClFxC,WAAW,CAACO,OAAO,GAAGR,eAAe,CAACQ,OAAO,CAACkC,cAAc,CAAC,CAAC;MAC9DzC,WAAW,CAACO,OAAO,CAACc,OAAO,GAAG,IAAI;MAElC,MAAMqB,MAAM,GAAG3C,eAAe,CAACQ,OAAO,CAACoC,uBAAuB,CAACN,MAAM,CAAC;MACtEK,MAAM,CAACE,OAAO,CAAC5C,WAAW,CAACO,OAAO,CAAC;MAEnCT,SAAS,CAAC,qBAAqB,CAAC;MAChC2B,YAAY,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C/C,SAAS,CAAC,wBAAwB,CAAC;IACrC;EACF,CAAC,EAAE,CAAC2B,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMsB,WAAW,GAAG7D,WAAW,CAAEmD,MAAM,IAAK;IAC1C,IAAI,CAACA,MAAM,EAAE;IAEb,MAAMW,YAAY,GAAG,IAAIT,YAAY,CAAC,CAAC;IACvC,MAAMU,QAAQ,GAAGD,YAAY,CAACP,cAAc,CAAC,CAAC;IAC9C,MAAMC,MAAM,GAAGM,YAAY,CAACL,uBAAuB,CAACN,MAAM,CAAC;IAC3DK,MAAM,CAACE,OAAO,CAACK,QAAQ,CAAC;IACxBA,QAAQ,CAAC5B,OAAO,GAAG,IAAI;IAEvB,MAAMf,YAAY,GAAG2C,QAAQ,CAACzC,iBAAiB;IAC/C,MAAMC,SAAS,GAAG,IAAIyC,UAAU,CAAC5C,YAAY,CAAC;IAE9C,MAAM6C,UAAU,GAAGA,CAAA,KAAM;MACvBF,QAAQ,CAACG,oBAAoB,CAAC3C,SAAS,CAAC;MACxC,MAAM4C,MAAM,GAAG5C,SAAS,CAAC6C,MAAM,CAAC,CAACC,GAAG,EAAEjC,KAAK,KAAKiC,GAAG,GAAGjC,KAAK,EAAE,CAAC,CAAC,GAAGhB,YAAY;MAE9E,IAAI+C,MAAM,GAAG,EAAE,EAAE;QACfP,OAAO,CAACU,GAAG,CAAC,kCAAkC,EAAEH,MAAM,CAACI,OAAO,CAAC,CAAC,CAAC,CAAC;MACpE;MAEAtB,qBAAqB,CAACgB,UAAU,CAAC;IACnC,CAAC;IAEDA,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF5D,SAAS,CAAC,4BAA4B,CAAC;MACvC,MAAMuC,MAAM,GAAG,MAAMsB,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MACzE1D,SAAS,CAACG,OAAO,GAAG8B,MAAM;MAE1BD,kBAAkB,CAACC,MAAM,CAAC;MAC1BU,WAAW,CAACV,MAAM,CAAC;MACnBzC,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOiD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD/C,SAAS,CAAC,8BAA8B,CAAC;IAC3C;EACF,CAAC;;EAED;EACA,MAAMiE,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAI3D,SAAS,CAACG,OAAO,EAAE;MACrBH,SAAS,CAACG,OAAO,CAACyD,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;IAC9D;IACAvE,UAAU,CAAC,KAAK,CAAC;IACjBE,SAAS,CAAC,mBAAmB,CAAC;EAChC,CAAC;;EAED;EACAd,SAAS,CAAC,MAAM;IACd,IAAIO,sBAAsB,EAAE;MAC1B,MAAM6E,aAAa,GAAG3E,UAAU,GAAG,CAAC;MACpCC,aAAa,CAAC0E,aAAa,CAAC;MAE5BC,KAAK,CAAC,0CAA0CD,aAAa,KAAK,CAAC;MAEnE,IAAIA,aAAa,IAAI,CAAC,EAAE;QACtBC,KAAK,CAAC,4CAA4C,CAAC;QACnDN,QAAQ,CAAC,CAAC;MACZ;IACF;EACF,CAAC,EAAE,CAACxE,sBAAsB,EAAEE,UAAU,CAAC,CAAC;;EAExC;EACAT,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAIoB,SAAS,CAACG,OAAO,EAAE;QACrBH,SAAS,CAACG,OAAO,CAACyD,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MAC9D;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE/E,OAAA;IAAKkF,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnDrF,OAAA;MAAAqF,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElCzF,OAAA;MAAKkF,KAAK,EAAE;QAAEQ,MAAM,EAAE,QAAQ;QAAEC,QAAQ,EAAE,MAAM;QAAEC,KAAK,EAAEzF,sBAAsB,GAAG,KAAK,GAAG;MAAQ,CAAE;MAAAkF,QAAA,EACjG5E;IAAM;MAAA6E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAENzF,OAAA;MAAKkF,KAAK,EAAE;QAAEQ,MAAM,EAAE;MAAS,CAAE;MAAAL,QAAA,eAC/BrF,OAAA;QAAAqF,QAAA,GAAG,mFAAgB,EAAChF,UAAU,EAAC,IAAE;MAAA;QAAAiF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EAEL,CAAClF,OAAO,gBACPP,OAAA;MACE6F,OAAO,EAAEvB,SAAU;MACnBY,KAAK,EAAE;QAAEE,OAAO,EAAE,WAAW;QAAEO,QAAQ,EAAE,MAAM;QAAEG,eAAe,EAAE,SAAS;QAAEF,KAAK,EAAE,OAAO;QAAEG,MAAM,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAM,CAAE;MAAAX,QAAA,EACpI;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAETzF,OAAA;MACE6F,OAAO,EAAElB,QAAS;MAClBO,KAAK,EAAE;QAAEE,OAAO,EAAE,WAAW;QAAEO,QAAQ,EAAE,MAAM;QAAEG,eAAe,EAAE,SAAS;QAAEF,KAAK,EAAE,OAAO;QAAEG,MAAM,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAM,CAAE;MAAAX,QAAA,EACpI;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT,eAEDzF,OAAA;MAAKkF,KAAK,EAAE;QAAEe,SAAS,EAAE,MAAM;QAAEb,OAAO,EAAE,MAAM;QAAEU,eAAe,EAAE,SAAS;QAAEE,YAAY,EAAE;MAAM,CAAE;MAAAX,QAAA,gBAClGrF,OAAA;QAAAqF,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BzF,OAAA;QAAIkF,KAAK,EAAE;UAAEC,SAAS,EAAE,MAAM;UAAEe,UAAU,EAAE;QAAO,CAAE;QAAAb,QAAA,gBACnDrF,OAAA;UAAAqF,QAAA,EAAI;QAAkD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3DzF,OAAA;UAAAqF,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBzF,OAAA;UAAAqF,QAAA,EAAI;QAAoC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7CzF,OAAA;UAAAqF,QAAA,EAAI;QAAgC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvF,EAAA,CA1MID,cAAc;AAAAkG,EAAA,GAAdlG,cAAc;AA4MpB,eAAeA,cAAc;AAAC,IAAAkG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}