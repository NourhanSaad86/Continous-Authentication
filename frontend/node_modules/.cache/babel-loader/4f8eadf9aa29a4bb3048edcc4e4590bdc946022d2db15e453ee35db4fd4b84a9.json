{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\continous-authentication1\\\\continous-authentication1\\\\continous-authentication\\\\continous-authentication\\\\src\\\\ContinuousAuth.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef, useCallback } from \"react\";\n// import * as faceapi from \"face-api.js\";\n// import Webcam from \"react-webcam\";\n// import axios from \"axios\";\n// import \"./ContinuousAuth.css\";\n\n// const ContinuousAuth = () => {\n//   const webcamRef = useRef(null);\n//   const [faceDetected, setFaceDetected] = useState(false);\n//   const [soundDetected, setSoundDetected] = useState(false);\n//   const [currentImage, setCurrentImage] = useState(null);\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\n//   const [examTerminated, setExamTerminated] = useState(false);\n//   const [mediaStream, setMediaStream] = useState(null);\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\n\n//   useEffect(() => {\n//     const loadModels = async () => {\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n//       console.log(\"Face Detection Model Loaded\");\n//     };\n//     loadModels();\n//   }, []);\n\n//   const getPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n//       setMediaStream(stream);\n//       setPermissionsGranted(true);\n//       setShowPermissionMessage(false);\n//       fetchIpAddress(); // Call to fetch IP address when permissions are granted\n//     } catch (error) {\n//       alert(\"Please allow access to camera and microphone.\");\n//       setShowPermissionMessage(true);\n//     }\n//   };\n\n//   const fetchIpAddress = async () => {\n//     try {\n//       const response = await fetch(\"https://api.ipify.org?format=json\");\n//       const data = await response.json();\n//       alert(`Your IP Address: ${data.ip}`);\n//     } catch (error) {\n//       console.error(\"Error fetching IP address:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (mediaStream) {\n//       const tracks = mediaStream.getTracks();\n//       tracks.forEach((track) => {\n//         track.enabled = true;\n//       });\n//     }\n//   }, [mediaStream]);\n\n//   const detectFace = async () => {\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n//       const video = webcamRef.current.video;\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n//       const isFacePresent = detections.length > 0;\n//       setFaceDetected(isFacePresent);\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       const interval = setInterval(detectFace, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [permissionsGranted]);\n\n//   useEffect(() => {\n//     if (noFaceDuration >= 15) {\n//       alert(\"‚ö†Ô∏è Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n//       setNoFaceDuration(0);\n//     }\n//   }, [noFaceDuration]);\n\n//   const detectSound = useCallback(() => {\n//     if (!mediaStream) return;\n\n//     const audioContext = new AudioContext();\n//     const analyser = audioContext.createAnalyser();\n//     const source = audioContext.createMediaStreamSource(mediaStream);\n//     source.connect(analyser);\n//     analyser.fftSize = 256;\n//     const bufferLength = analyser.frequencyBinCount;\n//     const dataArray = new Uint8Array(bufferLength);\n\n//     const checkSound = () => {\n//       analyser.getByteFrequencyData(dataArray);\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n//       setSoundDetected(volume > 10);\n//       requestAnimationFrame(checkSound);\n//     };\n//     checkSound();\n//   }, [mediaStream]);\n\n//   useEffect(() => {\n//     if (permissionsGranted) {\n//       detectSound();\n//     }\n//   }, [permissionsGranted, detectSound]);\n\n//   return (\n//     <div className=\"continuous-auth-container\">\n//       <h2>Continuous Authentication</h2>\n\n//       {showPermissionMessage && (\n//         <div className=\"permission-message\">\n//           <p>Please allow access to your camera and microphone to start the exam.</p>\n//           <button onClick={getPermissions}>Allow Camera and Microphone</button>\n//         </div>\n//       )}\n\n//       {permissionsGranted ? (\n//         <>\n//           <Webcam\n//             audio={true}\n//             ref={webcamRef}\n//             screenshotFormat=\"image/jpeg\"\n//             className=\"webcam\"\n//             videoConstraints={{\n//               facingMode: \"user\",\n//               width: 720,\n//               height: 400,\n//             }}\n//           />\n//           <p>Camera and microphone are active for proctoring.</p>\n\n//           <div className=\"status-buttons-container\">\n//             <div className=\"status-buttons\">\n//               <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\n//                 {faceDetected ? \"Face Detected ‚úÖ\" : \"No Face Detected ‚ùå\"}\n//               </button>\n//               <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\n//                 {soundDetected ? \"Sound Detected üîä\" : \"No Sound Detected üîá\"}\n//               </button>\n//             </div>\n\n//             <div className=\"captured-images\">\n//               {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\n//             </div>\n//           </div>\n//         </>\n//       ) : (\n//         <p>Waiting for camera and microphone access...</p>\n//       )}\n\n//       {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\n//     </div>\n//   );\n// };\n\n// export default ContinuousAuth;\n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport * as speechCommands from \"@tensorflow-models/speech-commands\";\nimport Webcam from \"react-webcam\";\nimport \"./ContinuousAuth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContinuousAuth = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const [faceDetected, setFaceDetected] = useState(false);\n  const [soundDetected, setSoundDetected] = useState(false);\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\n  const [examTerminated, setExamTerminated] = useState(false);\n  const [mediaStream, setMediaStream] = useState(null);\n  const [showPermissionMessage, setShowPermissionMessage] = useState(true);\n  const [noFaceDuration, setNoFaceDuration] = useState(0);\n  const [transcript, setTranscript] = useState(\"\");\n  const [violations, setViolations] = useState(0);\n  const recognitionRef = useRef(null);\n  const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const voiceProfileRef = useRef({\n    baseline: null,\n    lastAlert: 0,\n    active: false\n  });\n  useEffect(() => {\n    const loadModels = async () => {\n      await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\n      console.log(\"‚úÖ Face Detection Model Loaded\");\n    };\n    loadModels();\n  }, []);\n  const getPermissions = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      setMediaStream(stream);\n      setPermissionsGranted(true);\n      setShowPermissionMessage(false);\n      initializeSpeechRecognition();\n      setupVoiceAnalysis(stream);\n    } catch (error) {\n      alert(\"Please allow access to camera and microphone.\");\n      setShowPermissionMessage(true);\n    }\n  };\n\n  // ‚úÖ SpeechCommands Model for keyword detection\n  useEffect(() => {\n    if (permissionsGranted) {\n      setupSpeechCommandDetection();\n    }\n  }, [permissionsGranted]);\n  const setupSpeechCommandDetection = async () => {\n    const recognizer = speechCommands.create('BROWSER_FFT');\n    await recognizer.ensureModelLoaded();\n    recognizer.listen(result => {\n      const scores = result.scores;\n      const labels = recognizer.wordLabels();\n      const maxScoreIndex = scores.indexOf(Math.max(...scores));\n      const detectedWord = labels[maxScoreIndex];\n      console.log(`‚úÖ ŸÉŸÑŸÖÿ© ŸÖÿ™ŸàŸÇÿπÿ©: ${detectedWord}`);\n      if ([\"yes\", \"no\", \"go\", \"stop\"].includes(detectedWord)) {\n        alert(`üö® ŸÉŸÑŸÖÿ© ŸÖÿ¥ÿ™ÿ®Ÿá ÿ®Ÿáÿß: ${detectedWord}`);\n        setViolations(prev => {\n          const updated = prev + 1;\n          if (updated >= 3) {\n            setExamTerminated(true);\n          }\n          return updated;\n        });\n      }\n    }, {\n      includeSpectrogram: false,\n      probabilityThreshold: 0.85,\n      overlapFactor: 0.5\n    });\n  };\n  const setupVoiceAnalysis = stream => {\n    try {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      analyserRef.current.fftSize = 4096;\n      const source = audioContextRef.current.createMediaStreamSource(stream);\n      source.connect(analyserRef.current);\n      setTimeout(() => {\n        voiceProfileRef.current.baseline = createVoiceProfile();\n        voiceProfileRef.current.active = true;\n      }, 3000);\n      const analyzeVoice = () => {\n        if (!voiceProfileRef.current.active) {\n          requestAnimationFrame(analyzeVoice);\n          return;\n        }\n        const currentProfile = createVoiceProfile();\n        const isMultiple = compareVoiceProfiles(voiceProfileRef.current.baseline, currentProfile);\n        if (isMultiple && Date.now() - voiceProfileRef.current.lastAlert > 5000) {\n          setMultipleVoicesDetected(true);\n          voiceProfileRef.current.lastAlert = Date.now();\n        } else {\n          setMultipleVoicesDetected(false);\n        }\n        requestAnimationFrame(analyzeVoice);\n      };\n      analyzeVoice();\n    } catch (error) {\n      console.error(\"Voice analysis error:\", error);\n    }\n  };\n  const createVoiceProfile = () => {\n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    analyserRef.current.getFloatFrequencyData(dataArray);\n    const profile = {\n      lowRange: 0,\n      midRange: 0,\n      highRange: 0,\n      peakCount: 0,\n      totalEnergy: 0\n    };\n    for (let i = 0; i < bufferLength; i++) {\n      const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\n      const value = Math.pow(10, dataArray[i] / 20);\n      if (freq >= 85 && freq < 300) profile.lowRange += value;else if (freq >= 300 && freq < 1000) profile.midRange += value;else if (freq >= 1000 && freq < 4000) profile.highRange += value;\n      if (dataArray[i] > -40) profile.peakCount++;\n      profile.totalEnergy += value;\n    }\n    return profile;\n  };\n  const compareVoiceProfiles = (baseline, current) => {\n    const lowDiff = Math.abs(current.lowRange - baseline.lowRange) / baseline.lowRange;\n    const midDiff = Math.abs(current.midRange - baseline.midRange) / baseline.midRange;\n    const highDiff = Math.abs(current.highRange - baseline.highRange) / baseline.highRange;\n    const energyDiff = Math.abs(current.totalEnergy - baseline.totalEnergy) / baseline.totalEnergy;\n    const peakDiff = Math.abs(current.peakCount - baseline.peakCount);\n    return (lowDiff > 0.6 || midDiff > 0.6 || highDiff > 0.6) && energyDiff > 0.4 && peakDiff > 15;\n  };\n  const initializeSpeechRecognition = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      console.error(\"Speech Recognition API not supported in this browser\");\n      return;\n    }\n    recognitionRef.current = new SpeechRecognition();\n    recognitionRef.current.continuous = true;\n    recognitionRef.current.interimResults = false;\n    recognitionRef.current.lang = \"ar-SA\";\n    recognitionRef.current.onresult = event => {\n      const last = event.results.length - 1;\n      const text = event.results[last][0].transcript;\n      setTranscript(text);\n    };\n    recognitionRef.current.onerror = event => {\n      console.error(\"Speech recognition error\", event.error);\n    };\n    recognitionRef.current.start();\n    recognitionRef.current.onend = () => {\n      recognitionRef.current.start();\n    };\n  };\n  useEffect(() => {\n    if (mediaStream) {\n      mediaStream.getTracks().forEach(track => track.enabled = true);\n    }\n    return () => {\n      var _recognitionRef$curre, _audioContextRef$curr;\n      (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n      (_audioContextRef$curr = audioContextRef.current) === null || _audioContextRef$curr === void 0 ? void 0 : _audioContextRef$curr.close();\n    };\n  }, [mediaStream]);\n  const detectFace = async () => {\n    if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n      const video = webcamRef.current.video;\n      const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\n      const isFacePresent = detections.length > 0;\n      setFaceDetected(isFacePresent);\n      setNoFaceDuration(prev => isFacePresent ? 0 : prev + 1);\n    }\n  };\n  useEffect(() => {\n    if (permissionsGranted) {\n      const interval = setInterval(detectFace, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [permissionsGranted]);\n  useEffect(() => {\n    if (noFaceDuration >= 15) {\n      alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\n      setNoFaceDuration(0);\n    }\n  }, [noFaceDuration]);\n  const detectSound = useCallback(() => {\n    if (!mediaStream) return;\n    const audioContext = new AudioContext();\n    const analyser = audioContext.createAnalyser();\n    const source = audioContext.createMediaStreamSource(mediaStream);\n    source.connect(analyser);\n    analyser.fftSize = 256;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const checkSound = () => {\n      analyser.getByteFrequencyData(dataArray);\n      const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n      setSoundDetected(volume > 10);\n      requestAnimationFrame(checkSound);\n    };\n    checkSound();\n  }, [mediaStream]);\n  useEffect(() => {\n    if (permissionsGranted) {\n      detectSound();\n    }\n  }, [permissionsGranted, detectSound]);\n  useEffect(() => {\n    if (multipleVoicesDetected) {\n      const newViolations = violations + 1;\n      setViolations(newViolations);\n      alert(`üö® MULTIPLE VOICES DETECTED! (Violation ${newViolations}/3)`);\n      if (newViolations >= 3) {\n        setExamTerminated(true);\n      }\n    }\n  }, [multipleVoicesDetected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"continuous-auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Exam Proctoring System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this), showPermissionMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"permission-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Exam Proctoring Setup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This exam requires camera and microphone access for proctoring purposes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"permission-requirements\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2713 Face detection must be enabled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2713 Microphone must be active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"permission-button\",\n        onClick: getPermissions,\n        children: \"Enable Camera & Microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }, this), permissionsGranted && !examTerminated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monitoring-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-section\",\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          audio: true,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\",\n          className: \"webcam\",\n          videoConstraints: {\n            facingMode: \"user\",\n            width: 480,\n            height: 360\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicators\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${faceDetected ? \"active\" : \"\"}`,\n            children: faceDetected ? \"Face Detected\" : \"No Face Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${soundDetected ? \"active\" : \"\"}`,\n            children: soundDetected ? \"Sound Detected\" : \"No Sound Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this), multipleVoicesDetected && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator warning\",\n            children: \"Multiple Voices Detected!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Arabic Speech Transcript\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"violation-counter\",\n              children: [\"Violations: \", violations, \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-content\",\n            dir: \"rtl\",\n            children: transcript || \"Waiting for audio input...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `voice-detection-status ${multipleVoicesDetected ? \"multiple\" : \"\"}`,\n            children: multipleVoicesDetected ? \"Multiple voices detected!\" : \"Voice analysis active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 9\n    }, this), examTerminated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"termination-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u2716 Exam Terminated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Due to multiple violations detected. Please contact your instructor.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total violations: \", violations]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 433,\n    columnNumber: 5\n  }, this);\n};\n_s(ContinuousAuth, \"BvtY+JY7BvFbZGRWF350TAFO7GQ=\");\n_c = ContinuousAuth;\nexport default ContinuousAuth;\nvar _c;\n$RefreshReg$(_c, \"ContinuousAuth\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","faceapi","speechCommands","Webcam","jsxDEV","_jsxDEV","ContinuousAuth","_s","webcamRef","faceDetected","setFaceDetected","soundDetected","setSoundDetected","permissionsGranted","setPermissionsGranted","examTerminated","setExamTerminated","mediaStream","setMediaStream","showPermissionMessage","setShowPermissionMessage","noFaceDuration","setNoFaceDuration","transcript","setTranscript","violations","setViolations","recognitionRef","multipleVoicesDetected","setMultipleVoicesDetected","audioContextRef","analyserRef","voiceProfileRef","baseline","lastAlert","active","loadModels","nets","tinyFaceDetector","loadFromUri","console","log","getPermissions","stream","navigator","mediaDevices","getUserMedia","video","audio","initializeSpeechRecognition","setupVoiceAnalysis","error","alert","setupSpeechCommandDetection","recognizer","create","ensureModelLoaded","listen","result","scores","labels","wordLabels","maxScoreIndex","indexOf","Math","max","detectedWord","includes","prev","updated","includeSpectrogram","probabilityThreshold","overlapFactor","current","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","source","createMediaStreamSource","connect","setTimeout","createVoiceProfile","analyzeVoice","requestAnimationFrame","currentProfile","isMultiple","compareVoiceProfiles","Date","now","bufferLength","frequencyBinCount","dataArray","Float32Array","getFloatFrequencyData","profile","lowRange","midRange","highRange","peakCount","totalEnergy","i","freq","sampleRate","value","pow","lowDiff","abs","midDiff","highDiff","energyDiff","peakDiff","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","last","results","length","text","onerror","start","onend","getTracks","forEach","track","enabled","_recognitionRef$curre","_audioContextRef$curr","stop","close","detectFace","readyState","detections","detectAllFaces","TinyFaceDetectorOptions","isFacePresent","interval","setInterval","clearInterval","detectSound","audioContext","analyser","Uint8Array","checkSound","getByteFrequencyData","volume","reduce","sum","newViolations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","screenshotFormat","videoConstraints","facingMode","width","height","dir","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/continous-authentication1/continous-authentication1/continous-authentication/continous-authentication/src/ContinuousAuth.js"],"sourcesContent":["// import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n// import * as faceapi from \"face-api.js\";\r\n// import Webcam from \"react-webcam\";\r\n// import axios from \"axios\";\r\n// import \"./ContinuousAuth.css\";\r\n\r\n// const ContinuousAuth = () => {\r\n//   const webcamRef = useRef(null);\r\n//   const [faceDetected, setFaceDetected] = useState(false);\r\n//   const [soundDetected, setSoundDetected] = useState(false);\r\n//   const [currentImage, setCurrentImage] = useState(null);\r\n//   const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n//   const [examTerminated, setExamTerminated] = useState(false);\r\n//   const [mediaStream, setMediaStream] = useState(null);\r\n//   const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n//   const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     const loadModels = async () => {\r\n//       await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n//       console.log(\"Face Detection Model Loaded\");\r\n//     };\r\n//     loadModels();\r\n//   }, []);\r\n\r\n//   const getPermissions = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n//       setMediaStream(stream);\r\n//       setPermissionsGranted(true);\r\n//       setShowPermissionMessage(false);\r\n//       fetchIpAddress(); // Call to fetch IP address when permissions are granted\r\n//     } catch (error) {\r\n//       alert(\"Please allow access to camera and microphone.\");\r\n//       setShowPermissionMessage(true);\r\n//     }\r\n//   };\r\n\r\n//   const fetchIpAddress = async () => {\r\n//     try {\r\n//       const response = await fetch(\"https://api.ipify.org?format=json\");\r\n//       const data = await response.json();\r\n//       alert(`Your IP Address: ${data.ip}`);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching IP address:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (mediaStream) {\r\n//       const tracks = mediaStream.getTracks();\r\n//       tracks.forEach((track) => {\r\n//         track.enabled = true;\r\n//       });\r\n//     }\r\n//   }, [mediaStream]);\r\n\r\n//   const detectFace = async () => {\r\n//     if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n//       const video = webcamRef.current.video;\r\n//       const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n//       const isFacePresent = detections.length > 0;\r\n//       setFaceDetected(isFacePresent);\r\n//       setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       const interval = setInterval(detectFace, 1000);\r\n//       return () => clearInterval(interval);\r\n//     }\r\n//   }, [permissionsGranted]);\r\n\r\n//   useEffect(() => {\r\n//     if (noFaceDuration >= 15) {\r\n//       alert(\"‚ö†Ô∏è Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n//       setNoFaceDuration(0);\r\n//     }\r\n//   }, [noFaceDuration]);\r\n\r\n//   const detectSound = useCallback(() => {\r\n//     if (!mediaStream) return;\r\n\r\n//     const audioContext = new AudioContext();\r\n//     const analyser = audioContext.createAnalyser();\r\n//     const source = audioContext.createMediaStreamSource(mediaStream);\r\n//     source.connect(analyser);\r\n//     analyser.fftSize = 256;\r\n//     const bufferLength = analyser.frequencyBinCount;\r\n//     const dataArray = new Uint8Array(bufferLength);\r\n\r\n//     const checkSound = () => {\r\n//       analyser.getByteFrequencyData(dataArray);\r\n//       const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n//       setSoundDetected(volume > 10);\r\n//       requestAnimationFrame(checkSound);\r\n//     };\r\n//     checkSound();\r\n//   }, [mediaStream]);\r\n\r\n//   useEffect(() => {\r\n//     if (permissionsGranted) {\r\n//       detectSound();\r\n//     }\r\n//   }, [permissionsGranted, detectSound]);\r\n\r\n//   return (\r\n//     <div className=\"continuous-auth-container\">\r\n//       <h2>Continuous Authentication</h2>\r\n\r\n//       {showPermissionMessage && (\r\n//         <div className=\"permission-message\">\r\n//           <p>Please allow access to your camera and microphone to start the exam.</p>\r\n//           <button onClick={getPermissions}>Allow Camera and Microphone</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {permissionsGranted ? (\r\n//         <>\r\n//           <Webcam\r\n//             audio={true}\r\n//             ref={webcamRef}\r\n//             screenshotFormat=\"image/jpeg\"\r\n//             className=\"webcam\"\r\n//             videoConstraints={{\r\n//               facingMode: \"user\",\r\n//               width: 720,\r\n//               height: 400,\r\n//             }}\r\n//           />\r\n//           <p>Camera and microphone are active for proctoring.</p>\r\n\r\n//           <div className=\"status-buttons-container\">\r\n//             <div className=\"status-buttons\">\r\n//               <button className={faceDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n//                 {faceDetected ? \"Face Detected ‚úÖ\" : \"No Face Detected ‚ùå\"}\r\n//               </button>\r\n//               <button className={soundDetected ? \"detected-btn\" : \"not-detected-btn\"}>\r\n//                 {soundDetected ? \"Sound Detected üîä\" : \"No Sound Detected üîá\"}\r\n//               </button>\r\n//             </div>\r\n\r\n//             <div className=\"captured-images\">\r\n//               {currentImage && <img src={currentImage} alt=\"Captured\" className=\"small-image\" />}\r\n//             </div>\r\n//           </div>\r\n//         </>\r\n//       ) : (\r\n//         <p>Waiting for camera and microphone access...</p>\r\n//       )}\r\n\r\n//       {examTerminated && <p className=\"mismatch-count\">Exam Terminated due to 3 mismatches.</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ContinuousAuth;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport * as speechCommands from \"@tensorflow-models/speech-commands\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./ContinuousAuth.css\";\r\n\r\nconst ContinuousAuth = () => {\r\n  const webcamRef = useRef(null);\r\n  const [faceDetected, setFaceDetected] = useState(false);\r\n  const [soundDetected, setSoundDetected] = useState(false);\r\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\r\n  const [examTerminated, setExamTerminated] = useState(false);\r\n  const [mediaStream, setMediaStream] = useState(null);\r\n  const [showPermissionMessage, setShowPermissionMessage] = useState(true);\r\n  const [noFaceDuration, setNoFaceDuration] = useState(0);\r\n  const [transcript, setTranscript] = useState(\"\");\r\n  const [violations, setViolations] = useState(0);\r\n  const recognitionRef = useRef(null);\r\n  const [multipleVoicesDetected, setMultipleVoicesDetected] = useState(false);\r\n  const audioContextRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const voiceProfileRef = useRef({ baseline: null, lastAlert: 0, active: false });\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n      console.log(\"‚úÖ Face Detection Model Loaded\");\r\n    };\r\n    loadModels();\r\n  }, []);\r\n\r\n  const getPermissions = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n      setMediaStream(stream);\r\n      setPermissionsGranted(true);\r\n      setShowPermissionMessage(false);\r\n      initializeSpeechRecognition();\r\n      setupVoiceAnalysis(stream);\r\n    } catch (error) {\r\n      alert(\"Please allow access to camera and microphone.\");\r\n      setShowPermissionMessage(true);\r\n    }\r\n  };\r\n\r\n  // ‚úÖ SpeechCommands Model for keyword detection\r\n  useEffect(() => {\r\n    if (permissionsGranted) {\r\n      setupSpeechCommandDetection();\r\n    }\r\n  }, [permissionsGranted]);\r\n\r\n  const setupSpeechCommandDetection = async () => {\r\n    const recognizer = speechCommands.create('BROWSER_FFT');\r\n    await recognizer.ensureModelLoaded();\r\n\r\n    recognizer.listen(result => {\r\n      const scores = result.scores;\r\n      const labels = recognizer.wordLabels();\r\n      const maxScoreIndex = scores.indexOf(Math.max(...scores));\r\n      const detectedWord = labels[maxScoreIndex];\r\n\r\n      console.log(`‚úÖ ŸÉŸÑŸÖÿ© ŸÖÿ™ŸàŸÇÿπÿ©: ${detectedWord}`);\r\n\r\n      if ([\"yes\", \"no\", \"go\", \"stop\"].includes(detectedWord)) {\r\n        alert(`üö® ŸÉŸÑŸÖÿ© ŸÖÿ¥ÿ™ÿ®Ÿá ÿ®Ÿáÿß: ${detectedWord}`);\r\n        setViolations(prev => {\r\n          const updated = prev + 1;\r\n          if (updated >= 3) {\r\n            setExamTerminated(true);\r\n          }\r\n          return updated;\r\n        });\r\n      }\r\n    }, {\r\n      includeSpectrogram: false,\r\n      probabilityThreshold: 0.85,\r\n      overlapFactor: 0.5\r\n    });\r\n  };\r\n\r\n  const setupVoiceAnalysis = (stream) => {\r\n    try {\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      analyserRef.current = audioContextRef.current.createAnalyser();\r\n      analyserRef.current.fftSize = 4096;\r\n\r\n      const source = audioContextRef.current.createMediaStreamSource(stream);\r\n      source.connect(analyserRef.current);\r\n\r\n      setTimeout(() => {\r\n        voiceProfileRef.current.baseline = createVoiceProfile();\r\n        voiceProfileRef.current.active = true;\r\n      }, 3000);\r\n\r\n      const analyzeVoice = () => {\r\n        if (!voiceProfileRef.current.active) {\r\n          requestAnimationFrame(analyzeVoice);\r\n          return;\r\n        }\r\n\r\n        const currentProfile = createVoiceProfile();\r\n        const isMultiple = compareVoiceProfiles(voiceProfileRef.current.baseline, currentProfile);\r\n\r\n        if (isMultiple && Date.now() - voiceProfileRef.current.lastAlert > 5000) {\r\n          setMultipleVoicesDetected(true);\r\n          voiceProfileRef.current.lastAlert = Date.now();\r\n        } else {\r\n          setMultipleVoicesDetected(false);\r\n        }\r\n\r\n        requestAnimationFrame(analyzeVoice);\r\n      };\r\n\r\n      analyzeVoice();\r\n    } catch (error) {\r\n      console.error(\"Voice analysis error:\", error);\r\n    }\r\n  };\r\n\r\n  const createVoiceProfile = () => {\r\n    const bufferLength = analyserRef.current.frequencyBinCount;\r\n    const dataArray = new Float32Array(bufferLength);\r\n    analyserRef.current.getFloatFrequencyData(dataArray);\r\n\r\n    const profile = {\r\n      lowRange: 0,\r\n      midRange: 0,\r\n      highRange: 0,\r\n      peakCount: 0,\r\n      totalEnergy: 0\r\n    };\r\n\r\n    for (let i = 0; i < bufferLength; i++) {\r\n      const freq = i * audioContextRef.current.sampleRate / analyserRef.current.fftSize;\r\n      const value = Math.pow(10, dataArray[i]/20);\r\n\r\n      if (freq >= 85 && freq < 300) profile.lowRange += value;\r\n      else if (freq >= 300 && freq < 1000) profile.midRange += value;\r\n      else if (freq >= 1000 && freq < 4000) profile.highRange += value;\r\n\r\n      if (dataArray[i] > -40) profile.peakCount++;\r\n      profile.totalEnergy += value;\r\n    }\r\n\r\n    return profile;\r\n  };\r\n\r\n  const compareVoiceProfiles = (baseline, current) => {\r\n    const lowDiff = Math.abs(current.lowRange - baseline.lowRange) / baseline.lowRange;\r\n    const midDiff = Math.abs(current.midRange - baseline.midRange) / baseline.midRange;\r\n    const highDiff = Math.abs(current.highRange - baseline.highRange) / baseline.highRange;\r\n    const energyDiff = Math.abs(current.totalEnergy - baseline.totalEnergy) / baseline.totalEnergy;\r\n    const peakDiff = Math.abs(current.peakCount - baseline.peakCount);\r\n\r\n    return (\r\n      (lowDiff > 0.6 || midDiff > 0.6 || highDiff > 0.6) &&\r\n      energyDiff > 0.4 &&\r\n      peakDiff > 15\r\n    );\r\n  };\r\n\r\n  const initializeSpeechRecognition = () => {\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if (!SpeechRecognition) {\r\n      console.error(\"Speech Recognition API not supported in this browser\");\r\n      return;\r\n    }\r\n\r\n    recognitionRef.current = new SpeechRecognition();\r\n    recognitionRef.current.continuous = true;\r\n    recognitionRef.current.interimResults = false;\r\n    recognitionRef.current.lang = \"ar-SA\";\r\n\r\n    recognitionRef.current.onresult = (event) => {\r\n      const last = event.results.length - 1;\r\n      const text = event.results[last][0].transcript;\r\n      setTranscript(text);\r\n    };\r\n\r\n    recognitionRef.current.onerror = (event) => {\r\n      console.error(\"Speech recognition error\", event.error);\r\n    };\r\n\r\n    recognitionRef.current.start();\r\n    recognitionRef.current.onend = () => {\r\n      recognitionRef.current.start();\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mediaStream) {\r\n      mediaStream.getTracks().forEach((track) => (track.enabled = true));\r\n    }\r\n\r\n    return () => {\r\n      recognitionRef.current?.stop();\r\n      audioContextRef.current?.close();\r\n    };\r\n  }, [mediaStream]);\r\n\r\n  const detectFace = async () => {\r\n    if (webcamRef.current && webcamRef.current.video.readyState === 4) {\r\n      const video = webcamRef.current.video;\r\n      const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions());\r\n      const isFacePresent = detections.length > 0;\r\n      setFaceDetected(isFacePresent);\r\n      setNoFaceDuration((prev) => (isFacePresent ? 0 : prev + 1));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (permissionsGranted) {\r\n      const interval = setInterval(detectFace, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [permissionsGranted]);\r\n\r\n  useEffect(() => {\r\n    if (noFaceDuration >= 15) {\r\n      alert(\"‚ö† Face not detected for 15 seconds. Please make sure your face is clearly visible.\");\r\n      setNoFaceDuration(0);\r\n    }\r\n  }, [noFaceDuration]);\r\n\r\n  const detectSound = useCallback(() => {\r\n    if (!mediaStream) return;\r\n\r\n    const audioContext = new AudioContext();\r\n    const analyser = audioContext.createAnalyser();\r\n    const source = audioContext.createMediaStreamSource(mediaStream);\r\n    source.connect(analyser);\r\n    analyser.fftSize = 256;\r\n    const bufferLength = analyser.frequencyBinCount;\r\n    const dataArray = new Uint8Array(bufferLength);\r\n\r\n    const checkSound = () => {\r\n      analyser.getByteFrequencyData(dataArray);\r\n      const volume = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\r\n      setSoundDetected(volume > 10);\r\n      requestAnimationFrame(checkSound);\r\n    };\r\n    checkSound();\r\n  }, [mediaStream]);\r\n\r\n  useEffect(() => {\r\n    if (permissionsGranted) {\r\n      detectSound();\r\n    }\r\n  }, [permissionsGranted, detectSound]);\r\n\r\n  useEffect(() => {\r\n    if (multipleVoicesDetected) {\r\n      const newViolations = violations + 1;\r\n      setViolations(newViolations);\r\n      alert(`üö® MULTIPLE VOICES DETECTED! (Violation ${newViolations}/3)`);\r\n      if (newViolations >= 3) {\r\n        setExamTerminated(true);\r\n      }\r\n    }\r\n  }, [multipleVoicesDetected]);\r\n\r\n  return (\r\n    <div className=\"continuous-auth-container\">\r\n      <h2>Exam Proctoring System</h2>\r\n\r\n      {showPermissionMessage && (\r\n        <div className=\"permission-message\">\r\n          <h3>Exam Proctoring Setup</h3>\r\n          <p>This exam requires camera and microphone access for proctoring purposes.</p>\r\n          <div className=\"permission-requirements\">\r\n            <p>‚úì Face detection must be enabled</p>\r\n            <p>‚úì Microphone must be active</p>\r\n          </div>\r\n          <button className=\"permission-button\" onClick={getPermissions}>\r\n            Enable Camera & Microphone\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {permissionsGranted && !examTerminated && (\r\n        <div className=\"monitoring-container\">\r\n          <div className=\"video-section\">\r\n            <Webcam\r\n              audio={true}\r\n              ref={webcamRef}\r\n              screenshotFormat=\"image/jpeg\"\r\n              className=\"webcam\"\r\n              videoConstraints={{ facingMode: \"user\", width: 480, height: 360 }}\r\n            />\r\n            <div className=\"status-indicators\">\r\n              <div className={`status-indicator ${faceDetected ? \"active\" : \"\"}`}>\r\n                {faceDetected ? \"Face Detected\" : \"No Face Detected\"}\r\n              </div>\r\n              <div className={`status-indicator ${soundDetected ? \"active\" : \"\"}`}>\r\n                {soundDetected ? \"Sound Detected\" : \"No Sound Detected\"}\r\n              </div>\r\n              {multipleVoicesDetected && (\r\n                <div className=\"status-indicator warning\">\r\n                  Multiple Voices Detected!\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"transcript-section\">\r\n            <div className=\"transcript-box\">\r\n              <div className=\"transcript-header\">\r\n                <span>Arabic Speech Transcript</span>\r\n                <span className=\"violation-counter\">Violations: {violations}/3</span>\r\n              </div>\r\n              <div className=\"transcript-content\" dir=\"rtl\">\r\n                {transcript || \"Waiting for audio input...\"}\r\n              </div>\r\n              <div className={`voice-detection-status ${multipleVoicesDetected ? \"multiple\" : \"\"}`}>\r\n                {multipleVoicesDetected \r\n                  ? \"Multiple voices detected!\" \r\n                  : \"Voice analysis active\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {examTerminated && (\r\n        <div className=\"termination-message\">\r\n          <h3>‚úñ Exam Terminated</h3>\r\n          <p>Due to multiple violations detected. Please contact your instructor.</p>\r\n          <p>Total violations: {violations}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContinuousAuth;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAYA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAO,KAAKC,OAAO,MAAM,aAAa;AACtC,OAAO,KAAKC,cAAc,MAAM,oCAAoC;AACpE,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACgB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGjB,QAAQ,CAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}